Search.setIndex({"docnames": ["index", "resources/contributing", "resources/support", "tt_metal_models/get_performance", "tt_metal_models/get_started", "ttnn/about", "ttnn/adding_new_ttnn_operation", "ttnn/api", "ttnn/api/ttnn.GetDefaultDevice", "ttnn/api/ttnn.SetDefaultDevice", "ttnn/api/ttnn.abs", "ttnn/api/ttnn.abs_bw", "ttnn/api/ttnn.acos", "ttnn/api/ttnn.acos_bw", "ttnn/api/ttnn.acosh", "ttnn/api/ttnn.acosh_bw", "ttnn/api/ttnn.add", "ttnn/api/ttnn.add_bw", "ttnn/api/ttnn.addalpha", "ttnn/api/ttnn.addalpha_bw", "ttnn/api/ttnn.addcdiv", "ttnn/api/ttnn.addcdiv_bw", "ttnn/api/ttnn.addcmul", "ttnn/api/ttnn.addcmul_bw", "ttnn/api/ttnn.all_gather", "ttnn/api/ttnn.angle", "ttnn/api/ttnn.angle_bw", "ttnn/api/ttnn.arange", "ttnn/api/ttnn.argmax", "ttnn/api/ttnn.as_tensor", "ttnn/api/ttnn.asin", "ttnn/api/ttnn.asin_bw", "ttnn/api/ttnn.asinh", "ttnn/api/ttnn.asinh_bw", "ttnn/api/ttnn.assign_bw", "ttnn/api/ttnn.atan", "ttnn/api/ttnn.atan2", "ttnn/api/ttnn.atan2_bw", "ttnn/api/ttnn.atan_bw", "ttnn/api/ttnn.atanh", "ttnn/api/ttnn.atanh_bw", "ttnn/api/ttnn.batch_norm", "ttnn/api/ttnn.bias_gelu_bw", "ttnn/api/ttnn.bitwise_and", "ttnn/api/ttnn.bitwise_left_shift", "ttnn/api/ttnn.bitwise_not", "ttnn/api/ttnn.bitwise_or", "ttnn/api/ttnn.bitwise_right_shift", "ttnn/api/ttnn.bitwise_xor", "ttnn/api/ttnn.cbrt", "ttnn/api/ttnn.ceil", "ttnn/api/ttnn.ceil_bw", "ttnn/api/ttnn.celu", "ttnn/api/ttnn.celu_bw", "ttnn/api/ttnn.clamp", "ttnn/api/ttnn.clamp_bw", "ttnn/api/ttnn.clip", "ttnn/api/ttnn.clip_bw", "ttnn/api/ttnn.clone", "ttnn/api/ttnn.close_device", "ttnn/api/ttnn.concat", "ttnn/api/ttnn.concat_bw", "ttnn/api/ttnn.conj", "ttnn/api/ttnn.conj_bw", "ttnn/api/ttnn.cos", "ttnn/api/ttnn.cos_bw", "ttnn/api/ttnn.cosh", "ttnn/api/ttnn.cosh_bw", "ttnn/api/ttnn.create_sharded_memory_config", "ttnn/api/ttnn.deallocate", "ttnn/api/ttnn.deg2rad", "ttnn/api/ttnn.deg2rad_bw", "ttnn/api/ttnn.digamma", "ttnn/api/ttnn.digamma_bw", "ttnn/api/ttnn.div", "ttnn/api/ttnn.div_bw", "ttnn/api/ttnn.div_no_nan", "ttnn/api/ttnn.div_no_nan_bw", "ttnn/api/ttnn.downsample", "ttnn/api/ttnn.dump_tensor", "ttnn/api/ttnn.elu", "ttnn/api/ttnn.elu_bw", "ttnn/api/ttnn.embedding", "ttnn/api/ttnn.embedding_bw", "ttnn/api/ttnn.empty", "ttnn/api/ttnn.empty_like", "ttnn/api/ttnn.eq", "ttnn/api/ttnn.eq_", "ttnn/api/ttnn.eqz", "ttnn/api/ttnn.erf", "ttnn/api/ttnn.erf_bw", "ttnn/api/ttnn.erfc", "ttnn/api/ttnn.erfc_bw", "ttnn/api/ttnn.erfinv", "ttnn/api/ttnn.erfinv_bw", "ttnn/api/ttnn.exp", "ttnn/api/ttnn.exp2", "ttnn/api/ttnn.exp2_bw", "ttnn/api/ttnn.exp_bw", "ttnn/api/ttnn.experimental.all_reduce", "ttnn/api/ttnn.experimental.dropout", "ttnn/api/ttnn.experimental.rotary_embedding", "ttnn/api/ttnn.expm1", "ttnn/api/ttnn.expm1_bw", "ttnn/api/ttnn.fill", "ttnn/api/ttnn.fill_bw", "ttnn/api/ttnn.fill_ones_rm", "ttnn/api/ttnn.fill_rm", "ttnn/api/ttnn.fill_zero_bw", "ttnn/api/ttnn.floor", "ttnn/api/ttnn.floor_bw", "ttnn/api/ttnn.floor_div", "ttnn/api/ttnn.fmod", "ttnn/api/ttnn.fmod_bw", "ttnn/api/ttnn.format_input_tensor", "ttnn/api/ttnn.format_output_tensor", "ttnn/api/ttnn.frac", "ttnn/api/ttnn.frac_bw", "ttnn/api/ttnn.from_device", "ttnn/api/ttnn.from_torch", "ttnn/api/ttnn.full", "ttnn/api/ttnn.full_like", "ttnn/api/ttnn.gcd", "ttnn/api/ttnn.ge", "ttnn/api/ttnn.ge_", "ttnn/api/ttnn.geglu", "ttnn/api/ttnn.gelu", "ttnn/api/ttnn.gelu_bw", "ttnn/api/ttnn.gez", "ttnn/api/ttnn.global_avg_pool2d", "ttnn/api/ttnn.glu", "ttnn/api/ttnn.group_norm", "ttnn/api/ttnn.gt", "ttnn/api/ttnn.gt_", "ttnn/api/ttnn.gtz", "ttnn/api/ttnn.hardshrink", "ttnn/api/ttnn.hardshrink_bw", "ttnn/api/ttnn.hardsigmoid", "ttnn/api/ttnn.hardsigmoid_bw", "ttnn/api/ttnn.hardswish", "ttnn/api/ttnn.hardswish_bw", "ttnn/api/ttnn.hardtanh", "ttnn/api/ttnn.hardtanh_bw", "ttnn/api/ttnn.heaviside", "ttnn/api/ttnn.hypot", "ttnn/api/ttnn.hypot_bw", "ttnn/api/ttnn.i0", "ttnn/api/ttnn.i0_bw", "ttnn/api/ttnn.identity", "ttnn/api/ttnn.imag", "ttnn/api/ttnn.imag_bw", "ttnn/api/ttnn.indexed_fill", "ttnn/api/ttnn.is_imag", "ttnn/api/ttnn.is_real", "ttnn/api/ttnn.isclose", "ttnn/api/ttnn.isfinite", "ttnn/api/ttnn.isinf", "ttnn/api/ttnn.isnan", "ttnn/api/ttnn.isneginf", "ttnn/api/ttnn.isposinf", "ttnn/api/ttnn.kv_cache.fill_cache_for_user_", "ttnn/api/ttnn.kv_cache.update_cache_for_token_", "ttnn/api/ttnn.l1_loss", "ttnn/api/ttnn.layer_norm", "ttnn/api/ttnn.lcm", "ttnn/api/ttnn.ldexp", "ttnn/api/ttnn.ldexp_bw", "ttnn/api/ttnn.le", "ttnn/api/ttnn.le_", "ttnn/api/ttnn.leaky_relu", "ttnn/api/ttnn.leaky_relu_bw", "ttnn/api/ttnn.lerp", "ttnn/api/ttnn.lerp_bw", "ttnn/api/ttnn.lez", "ttnn/api/ttnn.lgamma", "ttnn/api/ttnn.lgamma_bw", "ttnn/api/ttnn.linear", "ttnn/api/ttnn.load_tensor", "ttnn/api/ttnn.log", "ttnn/api/ttnn.log10", "ttnn/api/ttnn.log10_bw", "ttnn/api/ttnn.log1p", "ttnn/api/ttnn.log1p_bw", "ttnn/api/ttnn.log2", "ttnn/api/ttnn.log2_bw", "ttnn/api/ttnn.log_bw", "ttnn/api/ttnn.log_sigmoid", "ttnn/api/ttnn.log_sigmoid_bw", "ttnn/api/ttnn.logaddexp", "ttnn/api/ttnn.logaddexp2", "ttnn/api/ttnn.logaddexp2_bw", "ttnn/api/ttnn.logaddexp_bw", "ttnn/api/ttnn.logical_and", "ttnn/api/ttnn.logical_and_", "ttnn/api/ttnn.logical_not", "ttnn/api/ttnn.logical_not_", "ttnn/api/ttnn.logical_or", "ttnn/api/ttnn.logical_or_", "ttnn/api/ttnn.logical_xor", "ttnn/api/ttnn.logical_xor_", "ttnn/api/ttnn.logit", "ttnn/api/ttnn.logit_bw", "ttnn/api/ttnn.logiteps_bw", "ttnn/api/ttnn.lt", "ttnn/api/ttnn.lt_", "ttnn/api/ttnn.ltz", "ttnn/api/ttnn.mac", "ttnn/api/ttnn.manage_device", "ttnn/api/ttnn.matmul", "ttnn/api/ttnn.max", "ttnn/api/ttnn.max_bw", "ttnn/api/ttnn.max_pool2d", "ttnn/api/ttnn.maximum", "ttnn/api/ttnn.mean", "ttnn/api/ttnn.min", "ttnn/api/ttnn.min_bw", "ttnn/api/ttnn.minimum", "ttnn/api/ttnn.mish", "ttnn/api/ttnn.model_preprocessing.preprocess_model", "ttnn/api/ttnn.model_preprocessing.preprocess_model_parameters", "ttnn/api/ttnn.moreh_sum", "ttnn/api/ttnn.mse_loss", "ttnn/api/ttnn.mul_bw", "ttnn/api/ttnn.multigammaln", "ttnn/api/ttnn.multigammaln_bw", "ttnn/api/ttnn.multiply", "ttnn/api/ttnn.ne", "ttnn/api/ttnn.ne_", "ttnn/api/ttnn.neg", "ttnn/api/ttnn.neg_bw", "ttnn/api/ttnn.nextafter", "ttnn/api/ttnn.nez", "ttnn/api/ttnn.nonzero", "ttnn/api/ttnn.normalize_global", "ttnn/api/ttnn.normalize_hw", "ttnn/api/ttnn.ones", "ttnn/api/ttnn.ones_like", "ttnn/api/ttnn.open_device", "ttnn/api/ttnn.outer", "ttnn/api/ttnn.pad", "ttnn/api/ttnn.pad_to_tile_shape", "ttnn/api/ttnn.permute", "ttnn/api/ttnn.polar", "ttnn/api/ttnn.polar_bw", "ttnn/api/ttnn.polygamma", "ttnn/api/ttnn.polygamma_bw", "ttnn/api/ttnn.polyval", "ttnn/api/ttnn.pow", "ttnn/api/ttnn.pow_bw", "ttnn/api/ttnn.prelu", "ttnn/api/ttnn.prod", "ttnn/api/ttnn.prod_bw", "ttnn/api/ttnn.rad2deg", "ttnn/api/ttnn.rad2deg_bw", "ttnn/api/ttnn.rdiv", "ttnn/api/ttnn.rdiv_bw", "ttnn/api/ttnn.real", "ttnn/api/ttnn.real_bw", "ttnn/api/ttnn.reallocate", "ttnn/api/ttnn.reciprocal", "ttnn/api/ttnn.reciprocal_bw", "ttnn/api/ttnn.reduce_scatter", "ttnn/api/ttnn.register_post_operation_hook", "ttnn/api/ttnn.register_pre_operation_hook", "ttnn/api/ttnn.reglu", "ttnn/api/ttnn.relu", "ttnn/api/ttnn.relu6", "ttnn/api/ttnn.relu6_bw", "ttnn/api/ttnn.relu_bw", "ttnn/api/ttnn.relu_max", "ttnn/api/ttnn.relu_min", "ttnn/api/ttnn.remainder", "ttnn/api/ttnn.remainder_bw", "ttnn/api/ttnn.repeat", "ttnn/api/ttnn.repeat_bw", "ttnn/api/ttnn.repeat_interleave", "ttnn/api/ttnn.reshape", "ttnn/api/ttnn.rms_norm", "ttnn/api/ttnn.round", "ttnn/api/ttnn.round_bw", "ttnn/api/ttnn.rpow", "ttnn/api/ttnn.rpow_bw", "ttnn/api/ttnn.rsqrt", "ttnn/api/ttnn.rsqrt_bw", "ttnn/api/ttnn.rsub", "ttnn/api/ttnn.rsub_bw", "ttnn/api/ttnn.scatter", "ttnn/api/ttnn.selu", "ttnn/api/ttnn.selu_bw", "ttnn/api/ttnn.set_printoptions", "ttnn/api/ttnn.sigmoid", "ttnn/api/ttnn.sigmoid_accurate", "ttnn/api/ttnn.sigmoid_bw", "ttnn/api/ttnn.sign", "ttnn/api/ttnn.sign_bw", "ttnn/api/ttnn.signbit", "ttnn/api/ttnn.silu", "ttnn/api/ttnn.silu_bw", "ttnn/api/ttnn.sin", "ttnn/api/ttnn.sin_bw", "ttnn/api/ttnn.sinh", "ttnn/api/ttnn.sinh_bw", "ttnn/api/ttnn.slice", "ttnn/api/ttnn.softmax", "ttnn/api/ttnn.softplus", "ttnn/api/ttnn.softplus_bw", "ttnn/api/ttnn.softshrink", "ttnn/api/ttnn.softshrink_bw", "ttnn/api/ttnn.softsign", "ttnn/api/ttnn.softsign_bw", "ttnn/api/ttnn.sqrt", "ttnn/api/ttnn.sqrt_bw", "ttnn/api/ttnn.square", "ttnn/api/ttnn.square_bw", "ttnn/api/ttnn.squared_difference", "ttnn/api/ttnn.squared_difference_bw", "ttnn/api/ttnn.std", "ttnn/api/ttnn.sub_bw", "ttnn/api/ttnn.subalpha", "ttnn/api/ttnn.subalpha_bw", "ttnn/api/ttnn.subtract", "ttnn/api/ttnn.sum", "ttnn/api/ttnn.swiglu", "ttnn/api/ttnn.swish", "ttnn/api/ttnn.synchronize_device", "ttnn/api/ttnn.tan", "ttnn/api/ttnn.tan_bw", "ttnn/api/ttnn.tanh", "ttnn/api/ttnn.tanh_bw", "ttnn/api/ttnn.tanhshrink", "ttnn/api/ttnn.tanhshrink_bw", "ttnn/api/ttnn.threshold", "ttnn/api/ttnn.threshold_bw", "ttnn/api/ttnn.tilize", "ttnn/api/ttnn.tilize_with_val_padding", "ttnn/api/ttnn.to_device", "ttnn/api/ttnn.to_layout", "ttnn/api/ttnn.to_memory_config", "ttnn/api/ttnn.to_torch", "ttnn/api/ttnn.topk", "ttnn/api/ttnn.transformer.attention_softmax", "ttnn/api/ttnn.transformer.attention_softmax_", "ttnn/api/ttnn.transformer.concatenate_heads", "ttnn/api/ttnn.transformer.scaled_dot_product_attention", "ttnn/api/ttnn.transformer.scaled_dot_product_attention_decode", "ttnn/api/ttnn.transformer.split_query_key_value_and_split_heads", "ttnn/api/ttnn.tril", "ttnn/api/ttnn.triu", "ttnn/api/ttnn.trunc", "ttnn/api/ttnn.trunc_bw", "ttnn/api/ttnn.unary_chain", "ttnn/api/ttnn.untilize", "ttnn/api/ttnn.untilize_with_halo_v2", "ttnn/api/ttnn.untilize_with_unpadding", "ttnn/api/ttnn.upsample", "ttnn/api/ttnn.var", "ttnn/api/ttnn.where", "ttnn/api/ttnn.where_bw", "ttnn/api/ttnn.xlogy", "ttnn/api/ttnn.xlogy_bw", "ttnn/api/ttnn.zeros", "ttnn/api/ttnn.zeros_like", "ttnn/converting_torch_model_to_ttnn", "ttnn/demos", "ttnn/dependencies/examples", "ttnn/dependencies/index", "ttnn/dependencies/tensor", "ttnn/dependencies/tt_lib", "ttnn/get_started", "ttnn/installing", "ttnn/onboarding", "ttnn/profiling_ttnn_operations", "ttnn/tensor", "ttnn/tutorials", "ttnn/tutorials/graphing_torch_dit", "ttnn/tutorials/matmul", "ttnn/tutorials/multihead-attention", "ttnn/tutorials/profiling", "ttnn/tutorials/resnet-basic-block", "ttnn/tutorials/tensor_and_add_operation", "ttnn/tutorials/ttnn-tracer", "ttnn/tutorials/ttnn_tutorials/001", "ttnn/tutorials/ttnn_tutorials/002", "ttnn/tutorials/ttnn_tutorials/003", "ttnn/tutorials/ttnn_tutorials/004", "ttnn/tutorials/ttnn_tutorials/005", "ttnn/tutorials/ttnn_tutorials/006", "ttnn/tutorials/ttnn_tutorials/007", "ttnn/usage"], "filenames": ["index.rst", "resources/contributing.rst", "resources/support.rst", "tt_metal_models/get_performance.rst", "tt_metal_models/get_started.rst", "ttnn/about.rst", "ttnn/adding_new_ttnn_operation.rst", "ttnn/api.rst", "ttnn/api/ttnn.GetDefaultDevice.rst", "ttnn/api/ttnn.SetDefaultDevice.rst", "ttnn/api/ttnn.abs.rst", "ttnn/api/ttnn.abs_bw.rst", "ttnn/api/ttnn.acos.rst", "ttnn/api/ttnn.acos_bw.rst", "ttnn/api/ttnn.acosh.rst", "ttnn/api/ttnn.acosh_bw.rst", "ttnn/api/ttnn.add.rst", "ttnn/api/ttnn.add_bw.rst", "ttnn/api/ttnn.addalpha.rst", "ttnn/api/ttnn.addalpha_bw.rst", "ttnn/api/ttnn.addcdiv.rst", "ttnn/api/ttnn.addcdiv_bw.rst", "ttnn/api/ttnn.addcmul.rst", "ttnn/api/ttnn.addcmul_bw.rst", "ttnn/api/ttnn.all_gather.rst", "ttnn/api/ttnn.angle.rst", "ttnn/api/ttnn.angle_bw.rst", "ttnn/api/ttnn.arange.rst", "ttnn/api/ttnn.argmax.rst", "ttnn/api/ttnn.as_tensor.rst", "ttnn/api/ttnn.asin.rst", "ttnn/api/ttnn.asin_bw.rst", "ttnn/api/ttnn.asinh.rst", "ttnn/api/ttnn.asinh_bw.rst", "ttnn/api/ttnn.assign_bw.rst", "ttnn/api/ttnn.atan.rst", "ttnn/api/ttnn.atan2.rst", "ttnn/api/ttnn.atan2_bw.rst", "ttnn/api/ttnn.atan_bw.rst", "ttnn/api/ttnn.atanh.rst", "ttnn/api/ttnn.atanh_bw.rst", "ttnn/api/ttnn.batch_norm.rst", "ttnn/api/ttnn.bias_gelu_bw.rst", "ttnn/api/ttnn.bitwise_and.rst", "ttnn/api/ttnn.bitwise_left_shift.rst", "ttnn/api/ttnn.bitwise_not.rst", "ttnn/api/ttnn.bitwise_or.rst", "ttnn/api/ttnn.bitwise_right_shift.rst", "ttnn/api/ttnn.bitwise_xor.rst", "ttnn/api/ttnn.cbrt.rst", "ttnn/api/ttnn.ceil.rst", "ttnn/api/ttnn.ceil_bw.rst", "ttnn/api/ttnn.celu.rst", "ttnn/api/ttnn.celu_bw.rst", "ttnn/api/ttnn.clamp.rst", "ttnn/api/ttnn.clamp_bw.rst", "ttnn/api/ttnn.clip.rst", "ttnn/api/ttnn.clip_bw.rst", "ttnn/api/ttnn.clone.rst", "ttnn/api/ttnn.close_device.rst", "ttnn/api/ttnn.concat.rst", "ttnn/api/ttnn.concat_bw.rst", "ttnn/api/ttnn.conj.rst", "ttnn/api/ttnn.conj_bw.rst", "ttnn/api/ttnn.cos.rst", "ttnn/api/ttnn.cos_bw.rst", "ttnn/api/ttnn.cosh.rst", "ttnn/api/ttnn.cosh_bw.rst", "ttnn/api/ttnn.create_sharded_memory_config.rst", "ttnn/api/ttnn.deallocate.rst", "ttnn/api/ttnn.deg2rad.rst", "ttnn/api/ttnn.deg2rad_bw.rst", "ttnn/api/ttnn.digamma.rst", "ttnn/api/ttnn.digamma_bw.rst", "ttnn/api/ttnn.div.rst", "ttnn/api/ttnn.div_bw.rst", "ttnn/api/ttnn.div_no_nan.rst", "ttnn/api/ttnn.div_no_nan_bw.rst", "ttnn/api/ttnn.downsample.rst", "ttnn/api/ttnn.dump_tensor.rst", "ttnn/api/ttnn.elu.rst", "ttnn/api/ttnn.elu_bw.rst", "ttnn/api/ttnn.embedding.rst", "ttnn/api/ttnn.embedding_bw.rst", "ttnn/api/ttnn.empty.rst", "ttnn/api/ttnn.empty_like.rst", "ttnn/api/ttnn.eq.rst", "ttnn/api/ttnn.eq_.rst", "ttnn/api/ttnn.eqz.rst", "ttnn/api/ttnn.erf.rst", "ttnn/api/ttnn.erf_bw.rst", "ttnn/api/ttnn.erfc.rst", "ttnn/api/ttnn.erfc_bw.rst", "ttnn/api/ttnn.erfinv.rst", "ttnn/api/ttnn.erfinv_bw.rst", "ttnn/api/ttnn.exp.rst", "ttnn/api/ttnn.exp2.rst", "ttnn/api/ttnn.exp2_bw.rst", "ttnn/api/ttnn.exp_bw.rst", "ttnn/api/ttnn.experimental.all_reduce.rst", "ttnn/api/ttnn.experimental.dropout.rst", "ttnn/api/ttnn.experimental.rotary_embedding.rst", "ttnn/api/ttnn.expm1.rst", "ttnn/api/ttnn.expm1_bw.rst", "ttnn/api/ttnn.fill.rst", "ttnn/api/ttnn.fill_bw.rst", "ttnn/api/ttnn.fill_ones_rm.rst", "ttnn/api/ttnn.fill_rm.rst", "ttnn/api/ttnn.fill_zero_bw.rst", "ttnn/api/ttnn.floor.rst", "ttnn/api/ttnn.floor_bw.rst", "ttnn/api/ttnn.floor_div.rst", "ttnn/api/ttnn.fmod.rst", "ttnn/api/ttnn.fmod_bw.rst", "ttnn/api/ttnn.format_input_tensor.rst", "ttnn/api/ttnn.format_output_tensor.rst", "ttnn/api/ttnn.frac.rst", "ttnn/api/ttnn.frac_bw.rst", "ttnn/api/ttnn.from_device.rst", "ttnn/api/ttnn.from_torch.rst", "ttnn/api/ttnn.full.rst", "ttnn/api/ttnn.full_like.rst", "ttnn/api/ttnn.gcd.rst", "ttnn/api/ttnn.ge.rst", "ttnn/api/ttnn.ge_.rst", "ttnn/api/ttnn.geglu.rst", "ttnn/api/ttnn.gelu.rst", "ttnn/api/ttnn.gelu_bw.rst", "ttnn/api/ttnn.gez.rst", "ttnn/api/ttnn.global_avg_pool2d.rst", "ttnn/api/ttnn.glu.rst", "ttnn/api/ttnn.group_norm.rst", "ttnn/api/ttnn.gt.rst", "ttnn/api/ttnn.gt_.rst", "ttnn/api/ttnn.gtz.rst", "ttnn/api/ttnn.hardshrink.rst", "ttnn/api/ttnn.hardshrink_bw.rst", "ttnn/api/ttnn.hardsigmoid.rst", "ttnn/api/ttnn.hardsigmoid_bw.rst", "ttnn/api/ttnn.hardswish.rst", "ttnn/api/ttnn.hardswish_bw.rst", "ttnn/api/ttnn.hardtanh.rst", "ttnn/api/ttnn.hardtanh_bw.rst", "ttnn/api/ttnn.heaviside.rst", "ttnn/api/ttnn.hypot.rst", "ttnn/api/ttnn.hypot_bw.rst", "ttnn/api/ttnn.i0.rst", "ttnn/api/ttnn.i0_bw.rst", "ttnn/api/ttnn.identity.rst", "ttnn/api/ttnn.imag.rst", "ttnn/api/ttnn.imag_bw.rst", "ttnn/api/ttnn.indexed_fill.rst", "ttnn/api/ttnn.is_imag.rst", "ttnn/api/ttnn.is_real.rst", "ttnn/api/ttnn.isclose.rst", "ttnn/api/ttnn.isfinite.rst", "ttnn/api/ttnn.isinf.rst", "ttnn/api/ttnn.isnan.rst", "ttnn/api/ttnn.isneginf.rst", "ttnn/api/ttnn.isposinf.rst", "ttnn/api/ttnn.kv_cache.fill_cache_for_user_.rst", "ttnn/api/ttnn.kv_cache.update_cache_for_token_.rst", "ttnn/api/ttnn.l1_loss.rst", "ttnn/api/ttnn.layer_norm.rst", "ttnn/api/ttnn.lcm.rst", "ttnn/api/ttnn.ldexp.rst", "ttnn/api/ttnn.ldexp_bw.rst", "ttnn/api/ttnn.le.rst", "ttnn/api/ttnn.le_.rst", "ttnn/api/ttnn.leaky_relu.rst", "ttnn/api/ttnn.leaky_relu_bw.rst", "ttnn/api/ttnn.lerp.rst", "ttnn/api/ttnn.lerp_bw.rst", "ttnn/api/ttnn.lez.rst", "ttnn/api/ttnn.lgamma.rst", "ttnn/api/ttnn.lgamma_bw.rst", "ttnn/api/ttnn.linear.rst", "ttnn/api/ttnn.load_tensor.rst", "ttnn/api/ttnn.log.rst", "ttnn/api/ttnn.log10.rst", "ttnn/api/ttnn.log10_bw.rst", "ttnn/api/ttnn.log1p.rst", "ttnn/api/ttnn.log1p_bw.rst", "ttnn/api/ttnn.log2.rst", "ttnn/api/ttnn.log2_bw.rst", "ttnn/api/ttnn.log_bw.rst", "ttnn/api/ttnn.log_sigmoid.rst", "ttnn/api/ttnn.log_sigmoid_bw.rst", "ttnn/api/ttnn.logaddexp.rst", "ttnn/api/ttnn.logaddexp2.rst", "ttnn/api/ttnn.logaddexp2_bw.rst", "ttnn/api/ttnn.logaddexp_bw.rst", "ttnn/api/ttnn.logical_and.rst", "ttnn/api/ttnn.logical_and_.rst", "ttnn/api/ttnn.logical_not.rst", "ttnn/api/ttnn.logical_not_.rst", "ttnn/api/ttnn.logical_or.rst", "ttnn/api/ttnn.logical_or_.rst", "ttnn/api/ttnn.logical_xor.rst", "ttnn/api/ttnn.logical_xor_.rst", "ttnn/api/ttnn.logit.rst", "ttnn/api/ttnn.logit_bw.rst", "ttnn/api/ttnn.logiteps_bw.rst", "ttnn/api/ttnn.lt.rst", "ttnn/api/ttnn.lt_.rst", "ttnn/api/ttnn.ltz.rst", "ttnn/api/ttnn.mac.rst", "ttnn/api/ttnn.manage_device.rst", "ttnn/api/ttnn.matmul.rst", "ttnn/api/ttnn.max.rst", "ttnn/api/ttnn.max_bw.rst", "ttnn/api/ttnn.max_pool2d.rst", "ttnn/api/ttnn.maximum.rst", "ttnn/api/ttnn.mean.rst", "ttnn/api/ttnn.min.rst", "ttnn/api/ttnn.min_bw.rst", "ttnn/api/ttnn.minimum.rst", "ttnn/api/ttnn.mish.rst", "ttnn/api/ttnn.model_preprocessing.preprocess_model.rst", "ttnn/api/ttnn.model_preprocessing.preprocess_model_parameters.rst", "ttnn/api/ttnn.moreh_sum.rst", "ttnn/api/ttnn.mse_loss.rst", "ttnn/api/ttnn.mul_bw.rst", "ttnn/api/ttnn.multigammaln.rst", "ttnn/api/ttnn.multigammaln_bw.rst", "ttnn/api/ttnn.multiply.rst", "ttnn/api/ttnn.ne.rst", "ttnn/api/ttnn.ne_.rst", "ttnn/api/ttnn.neg.rst", "ttnn/api/ttnn.neg_bw.rst", "ttnn/api/ttnn.nextafter.rst", "ttnn/api/ttnn.nez.rst", "ttnn/api/ttnn.nonzero.rst", "ttnn/api/ttnn.normalize_global.rst", "ttnn/api/ttnn.normalize_hw.rst", "ttnn/api/ttnn.ones.rst", "ttnn/api/ttnn.ones_like.rst", "ttnn/api/ttnn.open_device.rst", "ttnn/api/ttnn.outer.rst", "ttnn/api/ttnn.pad.rst", "ttnn/api/ttnn.pad_to_tile_shape.rst", "ttnn/api/ttnn.permute.rst", "ttnn/api/ttnn.polar.rst", "ttnn/api/ttnn.polar_bw.rst", "ttnn/api/ttnn.polygamma.rst", "ttnn/api/ttnn.polygamma_bw.rst", "ttnn/api/ttnn.polyval.rst", "ttnn/api/ttnn.pow.rst", "ttnn/api/ttnn.pow_bw.rst", "ttnn/api/ttnn.prelu.rst", "ttnn/api/ttnn.prod.rst", "ttnn/api/ttnn.prod_bw.rst", "ttnn/api/ttnn.rad2deg.rst", "ttnn/api/ttnn.rad2deg_bw.rst", "ttnn/api/ttnn.rdiv.rst", "ttnn/api/ttnn.rdiv_bw.rst", "ttnn/api/ttnn.real.rst", "ttnn/api/ttnn.real_bw.rst", "ttnn/api/ttnn.reallocate.rst", "ttnn/api/ttnn.reciprocal.rst", "ttnn/api/ttnn.reciprocal_bw.rst", "ttnn/api/ttnn.reduce_scatter.rst", "ttnn/api/ttnn.register_post_operation_hook.rst", "ttnn/api/ttnn.register_pre_operation_hook.rst", "ttnn/api/ttnn.reglu.rst", "ttnn/api/ttnn.relu.rst", "ttnn/api/ttnn.relu6.rst", "ttnn/api/ttnn.relu6_bw.rst", "ttnn/api/ttnn.relu_bw.rst", "ttnn/api/ttnn.relu_max.rst", "ttnn/api/ttnn.relu_min.rst", "ttnn/api/ttnn.remainder.rst", "ttnn/api/ttnn.remainder_bw.rst", "ttnn/api/ttnn.repeat.rst", "ttnn/api/ttnn.repeat_bw.rst", "ttnn/api/ttnn.repeat_interleave.rst", "ttnn/api/ttnn.reshape.rst", "ttnn/api/ttnn.rms_norm.rst", "ttnn/api/ttnn.round.rst", "ttnn/api/ttnn.round_bw.rst", "ttnn/api/ttnn.rpow.rst", "ttnn/api/ttnn.rpow_bw.rst", "ttnn/api/ttnn.rsqrt.rst", "ttnn/api/ttnn.rsqrt_bw.rst", "ttnn/api/ttnn.rsub.rst", "ttnn/api/ttnn.rsub_bw.rst", "ttnn/api/ttnn.scatter.rst", "ttnn/api/ttnn.selu.rst", "ttnn/api/ttnn.selu_bw.rst", "ttnn/api/ttnn.set_printoptions.rst", "ttnn/api/ttnn.sigmoid.rst", "ttnn/api/ttnn.sigmoid_accurate.rst", "ttnn/api/ttnn.sigmoid_bw.rst", "ttnn/api/ttnn.sign.rst", "ttnn/api/ttnn.sign_bw.rst", "ttnn/api/ttnn.signbit.rst", "ttnn/api/ttnn.silu.rst", "ttnn/api/ttnn.silu_bw.rst", "ttnn/api/ttnn.sin.rst", "ttnn/api/ttnn.sin_bw.rst", "ttnn/api/ttnn.sinh.rst", "ttnn/api/ttnn.sinh_bw.rst", "ttnn/api/ttnn.slice.rst", "ttnn/api/ttnn.softmax.rst", "ttnn/api/ttnn.softplus.rst", "ttnn/api/ttnn.softplus_bw.rst", "ttnn/api/ttnn.softshrink.rst", "ttnn/api/ttnn.softshrink_bw.rst", "ttnn/api/ttnn.softsign.rst", "ttnn/api/ttnn.softsign_bw.rst", "ttnn/api/ttnn.sqrt.rst", "ttnn/api/ttnn.sqrt_bw.rst", "ttnn/api/ttnn.square.rst", "ttnn/api/ttnn.square_bw.rst", "ttnn/api/ttnn.squared_difference.rst", "ttnn/api/ttnn.squared_difference_bw.rst", "ttnn/api/ttnn.std.rst", "ttnn/api/ttnn.sub_bw.rst", "ttnn/api/ttnn.subalpha.rst", "ttnn/api/ttnn.subalpha_bw.rst", "ttnn/api/ttnn.subtract.rst", "ttnn/api/ttnn.sum.rst", "ttnn/api/ttnn.swiglu.rst", "ttnn/api/ttnn.swish.rst", "ttnn/api/ttnn.synchronize_device.rst", "ttnn/api/ttnn.tan.rst", "ttnn/api/ttnn.tan_bw.rst", "ttnn/api/ttnn.tanh.rst", "ttnn/api/ttnn.tanh_bw.rst", "ttnn/api/ttnn.tanhshrink.rst", "ttnn/api/ttnn.tanhshrink_bw.rst", "ttnn/api/ttnn.threshold.rst", "ttnn/api/ttnn.threshold_bw.rst", "ttnn/api/ttnn.tilize.rst", "ttnn/api/ttnn.tilize_with_val_padding.rst", "ttnn/api/ttnn.to_device.rst", "ttnn/api/ttnn.to_layout.rst", "ttnn/api/ttnn.to_memory_config.rst", "ttnn/api/ttnn.to_torch.rst", "ttnn/api/ttnn.topk.rst", "ttnn/api/ttnn.transformer.attention_softmax.rst", "ttnn/api/ttnn.transformer.attention_softmax_.rst", "ttnn/api/ttnn.transformer.concatenate_heads.rst", "ttnn/api/ttnn.transformer.scaled_dot_product_attention.rst", "ttnn/api/ttnn.transformer.scaled_dot_product_attention_decode.rst", "ttnn/api/ttnn.transformer.split_query_key_value_and_split_heads.rst", "ttnn/api/ttnn.tril.rst", "ttnn/api/ttnn.triu.rst", "ttnn/api/ttnn.trunc.rst", "ttnn/api/ttnn.trunc_bw.rst", "ttnn/api/ttnn.unary_chain.rst", "ttnn/api/ttnn.untilize.rst", "ttnn/api/ttnn.untilize_with_halo_v2.rst", "ttnn/api/ttnn.untilize_with_unpadding.rst", "ttnn/api/ttnn.upsample.rst", "ttnn/api/ttnn.var.rst", "ttnn/api/ttnn.where.rst", "ttnn/api/ttnn.where_bw.rst", "ttnn/api/ttnn.xlogy.rst", "ttnn/api/ttnn.xlogy_bw.rst", "ttnn/api/ttnn.zeros.rst", "ttnn/api/ttnn.zeros_like.rst", "ttnn/converting_torch_model_to_ttnn.rst", "ttnn/demos.rst", "ttnn/dependencies/examples.rst", "ttnn/dependencies/index.rst", "ttnn/dependencies/tensor.rst", "ttnn/dependencies/tt_lib.rst", "ttnn/get_started.rst", "ttnn/installing.md", "ttnn/onboarding.rst", "ttnn/profiling_ttnn_operations.rst", "ttnn/tensor.rst", "ttnn/tutorials.rst", "ttnn/tutorials/graphing_torch_dit.rst", "ttnn/tutorials/matmul.rst", "ttnn/tutorials/multihead-attention.rst", "ttnn/tutorials/profiling.rst", "ttnn/tutorials/resnet-basic-block.rst", "ttnn/tutorials/tensor_and_add_operation.rst", "ttnn/tutorials/ttnn-tracer.rst", "ttnn/tutorials/ttnn_tutorials/001.ipynb", "ttnn/tutorials/ttnn_tutorials/002.ipynb", "ttnn/tutorials/ttnn_tutorials/003.ipynb", "ttnn/tutorials/ttnn_tutorials/004.ipynb", "ttnn/tutorials/ttnn_tutorials/005.ipynb", "ttnn/tutorials/ttnn_tutorials/006.ipynb", "ttnn/tutorials/ttnn_tutorials/007.ipynb", "ttnn/usage.rst"], "titles": ["Welcome to TT-NN documentation!", "Contributing as a developer", "Support", "Performance", "Getting Started", "What is ttnn?", "Adding New ttnn Operation", "APIs", "ttnn.GetDefaultDevice", "ttnn.SetDefaultDevice", "ttnn.abs", "ttnn.abs_bw", "ttnn.acos", "ttnn.acos_bw", "ttnn.acosh", "ttnn.acosh_bw", "ttnn.add", "ttnn.add_bw", "ttnn.addalpha", "ttnn.addalpha_bw", "ttnn.addcdiv", "ttnn.addcdiv_bw", "ttnn.addcmul", "ttnn.addcmul_bw", "ttnn.all_gather", "ttnn.angle", "ttnn.angle_bw", "ttnn.arange", "ttnn.argmax", "ttnn.as_tensor", "ttnn.asin", "ttnn.asin_bw", "ttnn.asinh", "ttnn.asinh_bw", "ttnn.assign_bw", "ttnn.atan", "ttnn.atan2", "ttnn.atan2_bw", "ttnn.atan_bw", "ttnn.atanh", "ttnn.atanh_bw", "ttnn.batch_norm", "ttnn.bias_gelu_bw", "ttnn.bitwise_and", "ttnn.bitwise_left_shift", "ttnn.bitwise_not", "ttnn.bitwise_or", "ttnn.bitwise_right_shift", "ttnn.bitwise_xor", "ttnn.cbrt", "ttnn.ceil", "ttnn.ceil_bw", "ttnn.celu", "ttnn.celu_bw", "ttnn.clamp", "ttnn.clamp_bw", "ttnn.clip", "ttnn.clip_bw", "ttnn.clone", "ttnn.close_device", "ttnn.concat", "ttnn.concat_bw", "ttnn.conj", "ttnn.conj_bw", "ttnn.cos", "ttnn.cos_bw", "ttnn.cosh", "ttnn.cosh_bw", "ttnn.create_sharded_memory_config", "ttnn.deallocate", "ttnn.deg2rad", "ttnn.deg2rad_bw", "ttnn.digamma", "ttnn.digamma_bw", "ttnn.div", "ttnn.div_bw", "ttnn.div_no_nan", "ttnn.div_no_nan_bw", "ttnn.downsample", "ttnn.dump_tensor", "ttnn.elu", "ttnn.elu_bw", "ttnn.embedding", "ttnn.embedding_bw", "ttnn.empty", "ttnn.empty_like", "ttnn.eq", "ttnn.eq_", "ttnn.eqz", "ttnn.erf", "ttnn.erf_bw", "ttnn.erfc", "ttnn.erfc_bw", "ttnn.erfinv", "ttnn.erfinv_bw", "ttnn.exp", "ttnn.exp2", "ttnn.exp2_bw", "ttnn.exp_bw", "ttnn.experimental.all_reduce", "ttnn.experimental.dropout", "ttnn.experimental.rotary_embedding", "ttnn.expm1", "ttnn.expm1_bw", "ttnn.fill", "ttnn.fill_bw", "ttnn.fill_ones_rm", "ttnn.fill_rm", "ttnn.fill_zero_bw", "ttnn.floor", "ttnn.floor_bw", "ttnn.floor_div", "ttnn.fmod", "ttnn.fmod_bw", "ttnn.format_input_tensor", "ttnn.format_output_tensor", "ttnn.frac", "ttnn.frac_bw", "ttnn.from_device", "ttnn.from_torch", "ttnn.full", "ttnn.full_like", "ttnn.gcd", "ttnn.ge", "ttnn.ge_", "ttnn.geglu", "ttnn.gelu", "ttnn.gelu_bw", "ttnn.gez", "ttnn.global_avg_pool2d", "ttnn.glu", "ttnn.group_norm", "ttnn.gt", "ttnn.gt_", "ttnn.gtz", "ttnn.hardshrink", "ttnn.hardshrink_bw", "ttnn.hardsigmoid", "ttnn.hardsigmoid_bw", "ttnn.hardswish", "ttnn.hardswish_bw", "ttnn.hardtanh", "ttnn.hardtanh_bw", "ttnn.heaviside", "ttnn.hypot", "ttnn.hypot_bw", "ttnn.i0", "ttnn.i0_bw", "ttnn.identity", "ttnn.imag", "ttnn.imag_bw", "ttnn.indexed_fill", "ttnn.is_imag", "ttnn.is_real", "ttnn.isclose", "ttnn.isfinite", "ttnn.isinf", "ttnn.isnan", "ttnn.isneginf", "ttnn.isposinf", "ttnn.kv_cache.fill_cache_for_user_", "ttnn.kv_cache.update_cache_for_token_", "ttnn.l1_loss", "ttnn.layer_norm", "ttnn.lcm", "ttnn.ldexp", "ttnn.ldexp_bw", "ttnn.le", "ttnn.le_", "ttnn.leaky_relu", "ttnn.leaky_relu_bw", "ttnn.lerp", "ttnn.lerp_bw", "ttnn.lez", "ttnn.lgamma", "ttnn.lgamma_bw", "ttnn.linear", "ttnn.load_tensor", "ttnn.log", "ttnn.log10", "ttnn.log10_bw", "ttnn.log1p", "ttnn.log1p_bw", "ttnn.log2", "ttnn.log2_bw", "ttnn.log_bw", "ttnn.log_sigmoid", "ttnn.log_sigmoid_bw", "ttnn.logaddexp", "ttnn.logaddexp2", "ttnn.logaddexp2_bw", "ttnn.logaddexp_bw", "ttnn.logical_and", "ttnn.logical_and_", "ttnn.logical_not", "ttnn.logical_not_", "ttnn.logical_or", "ttnn.logical_or_", "ttnn.logical_xor", "ttnn.logical_xor_", "ttnn.logit", "ttnn.logit_bw", "ttnn.logiteps_bw", "ttnn.lt", "ttnn.lt_", "ttnn.ltz", "ttnn.mac", "ttnn.manage_device", "ttnn.matmul", "ttnn.max", "ttnn.max_bw", "ttnn.max_pool2d", "ttnn.maximum", "ttnn.mean", "ttnn.min", "ttnn.min_bw", "ttnn.minimum", "ttnn.mish", "ttnn.model_preprocessing.preprocess_model", "ttnn.model_preprocessing.preprocess_model_parameters", "ttnn.moreh_sum", "ttnn.mse_loss", "ttnn.mul_bw", "ttnn.multigammaln", "ttnn.multigammaln_bw", "ttnn.multiply", "ttnn.ne", "ttnn.ne_", "ttnn.neg", "ttnn.neg_bw", "ttnn.nextafter", "ttnn.nez", "ttnn.nonzero", "ttnn.normalize_global", "ttnn.normalize_hw", "ttnn.ones", "ttnn.ones_like", "ttnn.open_device", "ttnn.outer", "ttnn.pad", "ttnn.pad_to_tile_shape", "ttnn.permute", "ttnn.polar", "ttnn.polar_bw", "ttnn.polygamma", "ttnn.polygamma_bw", "ttnn.polyval", "ttnn.pow", "ttnn.pow_bw", "ttnn.prelu", "ttnn.prod", "ttnn.prod_bw", "ttnn.rad2deg", "ttnn.rad2deg_bw", "ttnn.rdiv", "ttnn.rdiv_bw", "ttnn.real", "ttnn.real_bw", "ttnn.reallocate", "ttnn.reciprocal", "ttnn.reciprocal_bw", "ttnn.reduce_scatter", "ttnn.register_post_operation_hook", "ttnn.register_pre_operation_hook", "ttnn.reglu", "ttnn.relu", "ttnn.relu6", "ttnn.relu6_bw", "ttnn.relu_bw", "ttnn.relu_max", "ttnn.relu_min", "ttnn.remainder", "ttnn.remainder_bw", "ttnn.repeat", "ttnn.repeat_bw", "ttnn.repeat_interleave", "ttnn.reshape", "ttnn.rms_norm", "ttnn.round", "ttnn.round_bw", "ttnn.rpow", "ttnn.rpow_bw", "ttnn.rsqrt", "ttnn.rsqrt_bw", "ttnn.rsub", "ttnn.rsub_bw", "ttnn.scatter", "ttnn.selu", "ttnn.selu_bw", "ttnn.set_printoptions", "ttnn.sigmoid", "ttnn.sigmoid_accurate", "ttnn.sigmoid_bw", "ttnn.sign", "ttnn.sign_bw", "ttnn.signbit", "ttnn.silu", "ttnn.silu_bw", "ttnn.sin", "ttnn.sin_bw", "ttnn.sinh", "ttnn.sinh_bw", "ttnn.slice", "ttnn.softmax", "ttnn.softplus", "ttnn.softplus_bw", "ttnn.softshrink", "ttnn.softshrink_bw", "ttnn.softsign", "ttnn.softsign_bw", "ttnn.sqrt", "ttnn.sqrt_bw", "ttnn.square", "ttnn.square_bw", "ttnn.squared_difference", "ttnn.squared_difference_bw", "ttnn.std", "ttnn.sub_bw", "ttnn.subalpha", "ttnn.subalpha_bw", "ttnn.subtract", "ttnn.sum", "ttnn.swiglu", "ttnn.swish", "ttnn.synchronize_device", "ttnn.tan", "ttnn.tan_bw", "ttnn.tanh", "ttnn.tanh_bw", "ttnn.tanhshrink", "ttnn.tanhshrink_bw", "ttnn.threshold", "ttnn.threshold_bw", "ttnn.tilize", "ttnn.tilize_with_val_padding", "ttnn.to_device", "ttnn.to_layout", "ttnn.to_memory_config", "ttnn.to_torch", "ttnn.topk", "ttnn.transformer.attention_softmax", "ttnn.transformer.attention_softmax_", "ttnn.transformer.concatenate_heads", "ttnn.transformer.scaled_dot_product_attention", "ttnn.transformer.scaled_dot_product_attention_decode", "ttnn.transformer.split_query_key_value_and_split_heads", "ttnn.tril", "ttnn.triu", "ttnn.trunc", "ttnn.trunc_bw", "ttnn.unary_chain", "ttnn.untilize", "ttnn.untilize_with_halo_v2", "ttnn.untilize_with_unpadding", "ttnn.upsample", "ttnn.var", "ttnn.where", "ttnn.where_bw", "ttnn.xlogy", "ttnn.xlogy_bw", "ttnn.zeros", "ttnn.zeros_like", "Converting torch Model to ttnn", "Building and Uplifting Demos", "Examples of Tensor and TT-LIB Use", "Dependencies", "Tensor", "TT-LIB", "Getting Started", "Install", "Onboarding New Functionality", "Profiling ttnn Operations", "Tensor", "Tutorials", "Graphing Torch DiT_XL_2 With TTNN", "Matmul Operation", "Multi-Head Attention", "ttnn Profiling", "Resnet Basic Block", "Tensor and Add Operation", "ttnn Tracer", "Tensor and Add Operation", "Matrix Multiplication", "Multi-Head Attention", "Tracing ttnn operations and torch modules/functions", "Profiling ttnn operations", "Resnet Block", "Build a graph of a pytorch based model", "Using ttnn"], "terms": {"what": [0, 363, 371, 387], "i": [0, 3, 4, 8, 9, 14, 17, 19, 28, 32, 37, 39, 41, 42, 45, 59, 60, 61, 68, 74, 75, 78, 82, 83, 86, 99, 101, 104, 106, 107, 114, 115, 117, 118, 119, 123, 125, 129, 130, 132, 145, 147, 152, 153, 166, 167, 172, 176, 179, 183, 190, 191, 203, 207, 208, 210, 211, 215, 218, 219, 222, 224, 226, 237, 239, 240, 242, 244, 246, 247, 249, 254, 259, 261, 262, 263, 264, 269, 270, 275, 276, 280, 285, 302, 303, 315, 317, 319, 322, 324, 325, 326, 336, 338, 339, 340, 341, 343, 344, 345, 354, 359, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388], "kei": [0, 345, 362, 372, 381, 383, 385], "featur": [0, 367, 370, 377, 388], "get": [0, 8, 342, 362, 364, 366, 369, 373, 378, 381, 382, 383, 384, 385], "start": [0, 27, 171, 239, 302, 362, 366, 367, 371, 383, 385], "1": [0, 3, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 65, 67, 71, 73, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 89, 90, 91, 92, 94, 95, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 221, 222, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 294, 297, 299, 301, 302, 303, 304, 305, 306, 307, 309, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 328, 330, 331, 332, 336, 343, 344, 345, 348, 349, 355, 356, 357, 358, 359, 360, 361, 364, 366, 367, 370, 372, 381, 382, 383, 384, 385, 386, 387], "instal": [0, 3, 363, 371, 373, 385, 387], "build": [0, 364, 369, 373, 374, 377, 385], "2": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 154, 155, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 236, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 325, 326, 327, 328, 329, 330, 331, 332, 338, 343, 345, 346, 347, 348, 349, 350, 355, 356, 357, 358, 359, 360, 361, 365, 366, 372, 373, 374, 381, 382, 383, 384, 385, 386], "explor": 0, "our": [0, 3, 4, 5, 363, 369, 370, 372, 381], "demo": [0, 4, 369, 371, 384], "3": [0, 3, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 215, 216, 217, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 241, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 336, 338, 345, 346, 347, 348, 349, 350, 356, 357, 358, 359, 360, 361, 366, 367, 372, 381, 382, 383, 384, 385, 386, 387], "tutori": [0, 369, 374, 377, 378, 383, 387], "multi": [0, 24, 29, 78, 79, 99, 261, 354, 372, 373, 381], "head": [0, 340, 341, 342, 343, 345, 373], "attent": [0, 340, 341, 343, 344, 345, 373], "simpl": [0, 369, 385, 387], "4": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 123, 124, 125, 126, 127, 128, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 215, 216, 217, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 238, 240, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 346, 347, 348, 349, 350, 356, 357, 358, 359, 360, 361, 366, 367, 372, 381, 382, 383, 384, 385, 386, 387], "optim": [0, 372, 373, 376, 381], "where": [0, 2, 3, 4, 27, 68, 84, 85, 114, 115, 176, 208, 232, 239, 249, 335, 336, 357, 363, 367, 369, 371, 372, 387], "go": [0, 369, 381], "from": [0, 2, 3, 4, 5, 6, 27, 29, 59, 60, 83, 118, 119, 160, 161, 177, 239, 284, 285, 320, 335, 353, 362, 363, 365, 366, 371, 372, 373, 374, 378, 381, 383, 384, 385], "here": [0, 2, 6, 369, 382, 387], "step": [0, 27, 302, 363, 364, 370, 381, 387], "driver": [0, 381, 382, 383, 384, 385, 386], "firmwar": 0, "system": [0, 14, 32, 39, 104, 125, 130, 254, 264, 269, 270, 280, 322, 371], "level": [0, 371], "depend": [0, 4, 5, 336, 363, 371, 372, 373, 385], "us": [0, 3, 4, 5, 6, 8, 9, 24, 29, 42, 60, 68, 75, 82, 83, 85, 89, 91, 95, 99, 100, 101, 107, 118, 119, 121, 126, 127, 145, 148, 176, 208, 211, 218, 219, 236, 237, 254, 255, 261, 262, 263, 274, 282, 289, 303, 304, 333, 334, 335, 336, 337, 338, 339, 344, 345, 351, 353, 361, 362, 363, 365, 366, 367, 368, 370, 371, 372, 373, 375, 376, 379, 380, 385, 387], "metalium": [0, 3, 4, 6], "option": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 365, 366, 371, 387, 388], "sourc": [0, 3, 4, 160, 373, 377], "wheel": [0, 385], "docker": 0, "releas": [0, 69], "imag": [0, 152, 242, 363, 367, 371, 372, 387], "5": [0, 52, 55, 57, 68, 72, 82, 84, 121, 135, 136, 137, 139, 154, 200, 223, 249, 255, 306, 307, 366, 381, 382, 383, 384, 385, 386, 387], "softwar": [0, 373, 381, 382, 383, 384, 386], "codebas": 0, "contribut": [0, 2, 368], "basic": [0, 368, 369, 373], "exampl": [0, 5, 241, 250, 275, 335, 363, 365, 367, 368, 369, 370, 371, 372, 381, 387], "convert": [0, 5, 6, 29, 58, 119, 218, 219, 337, 338, 364, 365, 373, 376, 379, 382], "torch": [0, 5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 345, 346, 347, 348, 349, 350, 355, 356, 357, 358, 359, 361, 364, 366, 372, 373, 375, 376, 378, 379, 380, 385, 387], "tensor": [0, 4, 5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 371, 373, 375, 383, 384, 386, 387], "run": [0, 5, 6, 24, 99, 119, 218, 261, 262, 263, 363, 365, 367, 368, 369, 370, 371, 373, 376, 378, 381, 382, 385], "an": [0, 2, 3, 5, 6, 24, 60, 82, 99, 107, 108, 112, 129, 207, 208, 242, 249, 261, 271, 338, 363, 366, 367, 368, 369, 370, 371, 372, 381, 383, 387], "oper": [0, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 363, 364, 365, 366, 368, 370, 372, 373, 377, 380, 382, 383], "devic": [0, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 369, 371, 372, 373, 375, 376, 379, 384, 385, 386, 387], "__getitem__": 0, "slice": [0, 367], "enabl": [0, 3, 367, 370, 371, 373, 375, 376, 381, 384, 385, 386, 387], "program": [0, 3, 5, 6, 24, 176, 208, 261, 340, 341, 365, 371, 373, 375, 376, 381, 384, 385, 386], "cach": [0, 3, 5, 29, 59, 101, 160, 161, 218, 219, 365, 371, 372, 373, 375, 376, 381, 384, 385, 386, 387], "debug": [0, 5, 6, 367, 370, 381, 382, 383, 384, 386], "intermedi": 0, "6": [0, 27, 223, 366, 372, 381, 382, 383, 384, 385, 386, 387], "trace": [0, 5, 237, 373, 378, 380, 387], "graph": [0, 5, 218, 365, 373, 378, 384], "7": [0, 82, 120, 366, 381, 382, 383, 384, 385, 386, 387], "tt_lib": [0, 5, 106, 107, 364, 365], "8": [0, 24, 27, 68, 82, 99, 141, 261, 366, 369, 371, 372, 381, 382, 383, 384, 385, 386, 387], "log": [0, 187, 358, 365, 371, 382, 384, 385], "9": [0, 54, 56, 66, 82, 84, 300, 366, 369, 381, 382, 383, 384, 385, 386, 387], "support": [0, 1, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 116, 117, 122, 123, 124, 125, 126, 127, 128, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 215, 216, 217, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 238, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 344, 346, 347, 348, 349, 350, 356, 357, 358, 359, 360, 361, 364, 366, 367, 369, 372, 381, 386], "python": [0, 4, 367, 369, 370, 371, 385, 387], "10": [0, 27, 69, 82, 118, 129, 147, 176, 208, 244, 258, 331, 335, 336, 337, 364, 366, 369, 381, 382, 383, 384, 385, 387], "chang": [0, 276, 333, 334, 351, 353, 367, 381, 385], "string": [0, 42, 74, 127, 218, 219, 254, 255, 289, 367], "represent": [0, 304, 367, 372], "11": [0, 84, 381, 382, 383, 384, 385, 386], "visual": [0, 5, 384, 386, 387], "web": 0, "browser": [0, 373], "12": [0, 61, 131, 163, 277, 362, 381, 382, 383, 385, 386, 387], "regist": [0, 6, 262, 263], "pre": [0, 6, 211, 263, 369, 373, 374, 376, 385], "post": [0, 262, 371], "hook": [0, 262, 263, 385], "13": [0, 369, 381, 382, 383, 385, 387], "queri": [0, 345, 367, 383], "all": [0, 5, 6, 24, 28, 99, 129, 208, 218, 219, 246, 250, 251, 261, 324, 362, 363, 366, 367, 369, 370, 371, 372, 381, 383, 385], "14": [0, 3, 61, 372, 381, 382, 383, 385], "fall": [0, 166], "back": [0, 6, 342, 364, 371, 381], "15": [0, 383, 385], "captur": [0, 387], "c": [0, 41, 78, 106, 107, 208, 211, 354, 367, 369, 371, 372, 381, 382, 383, 384, 385, 386], "function": [0, 8, 9, 14, 16, 26, 29, 32, 39, 49, 52, 54, 56, 63, 66, 70, 72, 80, 86, 98, 114, 115, 116, 119, 123, 125, 130, 132, 135, 137, 139, 141, 142, 143, 148, 150, 162, 165, 167, 169, 174, 176, 181, 188, 189, 192, 195, 196, 198, 200, 203, 208, 217, 218, 219, 221, 223, 224, 225, 226, 233, 234, 240, 243, 244, 245, 250, 252, 257, 264, 269, 270, 278, 280, 284, 287, 300, 304, 306, 308, 314, 320, 322, 323, 328, 329, 331, 335, 346, 347, 362, 363, 364, 366, 367, 373, 380, 381], "buffer": [0, 6, 24, 69, 99, 237, 261, 365, 366, 367, 371, 372], "alloc": [0, 6, 27, 84, 85, 120, 121, 235, 236, 360, 361, 372, 381, 382, 383, 384, 385, 386], "etc": [0, 6, 366, 369], "shape": [0, 27, 41, 60, 68, 84, 85, 104, 114, 115, 120, 121, 129, 176, 208, 211, 232, 235, 236, 239, 240, 241, 273, 274, 275, 276, 302, 334, 342, 345, 353, 360, 361, 362, 364, 366, 367, 371, 381, 382, 383, 386, 387], "layout": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 212, 215, 216, 217, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 346, 347, 348, 349, 350, 351, 353, 356, 357, 358, 359, 360, 361, 362, 364, 366, 367, 371, 373, 375, 379, 383, 386, 388], "data": [0, 16, 27, 28, 29, 58, 78, 82, 83, 84, 85, 86, 106, 107, 119, 120, 121, 123, 129, 132, 165, 167, 176, 188, 189, 192, 196, 198, 203, 208, 225, 226, 235, 236, 254, 284, 314, 320, 333, 334, 336, 337, 338, 339, 351, 352, 353, 354, 360, 361, 362, 364, 366, 367, 371, 373, 379, 385, 388], "type": [0, 6, 16, 27, 28, 29, 42, 58, 75, 82, 83, 84, 85, 86, 106, 107, 119, 120, 121, 123, 127, 129, 132, 165, 167, 176, 188, 189, 192, 196, 198, 203, 208, 225, 226, 235, 236, 237, 254, 284, 314, 320, 333, 334, 336, 337, 338, 339, 351, 353, 360, 361, 362, 364, 365, 366, 369, 371, 373, 379, 385, 387], "limit": [0, 11, 21, 75, 113, 145, 176, 180, 182, 184, 185, 187, 190, 191, 201, 202, 248, 251, 255, 260, 272, 305, 311, 359, 363, 367], "bfloat8_b": [0, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 33, 34, 35, 36, 37, 38, 42, 50, 52, 61, 64, 65, 66, 70, 71, 72, 73, 75, 77, 80, 86, 87, 89, 91, 93, 95, 96, 97, 98, 102, 103, 104, 109, 113, 116, 117, 119, 123, 124, 125, 126, 128, 130, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 155, 156, 157, 158, 159, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 210, 212, 215, 216, 217, 222, 225, 226, 227, 228, 229, 230, 231, 246, 247, 248, 249, 251, 252, 253, 255, 259, 260, 264, 265, 266, 268, 269, 272, 278, 281, 282, 283, 284, 285, 287, 288, 290, 291, 292, 293, 296, 297, 298, 299, 300, 305, 306, 307, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 322, 323, 325, 326, 327, 329, 330, 338, 346, 347, 348, 350, 356, 357, 359, 362, 366, 371, 383], "storag": [0, 365, 367, 373, 379], "shard": [0, 60, 68, 176, 208, 211, 337, 345, 352], "memori": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 371, 381, 383], "config": [0, 24, 62, 82, 83, 99, 114, 115, 208, 242, 261, 276, 302, 340, 341, 342, 352, 362, 369, 373, 375, 381, 383, 384, 385, 386, 388], "api": [0, 4, 5, 6, 343, 362, 365, 368, 369, 370, 383, 388], "rank": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 116, 117, 122, 123, 124, 125, 126, 127, 128, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 212, 215, 216, 217, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 238, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 338, 346, 347, 348, 349, 350, 356, 357, 358, 359, 360, 361, 366, 372], "to_rank": [0, 372], "with_tile_pad": [0, 372], "open_devic": [0, 9, 59, 69, 82, 83, 118, 177, 258, 324, 335, 336, 337, 366, 381, 382, 383, 384, 388], "close_devic": [0, 381, 382, 383, 384, 386, 388], "manage_devic": [0, 388], "synchronize_devic": 0, "setdefaultdevic": [0, 364, 367], "getdefaultdevic": 0, "format_input_tensor": 0, "format_output_tensor": 0, "pad_to_tile_shap": 0, "create_sharded_memory_config": [0, 372], "core": [0, 6, 68, 176, 208, 237, 351, 352, 362, 367, 371, 372, 382, 383, 385], "as_tensor": [0, 381, 382, 383, 384, 386], "from_torch": [0, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 116, 117, 118, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 346, 347, 348, 349, 350, 355, 356, 357, 358, 359, 361, 362, 381, 382, 383, 384, 386, 388], "to_torch": [0, 6, 362, 366, 381, 382, 383, 384, 386, 388], "to_devic": [0, 24, 25, 26, 62, 63, 69, 77, 82, 118, 149, 150, 151, 152, 153, 162, 176, 208, 209, 211, 213, 214, 221, 232, 241, 242, 243, 245, 256, 257, 258, 281, 303, 316, 321, 336, 337, 355, 381, 382, 383, 384, 386], "from_devic": [0, 381, 382, 383, 384, 385, 386], "to_layout": [0, 5, 69, 119, 338, 372, 381, 382, 383], "dump_tensor": [0, 381, 382, 383, 384, 386], "load_tensor": [0, 381, 382, 383, 384, 385, 386], "dealloc": [0, 258, 372, 381, 382, 383, 384, 386, 388], "realloc": [0, 381, 382, 383, 384, 386], "to_memory_config": [0, 372, 386], "creation": [0, 119, 366], "arang": [0, 366, 381, 382, 383, 384], "empti": [0, 6, 367, 387, 388], "empty_lik": 0, "zero": [0, 60, 74, 100, 108, 121, 207, 232, 241, 259, 302, 303, 366, 367, 372, 384, 388], "zeros_lik": 0, "ones": [0, 79, 114, 367], "ones_lik": 0, "full": [0, 5, 363, 365, 367, 371, 388], "full_lik": 0, "matrix": [0, 82, 176, 208, 369, 372, 373, 375, 381, 388], "multipl": [0, 6, 58, 69, 107, 120, 125, 130, 164, 208, 218, 235, 264, 322, 336, 360, 366, 367, 371, 373, 375], "matmul": [0, 176, 373, 381, 382, 383, 384, 385], "linear": [0, 24, 99, 261, 304, 362, 365, 367, 381, 382, 383, 384], "pointwis": 0, "unari": [0, 6, 255, 350], "ab": [0, 11], "aco": [0, 13], "acosh": [0, 15], "asin": [0, 31], "asinh": [0, 33], "atan": [0, 38], "atanh": [0, 40], "bitwise_not": [0, 365, 367], "bitwise_left_shift": 0, "bitwise_right_shift": 0, "cbrt": 0, "ceil": [0, 51, 211, 365, 367], "celu": [0, 53, 381, 382, 383, 384], "clamp": [0, 55], "clip": [0, 57, 381, 382, 383, 384], "clone": [0, 148, 345, 369, 373, 374, 381, 382, 383, 384], "co": 0, "cosh": [0, 67], "deg2rad": [0, 71], "digamma": [0, 73], "experiment": [0, 4, 363, 365, 385], "dropout": 0, "elu": [0, 81], "eqz": 0, "erf": [0, 90], "erfc": [0, 92], "erfinv": [0, 94], "exp": [0, 350, 364, 367, 384, 388], "exp2": [0, 97], "expm1": [0, 103], "fill": [0, 105, 107, 108, 120, 121, 235, 236, 273, 360, 361, 367, 371], "floor": [0, 74, 75, 110, 111, 254, 255, 271, 365, 367], "frac": [0, 36, 74, 117, 367], "geglu": [0, 381, 382, 383, 384], "gelu": [0, 125, 127, 362, 367], "glu": [0, 381, 382, 383, 384], "gez": 0, "gtz": 0, "hardshrink": [0, 136, 170, 381, 382, 383, 384], "hardsigmoid": [0, 138], "hardswish": [0, 140], "hardtanh": [0, 142], "heavisid": 0, "i0": [0, 147], "ident": [0, 386], "isfinit": 0, "isinf": 0, "isnan": 0, "isneginf": 0, "isposinf": 0, "leaky_relu": [0, 170], "lez": 0, "lgamma": [0, 175], "log10": [0, 180], "log1p": [0, 182], "log2": [0, 184], "log_sigmoid": 0, "logical_not": [0, 195], "logical_not_": 0, "logit": [0, 201, 381, 382, 383, 384], "ltz": 0, "mish": 0, "multigammaln": 0, "neg": [0, 229, 248, 367], "nez": 0, "normalize_glob": 0, "normalize_hw": 0, "polygamma": [0, 245, 381, 382, 383, 384], "prelu": 0, "rad2deg": [0, 253], "rdiv": [0, 255], "reciproc": [0, 260, 283, 372], "reglu": [0, 381, 382, 383, 384], "relu": [0, 16, 169, 225, 264, 268, 269, 270, 304, 320, 350, 364, 386], "relu_max": 0, "relu_min": 0, "relu6": [0, 267], "remaind": [0, 272], "round": [0, 34, 74, 75, 254, 255, 279, 372], "rsqrt": 0, "selu": [0, 288], "sigmoid": [0, 187, 292, 367], "sigmoid_accur": 0, "sign": [0, 294, 367], "signbit": 0, "silu": [0, 297, 322, 364, 365, 367, 388], "sin": [0, 299], "sinh": [0, 301], "softmax": [0, 340, 341, 365, 367, 383], "softplu": [0, 305], "softshrink": [0, 307, 381, 382, 383, 384], "softsign": [0, 309], "sqrt": [0, 144, 367], "squar": [0, 221, 283, 311, 313, 314, 340, 341, 372], "swiglu": [0, 381, 382, 383, 384], "swish": [0, 367], "tan": [0, 326], "tanh": [0, 42, 127, 328], "tanhshrink": [0, 330], "threshold": [0, 304, 305, 332, 381, 382, 383, 384], "tril": 0, "triu": 0, "trunc": [0, 74, 75, 112, 254, 255, 365, 367], "unary_chain": 0, "clamp_bw": 0, "clip_bw": 0, "hardtanh_bw": 0, "threshold_bw": 0, "softplus_bw": 0, "rdiv_bw": 0, "pow_bw": 0, "exp_bw": 0, "tanh_bw": 0, "sqrt_bw": 0, "multigammaln_bw": 0, "lgamma_bw": 0, "fill_bw": 0, "hardsigmoid_bw": 0, "cos_bw": 0, "acosh_bw": 0, "acos_bw": 0, "atan_bw": 0, "rad2deg_bw": 0, "frac_bw": 0, "trunc_bw": 0, "log_sigmoid_bw": 0, "fill_zero_bw": 0, "i0_bw": 0, "tan_bw": 0, "sigmoid_bw": 0, "rsqrt_bw": 0, "neg_bw": 0, "relu_bw": 0, "logit_bw": 0, "hardshrink_bw": 0, "softshrink_bw": 0, "leaky_relu_bw": 0, "elu_bw": 0, "celu_bw": 0, "rpow_bw": 0, "floor_bw": 0, "round_bw": 0, "log_bw": 0, "relu6_bw": 0, "abs_bw": 0, "silu_bw": 0, "selu_bw": 0, "square_bw": 0, "prod_bw": 0, "hardswish_bw": 0, "tanhshrink_bw": 0, "atanh_bw": 0, "asin_bw": 0, "asinh_bw": 0, "sin_bw": 0, "sinh_bw": 0, "log10_bw": 0, "log1p_bw": 0, "erfc_bw": 0, "ceil_bw": 0, "softsign_bw": 0, "cosh_bw": 0, "logiteps_bw": 0, "log2_bw": 0, "sign_bw": 0, "div_no_nan_bw": 0, "exp2_bw": 0, "expm1_bw": 0, "reciprocal_bw": 0, "digamma_bw": 0, "erfinv_bw": 0, "erf_bw": 0, "deg2rad_bw": 0, "polygamma_bw": 0, "gelu_bw": 0, "repeat_bw": 0, "real": [0, 153, 242, 257, 363, 366], "angl": [0, 26], "is_imag": 0, "is_real": 0, "polar_bw": 0, "imag_bw": 0, "real_bw": 0, "angle_bw": 0, "conj_bw": 0, "conj": [0, 63], "polar": [0, 243], "binari": [0, 367], "add": [0, 17, 239, 340, 341, 363, 367, 370, 373, 383, 385, 386, 388], "addalpha": [0, 19], "subalpha": [0, 319], "multipli": [0, 18, 20, 22, 176, 208, 222, 318, 354, 367, 373, 375, 388], "subtract": [0, 3, 284, 285, 317, 345, 388], "div": [0, 112, 271], "div_no_nan": [0, 77], "floor_div": 0, "fmod": [0, 113], "gcd": 0, "lcm": 0, "logical_and_": 0, "logical_or_": 0, "logical_xor_": 0, "rpow": [0, 281], "rsub": 0, "ldexp": [0, 166], "logical_and": 0, "logical_or": 0, "logical_xor": [0, 381, 382, 383, 384], "bitwise_and": [0, 44, 47], "bitwise_or": 0, "bitwise_xor": 0, "logaddexp": [0, 191], "logaddexp2": [0, 190], "hypot": [0, 145, 381, 382, 383, 384], "xlogi": [0, 359, 381, 382, 383, 384], "squared_differ": [0, 315], "gt": [0, 381, 382, 383, 384, 385, 386, 387], "gt_": 0, "lt_": 0, "ge_": 0, "le_": 0, "eq_": 0, "ne_": 0, "ge": 0, "lt": [0, 381, 382, 383, 384, 385, 386, 387], "le": 0, "eq": 0, "ne": 0, "isclos": [0, 381, 382, 383, 384], "nextaft": [0, 381, 382, 383, 384], "maximum": [0, 28, 54, 55, 56, 57, 142, 210, 211, 367, 381, 382, 383, 384], "minimum": [0, 6, 54, 55, 56, 57, 142, 215, 367, 372, 381, 382, 383, 384], "outer": 0, "pow": [0, 364], "polyv": [0, 381, 382, 383, 384], "scatter": [0, 261], "atan2": [0, 37, 381, 382, 383, 384], "add_bw": 0, "assign_bw": 0, "atan2_bw": 0, "bias_gelu_bw": 0, "div_bw": 0, "embedding_bw": 0, "fmod_bw": 0, "remainder_bw": 0, "addalpha_bw": 0, "subalpha_bw": 0, "xlogy_bw": 0, "hypot_bw": 0, "ldexp_bw": 0, "logaddexp_bw": 0, "logaddexp2_bw": 0, "mul_bw": 0, "sub_bw": 0, "squared_difference_bw": 0, "concat_bw": 0, "rsub_bw": 0, "min_bw": 0, "max_bw": 0, "ternari": 0, "addcdiv": [0, 21, 381, 382, 383, 384], "addcmul": [0, 23, 381, 382, 383, 384], "mac": [0, 381, 382, 383, 384], "lerp": [0, 172, 381, 382, 383, 384], "addcmul_bw": 0, "addcdiv_bw": 0, "where_bw": 0, "lerp_bw": 0, "loss": [0, 162, 221], "l1_loss": [0, 381, 382, 383, 384], "mse_loss": [0, 381, 382, 383, 384], "reduct": [0, 28, 162, 221], "max": [0, 54, 55, 56, 57, 141, 142, 211, 269, 352, 367, 385, 387], "mean": [0, 162, 221, 364, 365, 367, 372], "min": [0, 54, 55, 56, 57, 141, 142, 269, 270, 387], "std": [0, 6, 289, 366, 367, 386], "sum": [0, 220, 367], "var": [0, 367], "argmax": [0, 367], "prod": [0, 68, 251], "topk": 0, "movement": 0, "concat": [0, 61, 365, 367, 370], "nonzero": 0, "pad": [0, 58, 82, 107, 114, 115, 119, 211, 240, 241, 276, 334, 336, 352, 364, 365, 366, 367, 372, 381, 386], "permut": [0, 211, 345, 383, 386], "reshap": [0, 211, 345, 364, 365, 366, 367, 381, 382, 383, 384, 385, 386], "repeat": [0, 5, 274, 275, 365, 367], "repeat_interleav": [0, 365, 367], "tiliz": [0, 29, 41, 367, 382, 383], "tilize_with_val_pad": 0, "fill_rm": [0, 106], "fill_ones_rm": 0, "until": [0, 118, 338, 352, 353], "untilize_with_unpad": 0, "untilize_with_halo_v2": 0, "indexed_fil": 0, "normal": [0, 41, 148, 367, 385, 387], "group_norm": [0, 365, 367], "layer_norm": [0, 365, 367], "rms_norm": 0, "batch_norm": 0, "moreh": [0, 220, 367], "moreh_sum": 0, "transform": [0, 176, 242, 362, 383, 384, 385], "split_query_key_value_and_split_head": [0, 383], "concatenate_head": [0, 383], "attention_softmax": 0, "attention_softmax_": [0, 383], "rotary_embed": 0, "scaled_dot_product_attent": 0, "scaled_dot_product_attention_decod": 0, "ccl": 0, "all_gath": [0, 381, 382, 383, 384], "reduce_scatt": 0, "all_reduc": 0, "embed": [0, 83, 101, 381], "pool": [0, 129, 211, 367], "global_avg_pool2d": 0, "max_pool2d": 0, "vision": 0, "upsampl": [0, 367], "downsampl": [0, 386], "kv": 0, "kv_cach": 0, "fill_cache_for_user_": 0, "update_cache_for_token_": 0, "convers": [0, 71, 253, 336, 364, 366, 381], "model_preprocess": [0, 362, 383, 384, 385, 386], "preprocess_model": [0, 384, 385, 386], "preprocess_model_paramet": [0, 362, 384, 386], "report": [0, 208, 363, 381, 382, 383, 384, 385, 386, 388], "set_printopt": [0, 388], "register_pre_operation_hook": [0, 388], "register_post_operation_hook": [0, 388], "creat": [0, 4, 6, 27, 58, 68, 84, 85, 104, 120, 121, 235, 236, 360, 361, 364, 366, 367, 370, 372, 373, 378, 379, 383, 387], "host": [0, 29, 118, 239, 302, 324, 335, 336, 364, 366, 367, 369, 371, 372, 373, 379, 382, 383, 384, 385, 386], "borrow": [0, 366, 372, 373, 379], "v": [0, 29, 107, 344, 369, 373, 379], "own": [0, 366, 369, 372, 373, 379], "open": [0, 207, 237, 373, 379, 382, 383, 384, 385, 386, 387, 388], "initi": [0, 85, 218, 219, 362, 364, 367, 373, 375, 376, 379, 384, 385, 386], "b": [0, 6, 101, 112, 208, 271, 275, 343, 344, 373, 375, 379], "random": [0, 241, 364, 373, 375, 379], "valu": [0, 18, 19, 20, 21, 22, 23, 27, 28, 41, 52, 53, 54, 55, 56, 57, 60, 62, 72, 77, 81, 84, 85, 104, 106, 107, 114, 119, 120, 121, 129, 135, 136, 137, 139, 141, 142, 143, 151, 152, 153, 154, 160, 161, 170, 174, 202, 209, 211, 213, 214, 224, 235, 236, 239, 241, 244, 247, 248, 254, 269, 270, 276, 278, 280, 281, 287, 302, 304, 305, 306, 307, 316, 318, 319, 321, 331, 332, 334, 339, 345, 346, 347, 352, 355, 360, 361, 363, 364, 366, 367, 372, 373, 375, 379, 383, 388], "inspect": [0, 373, 375, 379], "output": [0, 3, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 371, 372, 373, 375, 376, 379, 384, 388], "attribut": [0, 6, 362, 367, 371, 372, 373, 379, 385], "close": [0, 59, 207, 364, 373, 375, 376, 379, 384, 385, 386], "configur": [0, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 366, 373, 375, 376, 384], "result": [0, 3, 5, 27, 29, 41, 107, 119, 121, 148, 176, 208, 211, 236, 254, 259, 361, 364, 367, 371, 372, 373, 375], "more": [0, 1, 6, 11, 21, 75, 113, 145, 180, 182, 184, 185, 187, 190, 191, 201, 202, 208, 248, 251, 255, 259, 260, 272, 305, 311, 359, 367, 368, 371, 372, 373, 375, 383, 385, 387], "perform": [0, 11, 13, 14, 15, 17, 19, 21, 23, 24, 25, 26, 31, 32, 33, 34, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 61, 63, 65, 66, 67, 70, 71, 72, 73, 75, 77, 81, 87, 90, 92, 94, 97, 98, 99, 103, 105, 108, 110, 112, 113, 116, 117, 124, 125, 127, 129, 130, 133, 135, 136, 137, 138, 139, 140, 141, 142, 145, 147, 148, 149, 150, 166, 168, 170, 172, 174, 175, 180, 181, 182, 184, 185, 187, 190, 191, 195, 200, 201, 202, 204, 207, 210, 215, 217, 222, 223, 224, 227, 229, 233, 234, 239, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 264, 267, 268, 271, 272, 274, 278, 279, 280, 281, 283, 285, 287, 288, 292, 294, 297, 299, 300, 301, 302, 305, 306, 307, 308, 309, 311, 313, 315, 317, 319, 322, 323, 326, 328, 329, 330, 331, 332, 346, 347, 349, 357, 359, 362, 363, 366, 367, 368, 369, 370, 371, 373, 375, 383], "write": [0, 1, 3, 4, 6, 68, 176, 208, 362, 372, 373, 376, 385], "activ": [0, 4, 16, 86, 123, 132, 142, 165, 167, 176, 188, 189, 192, 196, 198, 203, 208, 225, 226, 284, 314, 320, 362, 369, 373, 376, 386], "weight": [0, 41, 82, 83, 131, 163, 171, 176, 249, 277, 362, 367, 373, 376, 384, 385, 386], "first": [0, 3, 119, 125, 130, 176, 208, 232, 239, 264, 322, 362, 364, 366, 367, 371, 373, 376, 382, 388], "iter": [0, 373, 376], "subsequ": [0, 373, 376, 382, 388], "version": [0, 218, 219, 344, 369, 371, 373, 376, 378, 381, 382, 384, 385], "process": [0, 60, 371, 373, 376, 385], "paramet": [0, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 367, 373, 376, 378, 384], "check": [0, 2, 6, 208, 363, 366, 368, 369, 373, 376, 385], "match": [0, 58, 208, 218, 219, 276, 366, 367, 372, 373, 376, 381, 382, 384, 385, 386], "origin": [0, 218, 219, 240, 250, 363, 370, 373, 376, 381], "implement": [0, 3, 5, 208, 343, 344, 345, 362, 367, 370, 371, 373, 376, 378], "tracer": [0, 5, 373, 384, 386, 387, 388], "modul": [0, 5, 6, 218, 219, 362, 367, 368, 373, 378, 380, 381, 382, 383, 387], "written": [0, 6, 160, 161, 176, 208, 373, 380, 383], "profil": [0, 3, 148, 289, 365, 373, 388], "resnet": [0, 368, 371, 373, 385], "block": [0, 68, 118, 207, 208, 211, 259, 367, 372, 373], "torchvis": [0, 373, 378, 385, 387], "preprocess": [0, 6, 29, 218, 219, 372, 373, 378], "displai": [0, 373, 374, 378], "pass": [0, 6, 101, 107, 262, 263, 345, 362, 364, 367, 370, 373, 378, 381, 384, 385], "constructor": [0, 366, 373, 378], "dit_xl_2": [0, 373, 387], "With": [0, 373], "pytorch": [0, 3, 5, 28, 208, 239, 339, 343, 345, 365, 367, 373, 374, 385], "base": [0, 3, 4, 6, 60, 68, 208, 240, 367, 372, 373, 374, 383], "librari": [0, 4, 5, 364, 365, 366, 373, 374], "http": [0, 24, 261, 368, 369, 373, 374, 385], "github": [0, 2, 24, 261, 368, 369, 373, 374], "com": [0, 24, 261, 368, 369, 373, 374], "facebookresearch": [0, 373, 374], "dit": [0, 373, 374], "git": [0, 218, 219, 369, 373, 374, 385], "download": [0, 369, 373, 374, 384, 385], "xl": [0, 373, 374], "sampl": [0, 367, 373, 374], "train": [0, 41, 367, 373, 374], "onboard": 0, "new": [0, 85, 121, 236, 273, 276, 361, 363, 365, 371, 381, 384], "rewrit": 0, "switch": [0, 304], "ad": [0, 176, 366, 367, 370, 381], "faq": 0, "ar": [0, 3, 4, 9, 24, 44, 47, 58, 60, 75, 99, 107, 176, 208, 211, 232, 241, 247, 261, 262, 263, 280, 324, 339, 345, 354, 362, 363, 364, 366, 367, 368, 369, 371, 372, 373, 374, 377, 378, 381, 382, 383, 388], "need": [0, 1, 2, 176, 208, 363, 364, 367, 369, 371, 372, 381, 382, 383, 388], "bind": [0, 385], "golden": [0, 362, 388], "perf": [0, 381, 382, 383, 384, 385, 386], "header": [0, 3], "profile_thi": [0, 385], "descript": [0, 106, 107, 366, 367, 370], "lib": [0, 4, 365, 384, 385, 387], "overview": [0, 365], "infrastructur": [0, 5, 365], "member": [0, 2, 365, 366], "input": [0, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 364, 365, 366, 371, 372, 382, 383, 386, 387, 388], "fast": [0, 89, 91, 95, 126, 282, 365], "dispatch": [0, 237, 365, 366, 371], "cpu": [0, 3, 364, 365, 366, 367, 369, 371, 385, 387], "through": [0, 365, 369, 387], "primari": [0, 5, 365], "softmax_backward": [0, 365, 367], "softmin": [0, 365, 367], "softmin_backward": [0, 365, 367], "logsoftmax": [0, 365, 367], "logsoftmax_backward": [0, 365, 367], "mean_backward": [0, 365, 367], "group_norm_backward": [0, 365, 367], "norm": [0, 41, 365, 367], "norm_backward": [0, 365, 367], "enum": [0, 365], "bcastopmath": [0, 365, 367], "bcastopdim": [0, 365, 367], "fallback": [0, 364, 365, 370], "tensor_slic": [0, 365, 367], "chunk": [0, 99, 261, 343, 344, 365, 367, 382, 387], "conv2d": [0, 365, 367, 381, 382, 383, 384, 386], "interpol": [0, 171, 365, 367], "batchnorm2d": [0, 365, 367, 386], "groupnorm": [0, 365, 367], "layernorm": [0, 365, 367], "maxpool2d": [0, 365, 367], "adaptiveavgpool2d": [0, 365, 367], "unary_fmod": [0, 365, 367], "binary_fmod": [0, 365, 367], "unary_bitwise_or": [0, 365, 367], "unary_bitwise_and": [0, 365, 367], "unary_bitwise_xor": [0, 365, 367], "binary_bitwise_or": [0, 365, 367], "binary_bitwise_and": [0, 365, 367], "binary_bitwise_xor": [0, 365, 367], "unary_bitwise_left_shift": [0, 365, 367], "unary_bitwise_right_shift": [0, 365, 367], "binary_bitwise_left_shift": [0, 365, 367], "binary_bitwise_right_shift": [0, 365, 367], "torch_argmax": [0, 365, 367], "torch_argmin": [0, 365, 367], "fuse": [0, 362, 365, 383], "mini": [0, 365], "addandnorm": [0, 365, 367], "complex": [0, 25, 26, 62, 63, 149, 150, 242, 243, 256, 257, 365], "__init__": [0, 362, 365, 366, 386], "get_dtyp": [0, 6, 365, 366], "get_layout": [0, 6, 365, 366], "pad_to_til": [0, 365, 366], "storage_typ": [0, 365, 366], "unpad": [0, 58, 115, 336, 353, 364, 365, 366, 367], "unpad_from_til": [0, 365, 366], "memoryconfig": [0, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 365, 367], "between": [0, 5, 6, 27, 41, 208, 337, 365, 367, 369], "one": [0, 6, 54, 55, 56, 57, 365, 367, 369], "op": [0, 6, 8, 28, 68, 83, 211, 303, 324, 343, 344, 350, 365, 367, 370, 371, 385, 388], "acceler": [0, 333, 334, 351, 353, 365, 366, 367, 382, 385], "odd": [0, 365], "size": [0, 27, 78, 82, 83, 208, 211, 237, 249, 250, 302, 343, 344, 345, 354, 365, 366, 367, 372, 381, 388], "last": [0, 28, 58, 120, 125, 130, 235, 264, 276, 322, 336, 339, 345, 360, 365, 366, 367, 371, 372], "dim": [0, 24, 28, 60, 61, 68, 99, 125, 130, 151, 209, 213, 214, 241, 250, 251, 261, 264, 275, 302, 303, 316, 321, 322, 339, 345, 355, 365, 366, 367, 372, 383, 387], "uplift": 0, "prerequisit": 0, "next": [0, 230, 367, 369, 372], "file": [0, 2, 4, 6, 29, 79, 177, 363, 369, 371, 385, 387, 388], "bug": 0, "propos": [0, 370], "request": [0, 336, 370, 385, 387], "troubleshoot": [0, 363], "tip": 0, "commun": 0, "develop": [0, 4, 368, 370, 371, 385], "index": [0, 160, 161, 339, 344, 366, 371, 385, 387], "search": 0, "page": [0, 368, 369, 373], "If": [1, 2, 6, 28, 58, 68, 176, 208, 218, 219, 237, 239, 241, 302, 303, 324, 338, 339, 344, 345, 366, 367, 368, 369, 370, 371, 384, 388], "you": [1, 2, 3, 4, 5, 6, 304, 363, 364, 366, 367, 368, 369, 371, 373, 384, 387, 388], "would": [1, 369, 370, 371, 372], "like": [1, 108, 304, 362, 364, 369, 372, 381, 388], "thi": [1, 3, 4, 5, 6, 8, 9, 28, 58, 60, 83, 101, 104, 114, 115, 129, 148, 166, 211, 239, 240, 269, 270, 304, 343, 362, 363, 364, 366, 367, 369, 370, 371, 372, 373, 374, 377, 378, 381, 382, 383, 387, 388], "project": [1, 2, 4, 368, 369], "pleas": [1, 2, 208, 363, 367, 368, 369, 370, 373, 388], "review": [1, 368, 370], "standard": [1, 2, 270, 363, 368], "gain": 1, "access": [1, 2, 387], "repositori": 1, "read": [1, 68, 352, 367, 368, 372], "section": [1, 2, 363, 367, 372], "detail": [1, 6, 11, 21, 75, 113, 145, 180, 182, 184, 185, 187, 190, 191, 201, 202, 248, 251, 255, 260, 272, 305, 311, 359, 368, 387, 388], "contact": 1, "u": [1, 370], "have": [2, 3, 4, 6, 28, 69, 83, 115, 171, 208, 254, 333, 334, 339, 351, 353, 363, 366, 367, 369, 371, 372, 373, 381, 387], "formal": 2, "permiss": 2, "cloud": 2, "issu": [2, 208, 304, 363, 369, 370, 371, 381, 382, 383, 384, 385, 386], "can": [2, 3, 4, 5, 6, 27, 42, 54, 55, 56, 57, 74, 75, 85, 121, 127, 208, 236, 254, 255, 262, 263, 304, 324, 361, 362, 364, 366, 367, 368, 369, 371, 372, 373, 381, 382, 383, 384, 386, 387, 388], "out": [2, 6, 100, 270, 302, 339, 367, 369, 381, 383, 386], "relev": [2, 363], "ever": 2, "hardwar": [2, 5, 6, 362, 363, 368, 372, 381, 388], "help": [2, 5, 370, 373], "we": [2, 3, 4, 5, 115, 119, 208, 338, 363, 364, 367, 369, 370, 372, 374, 377, 378, 381, 382, 387, 388], "offici": 2, "discord": 2, "channel": [2, 24, 41, 78, 99, 106, 107, 129, 211, 240, 261, 354, 367, 371], "repres": [2, 366, 371, 372, 381], "both": [2, 208, 362, 363, 366, 367, 371, 372, 381, 386], "tenstorr": [2, 5, 6, 24, 261, 362, 363, 368, 369, 373, 381, 382, 387, 388], "metal": [2, 5, 24, 261, 366, 368, 369, 373, 381, 382, 383, 384, 385, 386, 387], "join": [2, 385], "discuss": [2, 363], "board": [2, 369], "bounc": 2, "idea": [2, 363], "off": [2, 269, 362, 372], "each": [2, 3, 5, 41, 60, 107, 129, 211, 239, 273, 275, 302, 366, 367, 369, 371, 372], "other": [2, 5, 6, 362, 363, 367, 368, 369, 372, 374, 377, 378, 388], "refer": [2, 3, 4, 5, 11, 21, 69, 75, 85, 104, 113, 145, 180, 182, 184, 185, 187, 190, 191, 201, 202, 208, 224, 248, 251, 255, 260, 272, 305, 311, 359, 366, 370, 372, 388], "code": [2, 6, 28, 239, 262, 263, 339, 345, 364, 367, 368, 369, 370, 371, 381, 385, 388], "conduct": 2, "when": [2, 6, 8, 9, 60, 68, 75, 101, 145, 207, 208, 218, 241, 247, 255, 336, 363, 366, 367, 369, 370, 372, 381, 383, 384, 386, 388], "interact": 2, "ensur": [3, 4, 58, 324, 363, 369, 372], "tt": [3, 4, 5, 6, 9, 24, 261, 333, 334, 351, 353, 354, 365, 373, 374, 377, 378, 381, 382, 383, 384, 385, 386, 387], "environ": [3, 4, 367, 368, 369, 383, 384, 385, 387, 388], "requir": [3, 6, 17, 19, 34, 41, 61, 68, 75, 106, 107, 120, 218, 219, 222, 235, 285, 317, 319, 357, 360, 363, 366, 367, 369, 371, 377, 385, 387], "model": [3, 5, 218, 219, 363, 369, 370, 371, 373, 374, 376, 380, 381, 382, 385, 386], "follow": [3, 6, 107, 208, 276, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 387, 388], "instruct": [3, 4, 363, 368, 369, 373, 388], "readi": [3, 4, 345, 363], "come": [3, 368, 371], "typic": [3, 129, 372], "found": [3, 6, 362, 373, 385, 387], "under": [3, 4, 363, 364, 370, 371, 373, 388], "your_model": 3, "perf_model": 3, "py": [3, 6, 362, 363, 371, 384, 385, 388], "To": [3, 364, 367, 369, 370, 381, 382, 388], "pytest": [3, 4, 362, 363, 371, 385, 388], "test": [3, 4, 6, 362, 363, 370, 371, 383, 385, 388], "python_api_test": 3, "perf_your_model": 3, "csv": [3, 371, 385], "perf_your_model_d": 3, "contain": [3, 4, 6, 27, 82, 211, 259, 366, 369, 372, 381], "tabl": [3, 385], "two": [3, 58, 60, 125, 130, 208, 264, 276, 322, 336, 345, 362, 366, 367, 372], "row": [3, 51, 105, 107, 108, 110, 117, 232, 279, 294, 349, 352, 366, 371, 372, 381, 382, 385], "set": [3, 4, 9, 60, 106, 208, 224, 241, 289, 324, 342, 345, 362, 364, 366, 367, 369, 371, 373, 381, 384, 385, 386, 387, 388], "batch": [3, 41, 78, 106, 107, 151, 176, 208, 211, 240, 344, 366, 367, 371], "sec": 3, "second": [3, 119, 125, 130, 176, 208, 239, 249, 264, 276, 322, 366, 367, 371, 383, 385, 388], "compil": [3, 367, 382, 385, 388], "time": [3, 154, 218, 273, 363, 367, 369, 371, 382, 383, 385, 388], "infer": [3, 41, 363, 371, 385], "g": [3, 208, 367, 369, 371, 372], "throughput": 3, "inf": [3, 217, 223], "vit": 3, "patch16": 3, "30": [3, 61, 84, 385], "51": [3, 384], "16": [3, 302, 372, 383, 385, 386, 387], "05": [3, 41, 367, 387], "46": [3, 385], "0": [3, 6, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 34, 35, 43, 44, 45, 46, 47, 48, 50, 54, 55, 56, 57, 59, 60, 61, 62, 64, 69, 72, 74, 75, 80, 82, 83, 84, 85, 86, 88, 89, 91, 93, 95, 96, 98, 100, 102, 104, 105, 106, 107, 109, 114, 118, 119, 120, 121, 123, 126, 127, 128, 132, 134, 135, 136, 137, 139, 143, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 165, 167, 169, 170, 171, 173, 174, 177, 178, 179, 183, 186, 188, 189, 192, 194, 196, 198, 200, 202, 203, 205, 207, 208, 211, 221, 222, 225, 226, 228, 229, 231, 232, 235, 236, 237, 239, 241, 242, 246, 247, 248, 250, 251, 254, 255, 256, 258, 259, 261, 265, 266, 269, 270, 275, 276, 278, 282, 283, 284, 285, 290, 291, 293, 295, 296, 297, 298, 302, 303, 304, 306, 307, 310, 311, 312, 314, 317, 318, 319, 320, 324, 325, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 356, 357, 360, 361, 362, 364, 366, 367, 369, 371, 372, 381, 382, 383, 384, 385, 386, 387, 388], "0623": 3, "29": [3, 369, 385], "4960": 3, "includ": [3, 6, 58, 363, 372], "without": [3, 85, 364, 366, 367], "ani": [3, 5, 106, 107, 363, 364, 367, 385], "abovement": 3, "grayskul": [3, 6, 29, 217, 278, 362, 369, 373, 374, 377, 378, 383, 384, 388], "It": [3, 6, 218, 219, 338, 366, 367, 369, 381], "sinc": [3, 148, 364], "dure": [3, 60, 119, 154, 338, 372], "do": [3, 363, 364, 369, 383], "pai": 3, "name": [3, 6, 29, 79, 177, 218, 219, 343, 362, 366, 367, 370, 371, 385, 386, 387, 388], "suggest": 3, "calcul": [3, 68, 254, 371], "comput": [3, 5, 6, 18, 20, 22, 36, 58, 74, 76, 111, 122, 129, 131, 144, 154, 163, 164, 165, 171, 176, 188, 189, 192, 193, 196, 197, 198, 199, 206, 208, 212, 216, 230, 238, 246, 250, 277, 286, 303, 314, 318, 340, 341, 344, 345, 356, 358, 367, 371, 381, 382], "": [3, 4, 5, 6, 58, 218, 219, 343, 344, 363, 366, 367, 372, 381, 382, 383, 387], "also": [3, 6, 208, 224, 363, 364, 366, 367, 368, 371, 387], "maintain": [3, 370], "script": [3, 4, 363, 369, 371], "run_perform": [3, 363], "sh": [3, 4, 363, 369, 371, 385], "facilit": 3, "easi": [3, 381], "wai": [3, 5, 218, 219, 362, 367, 369, 381], "attempt": [3, 367, 385], "fastest": 3, "command": [3, 10, 12, 16, 17, 19, 28, 30, 34, 35, 43, 44, 45, 46, 47, 48, 50, 60, 61, 64, 74, 75, 80, 82, 83, 86, 88, 89, 91, 93, 95, 96, 98, 100, 102, 104, 105, 106, 107, 109, 118, 119, 120, 121, 123, 126, 127, 128, 132, 134, 143, 146, 148, 151, 155, 156, 157, 158, 159, 162, 165, 167, 169, 173, 178, 179, 183, 186, 188, 189, 192, 194, 196, 198, 203, 205, 221, 222, 225, 226, 228, 229, 231, 232, 236, 239, 241, 247, 248, 254, 259, 265, 266, 269, 270, 276, 282, 283, 284, 285, 290, 291, 293, 295, 296, 297, 298, 304, 310, 311, 312, 314, 317, 319, 320, 324, 325, 327, 328, 333, 334, 335, 338, 339, 343, 344, 348, 350, 351, 352, 353, 356, 357, 361, 371, 388], "execut": [3, 262, 263, 363, 364, 367, 369, 371, 382, 383, 385, 388], "merg": [3, 370], "built": [4, 369, 385, 387], "now": [4, 119, 338, 354, 368, 372, 381, 383], "root": [4, 283, 311, 340, 341], "provid": [4, 5, 24, 28, 41, 104, 112, 176, 208, 218, 219, 254, 261, 271, 303, 324, 334, 339, 363, 366, 367, 369, 370, 371, 372, 381, 383, 388], "virtual": [4, 369], "which": [4, 5, 44, 47, 68, 120, 121, 176, 208, 211, 218, 219, 235, 236, 254, 302, 303, 343, 344, 360, 361, 362, 366, 367, 371, 372], "ll": 4, "work": [4, 208, 302, 362, 363, 373, 374, 377, 378, 388], "python_env": [4, 369, 384, 385, 387], "bin": [4, 79, 177, 369, 385], "python_env_dir": 4, "variabl": [4, 6, 367, 369, 384, 386, 388], "create_venv": [4, 369], "control": [4, 367, 381], "pythonpath": [4, 369, 387], "common": [4, 122, 164, 363, 367], "practic": 4, "export": [4, 367, 369, 388], "pwd": [4, 369], "folder": [4, 363, 368, 371, 385], "split": [4, 60, 125, 130, 264, 322, 345, 367, 372], "them": [4, 345, 367, 369, 371, 381], "sub": [4, 5, 324, 351, 367], "In": [4, 6, 100, 208, 276, 336, 341, 362, 364, 367, 371, 372, 381, 387], "find": [4, 369, 381, 382, 383, 384, 385, 386], "prepar": [4, 363, 385], "readm": [4, 363, 385, 387], "md": [4, 24, 261, 363], "give": [4, 371], "how": [4, 6, 363, 366, 367, 371, 372, 382, 383, 388], "progress": [4, 387], "yet": 4, "user": [4, 5, 6, 148, 176, 208, 218, 219, 334, 363, 368, 369, 370, 381, 382, 383, 384, 385, 386, 387], "mani": [4, 6, 362, 382, 387], "part": [4, 125, 130, 264, 322, 363, 367, 371, 383], "entir": [4, 129, 324], "path_to_test_fil": 4, "test_in_fil": 4, "ttnn": [4, 366, 367, 369, 370, 372, 373, 376, 378, 379, 382, 387], "friendli": [4, 5, 368], "top": [4, 339, 366, 373], "doc": [4, 6, 369, 385], "document": [4, 6, 363, 369, 370, 385], "interfac": [5, 367], "design": 5, "intuit": [5, 381], "familiar": [5, 369], "trust": 5, "valuabl": 5, "your": [5, 363, 364, 367, 369, 371, 373], "journei": 5, "take": [5, 6, 342, 363, 366, 367, 368, 372, 381], "advantag": 5, "n": [5, 41, 60, 78, 106, 107, 211, 232, 245, 246, 354, 367, 369, 371, 381, 382, 385, 387], "d": [5, 208, 352, 385], "row_major_layout": [5, 29, 58, 79, 82, 114, 115, 119, 120, 235, 336, 360, 372, 381, 382, 383], "tile_layout": [5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 80, 81, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 212, 215, 216, 217, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 244, 246, 247, 248, 251, 252, 253, 254, 255, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 336, 339, 346, 347, 348, 349, 350, 356, 357, 358, 359, 360, 361, 362, 366, 372, 381, 382, 383, 386, 388], "stabl": 5, "The": [5, 6, 8, 9, 24, 27, 29, 58, 59, 78, 79, 80, 82, 83, 84, 85, 99, 104, 107, 119, 120, 121, 129, 143, 169, 176, 207, 208, 211, 224, 235, 236, 237, 240, 261, 262, 263, 269, 270, 273, 324, 335, 338, 339, 343, 344, 354, 360, 361, 362, 363, 364, 366, 367, 368, 370, 371, 372, 381, 382, 387, 388], "networkx": [5, 385, 387], "compat": [5, 369, 374, 377, 378], "some": [5, 6, 324, 367, 388], "nn": [5, 6, 24, 218, 219, 261, 362, 366, 373, 374, 377, 378, 386, 388], "object": [5, 68, 237, 362, 366, 370, 387], "could": [5, 381, 382, 383, 384, 385, 386], "significantli": [5, 382], "speed": [5, 382], "up": [5, 107, 367, 369, 371, 373, 382, 387], "abil": [5, 367], "compar": [5, 6, 86, 123, 132, 167, 203, 208, 226, 382], "equival": [5, 6, 28, 239, 339, 345, 372], "veri": [5, 304, 371, 381, 383], "meant": 6, "contributor": 6, "Not": [6, 200, 217, 227, 278, 362, 388], "mai": [6, 69, 75, 145, 166, 208, 255, 259, 362, 367, 369, 372, 388], "wormhol": [6, 29, 362, 369, 373, 388], "A": [6, 27, 120, 121, 208, 235, 236, 304, 344, 360, 361, 363, 364, 366, 367, 369, 370, 372], "produc": [6, 259, 363, 364, 367, 381, 382], "call": [6, 119, 262, 263, 338, 364, 366, 367, 370, 371, 372, 381, 383, 385, 388], "There": [6, 208, 362, 366, 367, 372], "optiona": 6, "composit": 6, "struct": [6, 367], "specifi": [6, 27, 58, 79, 84, 85, 120, 121, 176, 208, 218, 219, 235, 236, 239, 240, 241, 250, 273, 324, 334, 343, 344, 360, 361, 362, 366, 367, 382, 383], "simpli": [6, 336, 366, 367, 381], "defin": [6, 29, 366, 367, 370, 372], "method": [6, 367, 369, 372, 385], "register_oper": 6, "exist": [6, 237, 366, 385, 387], "bind_registered_oper": 6, "auto": [6, 367], "attach": [6, 218, 219, 385], "attach_golden_funct": 6, "let": [6, 372, 381, 383], "just": [6, 369, 383, 387], "copi": [6, 58, 118, 148, 335, 366, 367, 381], "order": [6, 68, 208, 245, 285, 339, 366, 367, 369, 371, 372, 373, 381, 383, 388], "directori": [6, 373, 387], "structur": [6, 362], "shown": [6, 369, 372], "below": [6, 208, 363, 367, 371, 372, 373], "cpp": 6, "categori": 6, "operation_nam": 6, "_device_oper": 6, "hpp": 6, "program_factory_0": 6, "_program_factori": 6, "factori": 6, "But": [6, 364], "concret": [6, 208], "example_device_oper": 6, "spdx": [6, 388], "filecopyrighttext": [6, 388], "2023": [6, 385, 387], "inc": [6, 388], "licens": [6, 388], "identifi": [6, 385, 388], "apach": [6, 388], "pragma": 6, "onc": [6, 382], "variant": 6, "device_oper": 6, "decor": [6, 370, 381, 382, 383, 384, 385, 386], "namespac": [6, 387], "exampledeviceoper": 6, "store": [6, 41, 366, 371, 372, 381], "aren": [6, 8], "t": [6, 8, 99, 148, 208, 218, 219, 261, 364, 366, 367, 371, 381, 383, 385], "operation_attributes_t": 6, "bool": [6, 17, 19, 29, 34, 41, 61, 68, 69, 74, 75, 89, 91, 95, 118, 126, 131, 154, 162, 176, 208, 211, 218, 219, 221, 222, 240, 250, 251, 282, 285, 317, 319, 333, 334, 339, 340, 341, 343, 344, 345, 351, 352, 353, 357, 367], "int": [6, 10, 12, 16, 17, 19, 24, 27, 28, 30, 34, 35, 43, 44, 45, 46, 47, 48, 50, 60, 61, 64, 68, 74, 75, 80, 82, 83, 84, 86, 88, 89, 91, 93, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 115, 118, 119, 120, 121, 123, 125, 126, 128, 130, 131, 132, 134, 143, 146, 148, 151, 155, 156, 157, 158, 159, 160, 161, 162, 165, 167, 169, 173, 176, 178, 179, 183, 186, 188, 189, 192, 194, 196, 198, 203, 205, 207, 208, 211, 221, 222, 225, 226, 228, 229, 231, 232, 236, 237, 239, 240, 241, 244, 247, 248, 250, 251, 254, 259, 261, 264, 265, 266, 269, 270, 274, 282, 284, 285, 290, 291, 293, 295, 296, 297, 298, 302, 304, 310, 311, 312, 314, 317, 319, 320, 322, 324, 325, 327, 328, 333, 334, 335, 338, 339, 340, 341, 343, 344, 345, 348, 350, 351, 352, 353, 354, 356, 357, 361, 366, 367, 372, 386, 387], "some_other_attribut": 6, "argument": [6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 366, 367, 381, 384, 386], "don": [6, 208, 367, 381], "thei": [6, 208, 363, 367, 382, 383], "tensor_args_t": 6, "onli": [6, 17, 19, 20, 22, 24, 28, 37, 41, 42, 45, 50, 54, 55, 56, 57, 60, 61, 68, 74, 75, 79, 83, 107, 109, 112, 119, 125, 130, 145, 166, 171, 172, 179, 183, 190, 191, 206, 208, 210, 215, 222, 244, 254, 259, 261, 264, 271, 272, 285, 315, 317, 319, 322, 324, 344, 345, 356, 359, 362, 363, 366, 367, 369, 371, 372, 373, 374, 377, 378, 386, 388], "const": [6, 289, 367], "input_tensor": [6, 10, 11, 12, 13, 14, 15, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 75, 77, 78, 80, 81, 82, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 114, 116, 117, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 163, 168, 169, 170, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 194, 195, 200, 201, 202, 204, 205, 211, 217, 223, 224, 227, 228, 229, 231, 232, 233, 234, 236, 239, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 361, 367, 384, 386, 388], "howev": [6, 367, 369, 381], "show": [6, 208, 366, 372, 382, 383], "els": [6, 74, 366, 384, 386, 387], "done": [6, 363, 366, 371, 381, 385], "io_tensor": 6, "optional_output_tensor": [6, 176, 208], "vector": [6, 246, 366, 367], "vector_of_tensor": 6, "tupl": [6, 68, 239, 345, 367], "tuple_of_tensor": 6, "vector_of_optional_tensor": 6, "some_crazy_tuple_of_tensor": 6, "return": [6, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 366, 367, 383, 384, 385, 386, 387], "spec": [6, 68, 366, 367], "singl": [6, 344, 362, 370, 371, 372, 381], "tensorspec": [6, 367], "spec_return_value_t": 6, "tensor_return_value_t": 6, "note": [6, 63, 150, 208, 235, 236, 257, 276, 364, 366, 367, 369, 371, 372, 381, 383, 387, 388], "should": [6, 118, 125, 130, 148, 154, 171, 208, 211, 232, 239, 264, 322, 336, 363, 366, 368, 370, 371, 381, 382, 383, 384, 386], "same": [6, 16, 18, 20, 22, 36, 43, 44, 46, 47, 48, 74, 76, 83, 85, 86, 87, 104, 106, 111, 121, 122, 123, 124, 132, 133, 144, 148, 154, 164, 165, 167, 168, 171, 176, 188, 189, 192, 193, 196, 197, 198, 199, 203, 204, 206, 208, 212, 216, 218, 219, 225, 226, 227, 230, 232, 236, 238, 246, 284, 286, 314, 318, 320, 336, 339, 343, 356, 358, 361, 367, 371, 372, 381, 383], "pattern": [6, 60, 218, 370], "e": [6, 208, 367, 371, 372, 388], "singlecor": 6, "share": [6, 366, 372], "override_runtime_argu": 6, "shared_variables_t": 6, "kernelhandl": 6, "unary_reader_kernel_id": [6, 367], "unary_writer_kernel_id": [6, 367], "cached_program_t": 6, "cachedprogram": 6, "static": 6, "operation_attribut": 6, "tensor_arg": 6, "tensor_return_valu": 6, "void": [6, 367], "cached_program": 6, "multicor": [6, 333, 334, 351, 353], "size_t": 6, "num_cor": 6, "num_cores_i": 6, "program_factory_t": 6, "mandatori": [6, 367], "select": [6, 41, 366, 370], "arg": [6, 107, 241, 262, 263, 335, 366, 388], "select_program_factori": 6, "valid": [6, 24, 99, 106, 107, 208, 218, 219, 261, 362, 363, 366, 367, 371, 372, 385], "usual": 6, "validate_on_program_cache_miss": 6, "reus": 6, "less": [6, 167, 168, 203, 204, 367, 369, 371, 388], "validate_on_program_cache_hit": 6, "compute_output_spec": [6, 367], "create_output_tensor": [6, 367], "map": [6, 29, 381, 382, 383, 384, 385, 386], "abl": 6, "prim": 6, "after": [6, 239, 262, 364, 370, 371, 381, 388], "keep": [6, 250, 362, 372], "mind": [6, 383], "overload": [6, 335, 366, 381], "queue_id": [6, 10, 12, 16, 17, 19, 28, 30, 34, 35, 43, 44, 45, 46, 47, 48, 50, 60, 61, 64, 74, 75, 80, 82, 83, 86, 88, 89, 91, 93, 95, 96, 98, 100, 102, 104, 105, 106, 107, 109, 120, 121, 123, 126, 127, 128, 132, 134, 143, 146, 148, 151, 155, 156, 157, 158, 159, 162, 165, 167, 169, 173, 178, 179, 183, 186, 188, 189, 192, 194, 196, 198, 203, 205, 211, 221, 222, 225, 226, 228, 229, 231, 232, 236, 239, 241, 247, 248, 254, 259, 265, 266, 269, 270, 276, 282, 283, 284, 285, 290, 291, 293, 295, 296, 297, 298, 302, 304, 310, 311, 312, 314, 317, 319, 320, 325, 327, 328, 333, 334, 339, 343, 344, 348, 350, 351, 352, 353, 356, 357, 361], "automat": [6, 207, 336, 363, 364, 367, 371, 372, 381, 382], "primit": 6, "so": [6, 107, 362, 364, 366, 367, 381, 387], "invok": [6, 369], "case": [6, 74, 119, 154, 208, 230, 249, 336, 362, 363, 367, 372, 381, 388], "custom": [6, 262, 263, 369, 383], "hash": [6, 218, 219, 371], "stl": 6, "hash_t": 6, "compute_program_hash": 6, "create_op_performance_model": 6, "opperformancemodel": 6, "make": [6, 218, 219, 304, 339, 345, 362, 372, 385, 388], "avail": [6, 200, 354, 364, 366, 373, 374, 377, 378, 388], "constexpr": 6, "some_condition_based_on_operation_attributes_and_or_tensor_arg": 6, "true": [6, 11, 13, 15, 17, 19, 21, 23, 31, 33, 34, 37, 38, 40, 42, 51, 53, 55, 57, 61, 65, 67, 68, 69, 71, 73, 74, 75, 81, 83, 89, 90, 91, 92, 94, 95, 97, 98, 103, 105, 108, 110, 113, 117, 118, 126, 127, 131, 136, 138, 140, 142, 145, 147, 166, 170, 172, 175, 180, 182, 184, 185, 187, 190, 191, 201, 202, 210, 215, 222, 224, 229, 240, 248, 251, 253, 255, 260, 267, 268, 272, 274, 279, 282, 283, 285, 288, 292, 294, 297, 299, 301, 305, 307, 309, 311, 313, 315, 317, 319, 326, 328, 330, 332, 333, 334, 339, 343, 344, 345, 349, 351, 353, 357, 359, 362, 366, 367, 381, 382, 383, 384, 385, 386, 387, 388], "get_logical_shap": 6, "tensorlayout": 6, "pageconfig": 6, "output_spec": 6, "create_device_tensor": 6, "42": [6, 382, 385, 387], "single_core_program_factori": 6, "work_split": 6, "tt_metal": [6, 240, 354, 367, 369, 371, 385], "output_tensor": [6, 10, 12, 16, 28, 30, 35, 43, 44, 45, 46, 47, 48, 50, 60, 64, 74, 80, 82, 83, 86, 88, 89, 91, 93, 95, 96, 98, 100, 102, 104, 105, 109, 115, 120, 121, 123, 126, 127, 128, 132, 134, 143, 146, 148, 155, 156, 157, 158, 159, 162, 165, 167, 169, 173, 178, 179, 183, 186, 188, 189, 192, 194, 196, 198, 203, 205, 221, 225, 226, 228, 229, 231, 236, 247, 248, 254, 259, 265, 266, 269, 270, 282, 283, 284, 290, 291, 293, 295, 296, 297, 298, 304, 310, 311, 312, 314, 320, 325, 327, 328, 339, 348, 350, 356, 357, 361, 367, 381, 386, 388], "src_buffer": 6, "dst_buffer": 6, "dataformat": 6, "cb_data_format": 6, "datatype_to_dataformat_convert": 6, "uint32_t": [6, 100], "single_tile_s": 6, "tiles": 6, "cb_data_format_output": 6, "single_tile_size_output": 6, "num_til": 6, "volum": 6, "constant": [6, 367, 372], "tile_hw": 6, "idevic": [6, 8, 9, 114, 115, 237, 324, 335, 366], "corecoord": [6, 367], "compute_with_storage_grid_s": 6, "num_cores_x": [6, 362, 383], "x": [6, 176, 208, 242, 343, 344, 366, 367, 371, 372, 382, 383, 386, 387], "y": [6, 242, 366, 367, 371, 372, 382, 383, 387], "all_cor": 6, "core_group_1": 6, "core_group_2": 6, "num_tiles_per_core_group_1": 6, "num_tiles_per_core_group_2": 6, "split_work_to_cor": 6, "src0_cb_index": 6, "cbindex": 6, "c_0": 6, "num_input_til": 6, "circularbufferconfig": 6, "cb_src0_config": 6, "set_page_s": 6, "cb_src0": 6, "createcircularbuff": 6, "output_cb_index": 6, "c_2": 6, "num_output_til": 6, "cb_output_config": 6, "cb_output": 6, "src_is_dram": 6, "buffer_typ": [6, 366, 367], "buffertyp": [6, 366, 367], "dram": [6, 337, 366, 367, 372, 381], "reader_compile_time_arg": 6, "dst_is_dram": 6, "writer_compile_time_arg": 6, "createkernel": 6, "eltwis": [6, 112, 249, 271, 367], "kernel": [6, 58, 176, 208, 211, 303, 367, 369, 371, 382], "dataflow": 6, "reader_unary_interleaved_start_id": 6, "readerdatamovementconfig": 6, "writer_unary_interleaved_start_id": 6, "writerdatamovementconfig": 6, "compute_kernel_args_group_1": 6, "per_core_block_cnt": 6, "per_core_block_s": 6, "math_approx_mod": 6, "fals": [6, 29, 41, 68, 69, 74, 89, 91, 95, 118, 126, 154, 176, 208, 211, 240, 250, 282, 339, 340, 341, 350, 352, 362, 367, 381, 382, 383, 384, 385, 386, 387, 388], "eltwise_unary_kernel_group_1_id": 6, "eltwise_sfpu": 6, "computeconfig": 6, "math_fidel": [6, 386], "mathfidel": [6, 386], "hifi4": [6, 371, 385], "compile_arg": 6, "rang": [6, 27, 44, 45, 47, 66, 106, 107, 122, 147, 164, 166, 181, 217, 223, 244, 280, 300, 325, 326, 366, 367, 372], "compute_kernel_args_group_2": 6, "eltwise_unary_kernel_group_2_id": 6, "num_tiles_written": 6, "num_tiles_per_cor": 6, "tt_assert": 6, "setruntimearg": 6, "address": [6, 367], "move": [6, 114, 115, 363, 364, 366, 367, 381, 383, 384, 385], "shared_vari": 6, "runtime_arg": [6, 367], "getruntimearg": [6, 367], "multi_core_program_factori": 6, "sequenc": [6, 343, 344], "compositeexampleoper": 6, "composite_exampl": 6, "another_copi": 6, "_pybind": 6, "example_pybind": 6, "pybind11": 6, "h": [6, 41, 78, 106, 107, 211, 354, 367, 372], "bind_example_oper": 6, "r": [6, 242, 369, 385], "pybind": 6, "expos": 6, "logic": [6, 192, 193, 196, 197, 199, 208, 218, 219], "self": [6, 362, 366, 367, 372, 386], "correct": 6, "specif": [6, 28, 208, 344, 363, 367, 369, 372, 373, 385], "pybind_overload_t": 6, "decltyp": 6, "examples_pybind": 6, "py_modul": 6, "final": [6, 208, 239, 362, 363, 364, 370, 381], "wherev": 6, "want": [6, 364, 369, 382, 384, 388], "its": [6, 58, 85, 239, 302, 362, 363, 366, 367, 369, 370, 371, 372, 388], "import": [6, 211, 362, 363, 364, 369, 371, 381, 382, 383, 384, 385, 386, 387, 388], "For": [6, 11, 21, 29, 75, 113, 119, 145, 172, 180, 182, 184, 185, 187, 190, 191, 201, 202, 208, 248, 251, 255, 260, 272, 305, 311, 345, 359, 362, 363, 366, 369, 370, 371, 372], "signatur": 6, "And": [6, 362, 366, 367, 372, 381, 382], "ignor": [6, 251], "kwarg": [6, 262, 263, 335, 366, 388], "def": [6, 362, 383, 384, 385, 386, 387, 388], "golden_funct": 6, "befor": [6, 29, 239, 263, 304, 363, 367, 372], "postprocess": 6, "manual": [6, 362, 388], "pack": [6, 351, 353], "preprocess_golden_function_input": 6, "ttnn_input_tensor": 6, "postprocess_golden_function_output": 6, "torch_output_tensor": [6, 388], "dtype": [6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 346, 347, 348, 349, 350, 355, 356, 357, 358, 359, 360, 361, 362, 366, 367, 372, 381, 382, 383, 384, 386, 388], "becaus": [6, 372, 381, 382, 383], "wa": [6, 363, 371, 372, 381, 387], "_ttnn": [8, 9, 82, 114, 115, 237, 324, 335, 366, 367, 372], "default": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 366, 367, 371, 382, 388], "plan": [8, 9, 114, 115, 240], "deprec": [8, 9, 114, 115, 240, 384], "futur": [8, 9, 114, 115, 240], "arg0": [9, 366, 372], "none": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 367, 381, 382, 383, 384, 385, 386], "device_id": [9, 59, 69, 82, 83, 207, 237, 258, 324, 335, 336, 337, 366, 381, 382, 383, 384, 386, 388], "complextensor": [10, 11, 17, 25, 26, 62, 63, 74, 75, 149, 150, 152, 153, 222, 242, 243, 256, 257, 259, 260, 317], "memory_config": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 366, 367, 382, 383, 386, 388], "appli": [10, 12, 16, 30, 35, 41, 45, 50, 58, 64, 80, 86, 88, 89, 91, 93, 95, 96, 100, 101, 102, 104, 109, 123, 125, 126, 128, 129, 130, 132, 134, 143, 146, 155, 156, 157, 158, 159, 165, 167, 169, 173, 176, 178, 179, 183, 186, 188, 189, 192, 194, 196, 198, 203, 205, 208, 211, 225, 226, 228, 231, 239, 259, 264, 265, 266, 269, 270, 282, 284, 290, 291, 293, 295, 296, 298, 304, 310, 312, 314, 320, 322, 325, 327, 348, 350, 363, 367], "element": [10, 12, 28, 30, 35, 45, 50, 60, 64, 80, 88, 89, 91, 93, 95, 96, 100, 102, 104, 109, 125, 126, 128, 129, 130, 134, 143, 146, 155, 156, 157, 158, 159, 169, 173, 178, 179, 183, 186, 194, 205, 228, 231, 232, 239, 246, 247, 254, 259, 264, 265, 266, 269, 270, 273, 275, 282, 290, 291, 293, 295, 296, 298, 304, 310, 312, 322, 325, 327, 339, 348, 350, 353, 367, 372, 381], "wise": [10, 12, 30, 35, 45, 50, 64, 80, 88, 89, 91, 93, 95, 96, 100, 102, 104, 109, 125, 126, 128, 130, 134, 143, 146, 155, 156, 157, 158, 159, 169, 173, 178, 179, 183, 186, 194, 205, 228, 231, 247, 254, 259, 264, 265, 266, 269, 270, 282, 290, 291, 293, 295, 296, 298, 304, 310, 312, 322, 325, 327, 348, 350, 367], "mathrm": [10, 12, 16, 18, 30, 35, 36, 43, 44, 45, 46, 47, 48, 50, 64, 74, 76, 80, 86, 87, 88, 89, 91, 93, 95, 96, 100, 102, 104, 109, 111, 122, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 143, 144, 146, 148, 154, 155, 156, 157, 158, 159, 164, 165, 167, 168, 169, 171, 173, 178, 179, 183, 186, 188, 189, 192, 193, 194, 196, 197, 198, 199, 203, 204, 205, 212, 216, 225, 226, 227, 228, 230, 231, 238, 246, 247, 249, 250, 259, 264, 265, 266, 269, 270, 282, 284, 286, 290, 291, 293, 295, 296, 298, 304, 310, 312, 314, 318, 320, 322, 325, 327, 348, 350, 358, 367], "_tensor": [10, 12, 16, 18, 30, 35, 36, 43, 44, 45, 46, 47, 48, 50, 64, 74, 76, 80, 86, 87, 88, 89, 91, 93, 95, 96, 100, 102, 104, 109, 111, 122, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 143, 144, 146, 148, 154, 155, 156, 157, 158, 159, 164, 165, 167, 168, 169, 171, 173, 178, 179, 183, 186, 188, 189, 192, 193, 194, 196, 197, 198, 199, 203, 204, 205, 212, 216, 225, 226, 227, 228, 230, 231, 238, 246, 247, 249, 250, 259, 264, 265, 266, 269, 270, 282, 284, 286, 290, 291, 293, 295, 296, 298, 304, 310, 312, 314, 318, 320, 322, 325, 327, 348, 350, 358], "_i": [10, 12, 16, 30, 35, 36, 43, 44, 45, 46, 47, 48, 50, 64, 74, 80, 86, 88, 89, 91, 93, 95, 96, 100, 102, 104, 109, 122, 123, 125, 126, 128, 129, 130, 132, 134, 143, 144, 146, 148, 155, 156, 157, 158, 159, 164, 167, 169, 173, 178, 179, 183, 186, 192, 193, 194, 196, 197, 198, 199, 203, 205, 225, 226, 228, 230, 231, 246, 247, 250, 259, 264, 265, 266, 269, 270, 282, 284, 286, 290, 291, 293, 295, 296, 298, 304, 310, 312, 320, 322, 325, 327, 348, 350, 358], "verb": [10, 12, 30, 35, 43, 44, 45, 46, 47, 48, 50, 64, 76, 80, 93, 96, 100, 102, 104, 109, 111, 122, 125, 130, 143, 146, 148, 155, 156, 157, 158, 159, 164, 165, 169, 171, 178, 179, 183, 186, 188, 189, 212, 216, 228, 249, 259, 264, 265, 266, 269, 270, 286, 290, 291, 293, 295, 296, 298, 310, 312, 314, 322, 325, 327, 350], "keyword": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359], "prealloc": [10, 12, 16, 17, 19, 28, 30, 34, 35, 41, 43, 44, 45, 46, 47, 48, 50, 60, 61, 64, 74, 75, 80, 82, 83, 86, 88, 89, 91, 93, 95, 96, 98, 100, 102, 104, 105, 109, 120, 121, 123, 126, 127, 128, 132, 134, 143, 146, 148, 155, 156, 157, 158, 159, 162, 165, 167, 169, 173, 178, 179, 183, 186, 188, 189, 192, 194, 196, 198, 203, 205, 221, 222, 225, 226, 228, 229, 231, 236, 247, 248, 254, 259, 265, 266, 269, 270, 282, 283, 284, 285, 290, 291, 293, 295, 296, 297, 298, 304, 310, 311, 312, 314, 317, 319, 320, 325, 327, 328, 339, 348, 350, 356, 357, 361], "queue": [10, 12, 16, 17, 19, 28, 30, 34, 35, 43, 44, 45, 46, 47, 48, 50, 60, 61, 64, 74, 75, 80, 82, 83, 86, 88, 89, 91, 93, 95, 96, 98, 100, 102, 104, 105, 106, 107, 109, 118, 119, 120, 121, 123, 126, 127, 128, 132, 134, 143, 146, 148, 151, 155, 156, 157, 158, 159, 162, 165, 167, 169, 173, 178, 179, 183, 186, 188, 189, 192, 194, 196, 198, 203, 205, 211, 221, 222, 225, 226, 228, 229, 231, 232, 236, 239, 241, 247, 248, 254, 259, 265, 266, 269, 270, 276, 282, 283, 284, 285, 290, 291, 293, 295, 296, 297, 298, 304, 310, 311, 312, 314, 317, 319, 320, 324, 325, 327, 328, 333, 334, 335, 338, 339, 343, 344, 348, 350, 351, 352, 353, 356, 357, 361], "id": [10, 12, 16, 17, 19, 28, 30, 34, 35, 43, 44, 45, 46, 47, 48, 50, 60, 61, 64, 74, 75, 80, 82, 83, 86, 88, 89, 91, 93, 95, 96, 98, 100, 102, 104, 105, 106, 107, 109, 118, 119, 120, 121, 123, 126, 127, 128, 132, 134, 143, 146, 148, 151, 155, 156, 157, 158, 159, 162, 165, 167, 169, 173, 178, 179, 183, 186, 188, 189, 192, 194, 196, 198, 203, 205, 207, 211, 221, 222, 225, 226, 228, 229, 231, 232, 236, 237, 239, 241, 247, 248, 254, 259, 265, 266, 269, 270, 276, 282, 283, 284, 285, 290, 291, 293, 295, 296, 297, 298, 304, 310, 311, 312, 314, 317, 319, 320, 324, 325, 327, 328, 333, 334, 335, 338, 339, 343, 344, 348, 350, 351, 352, 353, 356, 357, 361, 366, 371], "bfloat16": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 366, 367, 371, 372, 381, 382, 383, 385, 386, 388], "tile": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 116, 117, 119, 122, 123, 124, 125, 126, 127, 128, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 212, 215, 216, 217, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 238, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 338, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 361, 366, 367, 371, 372, 381, 382, 385], "grad_tensor": [11, 13, 15, 17, 19, 21, 23, 26, 31, 33, 34, 37, 38, 40, 42, 51, 53, 55, 57, 61, 63, 65, 67, 71, 73, 75, 77, 81, 83, 90, 92, 94, 97, 98, 103, 105, 108, 110, 113, 117, 127, 136, 138, 140, 142, 145, 147, 150, 166, 170, 172, 175, 180, 182, 184, 185, 187, 190, 191, 201, 202, 210, 215, 222, 224, 229, 243, 245, 248, 251, 253, 255, 257, 260, 267, 268, 272, 274, 279, 281, 283, 285, 288, 292, 294, 297, 299, 301, 305, 307, 309, 311, 313, 315, 317, 319, 326, 328, 330, 332, 349, 357, 359], "list": [11, 13, 15, 16, 17, 19, 21, 23, 26, 28, 31, 33, 34, 37, 38, 40, 42, 51, 53, 55, 57, 60, 61, 63, 65, 67, 68, 71, 73, 75, 77, 78, 81, 82, 84, 86, 90, 92, 94, 97, 98, 103, 105, 108, 110, 113, 115, 117, 123, 127, 132, 136, 138, 140, 142, 145, 147, 150, 165, 166, 167, 170, 172, 175, 176, 180, 182, 184, 185, 187, 188, 189, 190, 191, 192, 196, 198, 201, 202, 203, 208, 210, 211, 215, 222, 224, 225, 226, 229, 232, 239, 240, 241, 243, 245, 248, 249, 250, 251, 253, 255, 257, 260, 267, 268, 272, 274, 279, 281, 283, 284, 285, 288, 292, 294, 297, 299, 301, 302, 305, 307, 309, 311, 313, 314, 315, 317, 319, 320, 324, 326, 328, 330, 332, 339, 344, 349, 350, 351, 353, 357, 359, 366, 367], "backward": [11, 13, 15, 17, 19, 21, 23, 26, 31, 33, 34, 37, 38, 40, 42, 51, 53, 55, 57, 61, 63, 65, 67, 71, 73, 75, 77, 81, 83, 90, 92, 94, 97, 98, 103, 105, 108, 110, 113, 117, 127, 136, 138, 140, 142, 145, 147, 150, 166, 170, 172, 175, 180, 182, 184, 185, 187, 190, 191, 201, 202, 210, 215, 222, 224, 229, 243, 245, 248, 251, 253, 255, 257, 260, 267, 268, 272, 274, 279, 281, 283, 285, 288, 292, 294, 297, 299, 301, 305, 307, 309, 311, 313, 315, 317, 319, 326, 328, 330, 332, 349, 357, 359, 367], "given": [11, 13, 15, 17, 19, 21, 23, 26, 28, 31, 33, 34, 37, 38, 40, 42, 51, 53, 55, 57, 61, 63, 65, 67, 71, 73, 75, 77, 78, 81, 85, 90, 92, 94, 97, 98, 103, 105, 108, 110, 113, 117, 127, 136, 138, 140, 142, 145, 147, 150, 166, 170, 172, 175, 180, 182, 184, 185, 187, 190, 191, 201, 202, 210, 215, 218, 219, 222, 224, 229, 237, 240, 243, 245, 248, 251, 253, 255, 257, 260, 267, 268, 272, 274, 275, 279, 281, 283, 285, 288, 292, 294, 297, 299, 301, 305, 307, 309, 311, 313, 315, 317, 319, 326, 328, 330, 332, 339, 344, 349, 354, 357, 359, 362, 366, 367, 371, 381], "gradient": [11, 13, 15, 17, 19, 21, 23, 31, 33, 34, 37, 38, 40, 42, 51, 53, 55, 57, 61, 65, 67, 71, 73, 75, 77, 81, 83, 90, 92, 94, 97, 98, 103, 105, 108, 110, 113, 117, 127, 136, 138, 140, 142, 145, 147, 166, 170, 172, 175, 180, 182, 184, 185, 187, 190, 191, 201, 202, 210, 215, 222, 224, 229, 245, 248, 251, 253, 255, 260, 267, 268, 272, 274, 279, 281, 283, 285, 288, 292, 294, 297, 299, 301, 305, 307, 309, 311, 313, 315, 317, 319, 326, 328, 330, 332, 349, 357, 359], "about": [11, 21, 113, 180, 182, 184, 185, 187, 190, 191, 201, 202, 248, 251, 259, 260, 272, 305, 311, 359, 369, 372, 382], "requires_grad": [11, 13, 15, 17, 19, 21, 23, 31, 33, 34, 37, 38, 40, 42, 51, 53, 55, 57, 61, 65, 67, 71, 73, 75, 81, 83, 90, 92, 94, 97, 98, 103, 105, 108, 110, 113, 117, 127, 136, 138, 140, 142, 145, 147, 166, 170, 172, 175, 180, 182, 184, 185, 187, 190, 191, 201, 202, 210, 215, 222, 224, 229, 248, 251, 253, 255, 260, 267, 268, 272, 274, 279, 283, 285, 288, 292, 294, 297, 299, 301, 305, 307, 309, 311, 313, 315, 317, 319, 326, 328, 330, 332, 349, 357, 359], "rand": [12, 14, 30, 32, 35, 39, 49, 50, 61, 64, 66, 70, 82, 88, 93, 96, 102, 109, 116, 125, 128, 130, 134, 146, 155, 156, 157, 158, 159, 173, 174, 178, 179, 181, 183, 186, 194, 195, 205, 217, 228, 231, 233, 234, 238, 249, 251, 252, 264, 265, 266, 274, 275, 278, 286, 290, 293, 295, 296, 298, 300, 308, 310, 312, 322, 323, 325, 327, 329, 346, 347, 381, 384, 386, 388], "input_tensor_a": [13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 33, 34, 36, 37, 38, 40, 42, 43, 44, 46, 47, 48, 51, 53, 61, 65, 67, 71, 73, 74, 75, 76, 81, 86, 87, 90, 92, 94, 97, 103, 108, 110, 111, 112, 113, 117, 122, 123, 124, 132, 133, 136, 138, 140, 144, 145, 147, 151, 154, 164, 165, 166, 167, 168, 170, 172, 175, 176, 180, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 201, 202, 203, 204, 206, 208, 210, 211, 212, 215, 216, 222, 224, 225, 226, 227, 230, 238, 246, 248, 249, 253, 255, 260, 267, 268, 271, 272, 279, 284, 285, 286, 288, 292, 294, 299, 301, 307, 309, 313, 314, 315, 317, 318, 319, 320, 326, 330, 349, 356, 357, 358, 359, 381, 388], "invers": [13, 15, 31, 33, 38, 40], "cosin": [13, 15, 65, 67, 101], "hyperbol": [15, 33, 40, 67, 301, 328], "input_tensor_b": [16, 17, 18, 19, 20, 21, 22, 23, 34, 36, 37, 42, 43, 44, 46, 47, 48, 61, 74, 75, 76, 86, 87, 111, 112, 113, 122, 123, 124, 132, 133, 144, 145, 151, 154, 164, 165, 166, 167, 168, 172, 176, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 203, 204, 206, 208, 210, 212, 215, 216, 222, 225, 226, 227, 230, 238, 249, 271, 272, 284, 285, 286, 314, 315, 317, 318, 319, 320, 356, 357, 358, 359, 381, 388], "number": [16, 17, 20, 22, 24, 42, 60, 74, 75, 76, 86, 87, 99, 106, 107, 111, 112, 113, 123, 124, 132, 133, 165, 167, 168, 172, 188, 189, 192, 196, 198, 203, 204, 206, 208, 209, 211, 212, 213, 214, 216, 222, 225, 226, 227, 232, 239, 241, 248, 249, 261, 271, 272, 273, 275, 276, 284, 314, 316, 317, 320, 321, 334, 339, 340, 341, 352, 355, 356, 366, 367, 370, 371, 372, 383, 387], "datatyp": [16, 27, 29, 78, 82, 83, 84, 85, 86, 119, 120, 121, 123, 129, 131, 132, 165, 167, 176, 188, 189, 192, 196, 198, 203, 208, 225, 226, 235, 236, 284, 314, 320, 336, 337, 360, 361, 364, 366, 367, 381, 382, 386], "str": [16, 29, 34, 75, 79, 86, 123, 132, 165, 167, 176, 177, 188, 189, 192, 196, 198, 203, 208, 218, 219, 225, 226, 284, 289, 314, 320, 366, 367, 387], "_a": [16, 18, 36, 43, 44, 46, 47, 48, 74, 76, 86, 87, 111, 122, 123, 124, 132, 133, 144, 154, 164, 165, 167, 168, 188, 189, 192, 193, 196, 197, 198, 199, 203, 204, 212, 216, 225, 226, 227, 230, 238, 249, 284, 286, 314, 318, 320, 358], "_b": [16, 18, 36, 43, 44, 46, 47, 48, 74, 76, 86, 87, 111, 122, 123, 124, 132, 133, 144, 154, 164, 165, 167, 168, 188, 189, 192, 193, 196, 197, 198, 199, 203, 204, 212, 216, 225, 226, 227, 230, 238, 249, 284, 286, 314, 318, 320, 358], "broadcast": [16, 17, 75, 86, 123, 132, 165, 167, 176, 188, 189, 192, 196, 198, 203, 208, 225, 226, 275, 314, 317, 320, 343, 388], "int32": [16, 43, 44, 45, 46, 47, 48, 122, 164, 384], "tensor1": [16, 17, 18, 19, 20, 21, 22, 23, 34, 36, 37, 42, 43, 44, 46, 47, 48, 60, 61, 74, 75, 76, 86, 87, 111, 112, 113, 122, 123, 124, 132, 133, 144, 145, 151, 154, 164, 165, 166, 167, 168, 171, 172, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 203, 204, 206, 208, 210, 212, 215, 216, 222, 225, 226, 227, 230, 238, 249, 271, 272, 284, 285, 286, 314, 315, 317, 318, 319, 320, 356, 357, 358, 359], "tensor2": [16, 17, 18, 19, 20, 21, 22, 23, 34, 36, 37, 42, 43, 44, 46, 47, 48, 60, 61, 74, 75, 76, 86, 87, 111, 112, 113, 122, 123, 124, 132, 133, 144, 145, 151, 154, 164, 165, 166, 167, 168, 171, 172, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 203, 204, 206, 208, 210, 212, 215, 216, 222, 225, 226, 227, 230, 238, 249, 271, 272, 284, 285, 286, 314, 315, 317, 318, 319, 320, 356, 357, 358, 359], "scalar": [16, 17, 20, 22, 43, 44, 46, 47, 48, 74, 75, 76, 77, 86, 87, 111, 112, 113, 120, 121, 123, 124, 132, 133, 165, 167, 168, 171, 172, 188, 189, 192, 196, 198, 203, 204, 206, 212, 216, 222, 225, 226, 227, 245, 249, 254, 255, 271, 272, 284, 314, 317, 320, 364, 367, 388], "are_required_output": [17, 19, 34, 61, 75, 222, 285, 317, 319, 357], "input_grad": [17, 19, 34, 61, 75, 222, 285, 317, 319], "other_grad": [17, 19, 34, 61, 75, 222, 285, 317, 319], "bfloat4_b": [17, 19, 20, 22, 37, 42, 61, 75, 119, 145, 166, 171, 172, 190, 191, 206, 210, 215, 222, 285, 315, 317, 319, 338, 356, 359, 366], "alpha": [18, 19, 21, 23, 52, 53, 75, 80, 81, 287, 318, 319], "float": [18, 19, 20, 21, 22, 23, 41, 52, 53, 54, 55, 56, 57, 77, 80, 81, 100, 104, 107, 114, 119, 120, 121, 131, 135, 136, 137, 139, 141, 142, 143, 154, 163, 169, 170, 171, 200, 202, 241, 245, 246, 247, 249, 254, 255, 269, 270, 277, 278, 280, 281, 287, 304, 305, 306, 307, 318, 319, 331, 332, 343, 344, 346, 347, 364, 366, 367, 372], "input_tensor_c": [20, 21, 22, 23, 172, 206, 356, 357], "tensor3": [20, 21, 22, 23, 171, 172, 206, 356, 357], "cluster_axi": [24, 261], "mesh_devic": [24, 99, 261, 366], "meshdevic": [24, 84, 85, 120, 121, 235, 236, 261, 335, 336, 360, 361, 366], "num_link": [24, 99, 261], "num_work": [24, 99, 261], "num_buffers_per_channel": [24, 99, 261], "topologi": [24, 99, 261, 369], "ring": [24, 99, 261], "gather": [24, 99], "across": [24, 99, 129, 261, 366, 371, 372], "dimens": [24, 28, 58, 60, 61, 120, 125, 129, 130, 151, 208, 209, 213, 214, 235, 240, 241, 249, 250, 251, 261, 264, 275, 276, 302, 303, 316, 321, 322, 336, 338, 339, 342, 343, 344, 345, 355, 360, 364, 366, 367, 372], "meshtensor": [24, 261], "axi": [24, 261, 275, 367], "correspond": [24, 82, 83, 261, 344, 366, 367], "line": [24, 261, 385], "mesh": [24, 119, 261, 336, 338, 369], "applic": [24, 79, 261, 372], "guid": [24, 261, 368, 369], "blob": [24, 261, 387], "main": [24, 261, 370, 373, 385, 387, 388], "tech_report": [24, 261], "20mesh": [24, 261], "20of": [24, 261], "20devic": [24, 261], "20with": [24, 261], "20tt": [24, 261], "link": [24, 99, 261], "worker": [24, 99, 237, 261, 336, 366, 383, 384], "per": [24, 99, 261, 352, 367, 385], "full_tensor": [24, 99, 261], "randn": [24, 29, 69, 83, 85, 99, 118, 119, 129, 176, 208, 211, 236, 258, 261, 335, 336, 337, 338, 350, 361, 364, 366, 382, 383, 387], "32": [24, 58, 60, 61, 69, 107, 118, 120, 125, 129, 130, 176, 208, 232, 233, 234, 235, 238, 241, 249, 251, 258, 264, 274, 275, 286, 302, 303, 322, 335, 336, 337, 350, 360, 364, 366, 367, 372, 381, 382, 384, 385, 386, 388], "256": [24, 99, 211, 261, 386, 387], "physical_device_id": [24, 99, 261, 381, 382, 383, 384, 385, 386], "get_t3k_physical_device_ids_r": [24, 99, 261], "open_mesh_devic": [24, 99, 261], "meshshap": [24, 99, 261], "ttnn_tensor": [24, 338, 381], "input_dtyp": [24, 99, 261], "mem_config": [24, 99, 261, 366], "mesh_mapp": [24, 29, 119], "shardtensor2dmesh": 24, "mesh_shap": 24, "end": [27, 74, 154, 171, 230, 302, 353, 363, 366, 367, 371, 383, 385], "dram_memory_config": [27, 58, 84, 85, 176, 208, 372], "inclus": [27, 366, 372], "exclus": [27, 239], "consecut": [27, 372], "evenli": 27, "space": [27, 367, 372], "within": [27, 44, 47, 211, 363, 366, 367, 372, 373], "float32": [27, 84, 85, 104, 122, 148, 164, 247, 360, 361, 362, 366, 371, 372, 381, 386, 388], "print": [27, 29, 60, 84, 85, 119, 120, 121, 176, 207, 208, 235, 236, 237, 241, 273, 275, 289, 302, 303, 336, 338, 360, 361, 364, 366, 367, 371, 372, 381, 382, 383, 385, 387, 388], "00000": [27, 381], "row_major": [27, 28, 68, 84, 85, 119, 120, 121, 233, 234, 235, 333, 334, 351, 353, 360, 361, 364, 366, 367, 371, 381, 382, 386], "indic": [28, 82, 83, 232, 302, 353, 366, 367], "currenli": 28, "must": [28, 41, 83, 224, 248, 254, 276, 302, 333, 334, 339, 351, 353, 364, 366, 367, 369, 372], "uint32": [28, 82, 83, 148, 151, 366, 371, 372, 381], "reduc": [28, 261, 339, 367], "cache_file_nam": 29, "pathlib": [29, 79, 177], "path": [29, 79, 177, 371, 385, 387, 388], "callabl": [29, 218, 219], "tensortomesh": [29, 119], "use_device_til": 29, "serial": 29, "flag": [29, 367, 385], "toggl": 29, "whether": [29, 118, 176, 208, 211, 218, 219, 333, 334, 339, 344, 345, 351, 353, 367], "truncat": [29, 349, 367], "mantissa": 29, "bit": [29, 367], "bfp": [29, 372], "format": [29, 114, 115, 119, 211, 259, 352, 370, 372], "rais": [29, 338, 386], "runtim": 29, "error": [29, 162, 207, 208, 221, 338, 363], "rte": 29, "bfp8": [29, 381], "bfp4": 29, "375": [29, 119, 384], "30469": [29, 119], "714844": [29, 119], "761719": [29, 119], "53125": [29, 119], "652344": [29, 119], "sine": [31, 33, 101, 301], "round_mod": [34, 74, 75, 254, 255], "assign": [34, 364], "other_tensor": [34, 75], "mode": [34, 41, 42, 75, 89, 91, 95, 118, 126, 127, 162, 211, 221, 255, 282, 367, 381, 382, 383, 384, 385, 386], "arctan": 36, "left": [36, 74, 122, 164, 286, 366, 367, 370], "right": [36, 74, 122, 164, 286, 366, 367], "tangenr": 38, "tangent": [40, 328], "ep": [41, 200, 202, 367], "1e": [41, 131, 154, 163, 277, 367], "running_mean": [41, 367], "running_var": [41, 367], "bia": [41, 42, 131, 163, 176, 277, 362, 367, 383, 386], "spatial": [41, 78, 129, 354, 367], "over": [41, 129, 131, 163, 277, 303, 343, 344, 367], "interleav": [41, 60, 337, 345, 366, 367, 372], "current": [41, 58, 60, 68, 218, 219, 344, 367, 369, 372, 373, 381, 388], "w": [41, 78, 106, 107, 211, 354, 366, 367, 371], "epsilon": [41, 131, 163, 277, 367], "gamma": [41, 224, 367], "beta": [41, 304, 305, 367], "evalu": [41, 385], "approxim": [42, 89, 91, 95, 126, 127, 282], "bias_gelu": 42, "integ": [43, 44, 46, 47, 48, 239, 344, 367], "ha": [44, 47, 208, 218, 219, 324, 345, 362, 363, 364, 366, 367, 371, 372, 381, 387, 388], "shift_bit": [44, 47], "31": [44, 47, 364, 366, 385, 387], "2147483647": 45, "wormhole_b0": [45, 50, 104, 109, 200, 254, 369], "major": [51, 105, 107, 108, 110, 117, 232, 279, 294, 349, 352, 366, 372, 381, 382], "formula": [53, 81, 112, 136, 170, 171, 202, 271, 305, 307], "min_tensor": [54, 56], "max_tensor": [54, 56], "doe": [58, 119, 338, 363, 367, 371], "alter": 58, "width": [58, 68, 106, 107, 120, 129, 208, 211, 235, 240, 336, 342, 360, 367, 371], "height": [58, 60, 68, 106, 107, 120, 129, 208, 211, 235, 240, 336, 360, 367, 371, 372], "adjust": [58, 304], "necessari": [58, 363], "param": [58, 78, 251, 303, 367, 387], "target": [58, 114, 115, 335, 363, 366, 367], "l1_memory_config": [58, 362, 372, 382, 383, 388], "compute_kernel_config": [58, 101, 163, 176, 208, 277, 303, 343, 344], "remov": [59, 338, 353, 366, 381, 384, 385, 387], "success": 59, "group": [60, 367, 372, 386], "concaten": [60, 61, 342, 345, 367], "greater": [60, 72, 106, 107, 123, 124, 132, 133, 174, 224, 367, 388], "than": [60, 72, 106, 107, 123, 124, 132, 133, 167, 168, 174, 203, 204, 208, 224, 367, 369, 371, 383, 388], "partit": 60, "independ": 60, "altern": [60, 208, 388], "recombin": 60, "convolut": [60, 211, 367, 386], "residu": 60, "64": [60, 68, 69, 118, 125, 130, 176, 208, 241, 258, 264, 302, 303, 322, 335, 336, 337, 366, 372, 383, 384, 385, 386, 388], "conjug": 62, "core_grid": [68, 131, 176, 208, 362, 382, 383], "coregrid": [68, 131, 176, 208, 382, 383], "corerang": 68, "strategi": [68, 79, 208, 366, 367, 371, 372, 385], "shardstrategi": 68, "orient": [68, 372], "shardorient": 68, "use_height_and_width_as_shard_shap": 68, "distribut": [68, 79, 176, 208, 372], "l1": [68, 176, 208, 237, 337, 366, 372, 383], "either": [68, 208, 336, 363, 367, 369, 372, 373], "travers": 68, "seen": [68, 381, 382], "math": [68, 371, 385], "320": [68, 367], "forc": [69, 384], "resourc": [69, 385], "explicitli": [69, 381], "even": [69, 207, 208, 364, 367], "degre": [71, 253], "radian": [71, 253], "accurate_mod": 74, "begin": [74, 154, 230, 367, 371], "text": [74, 154, 230, 238, 363, 367], "_mode": 74, "non": [74, 118, 208, 211, 232, 248, 259, 280], "divid": [75, 340, 341], "pcc": [75, 145, 166, 255, 363, 370], "degrad": [75, 145, 166, 255], "denomin": [77, 254, 367], "downsample_param": 78, "2d": [78, 129, 208, 354, 367, 372], "assum": [78, 101, 115, 324, 354, 373], "form": [78, 354], "conv": [78, 386], "stride": [78, 211, 367, 381, 386], "file_nam": [79, 177, 387, 388], "dict": [79, 218, 219, 366, 387], "dump": [79, 218, 384, 387, 388], "save": [79, 385, 387], "padding_idx": 82, "embeddings_typ": 82, "embeddingstyp": 82, "gener": [82, 100, 107, 208, 242, 363, 367, 369, 371, 381, 382, 383, 384, 385, 386], "retriev": 82, "word": 82, "token": [82, 161, 344, 385], "106445": 82, "988281": 82, "59375": 82, "212891": 82, "964844": 82, "199219": 82, "996094": 82, "78362e": 82, "38": [82, 372, 385], "89785e": 82, "39": [82, 381, 382, 383, 384, 385, 386, 387], "04479e": 82, "25815e": 82, "71833e": 82, "59995e": 82, "60398e": 82, "83671e": 82, "22242e": 82, "88263e": 82, "35917e": 82, "49994e": 82, "output_gradient_tensor": 83, "respect": [83, 208, 372], "extract": 83, "vocabulari": 83, "previou": [83, 364], "batch_siz": [83, 129, 211, 342, 345, 362, 383, 384, 385, 386], "seq_len": [83, 101], "embedding_dim": 83, "num_embed": 83, "1024": [83, 122, 164, 382], "4096": [83, 366], "3200": 83, "input_shap": [83, 211, 386], "input_index": 83, "randint": [83, 364, 384], "weights_shap": 83, "weights_ttnn": 83, "grad_shap": 83, "grad_data": 83, "uniniti": [84, 85], "bfloat_8": 84, "21": [84, 385, 387], "67": 84, "whose": [85, 336], "desir": [85, 106, 107, 114, 115, 119, 336, 337, 338], "87": 85, "45": [85, 325, 326, 385], "22": [85, 385], "60": [85, 385], "75": 85, "25": [85, 336, 371, 385, 387], "equal": [86, 87, 123, 124, 154, 167, 168, 226, 227, 367, 388], "place": [87, 124, 133, 160, 161, 168, 204, 227, 341, 366, 372], "input_a": [87, 124, 133, 151, 168, 204, 209, 213, 214, 227, 316, 321, 355], "input_b": [87, 124, 133, 151, 168, 204, 227], "_tensor_i": [88, 128, 134, 173, 194, 205, 231], "fast_and_approximate_mod": [89, 91, 95, 126, 282], "exponenti": 98, "num_devic": [99, 261], "tt_input_tensor": [99, 261], "enumer": [99, 261], "append": [99, 261, 371, 387], "get_devic": [99, 261], "input_tensor_mesh": [99, 261], "aggregate_as_tensor": [99, 261], "seed": [100, 387], "probabl": 100, "scale": [100, 137, 139, 287, 304, 343, 344, 367], "rng": 100, "averag": [100, 129, 367, 371, 385], "total_elem": 100, "124": 100, "prob": 100, "cod_cach": 101, "sin_cach": 101, "token_index": 101, "devicecomputekernelconfig": [101, 163, 176, 208, 277, 343, 344], "rotari": 101, "cos_cach": 101, "token_idx": 101, "transpos": [101, 176, 208, 241, 345, 352], "head_dim": 101, "fill_valu": [104, 120, 121, 367], "hone": [106, 107], "wone": [106, 107], "val_hi": [106, 107], "val_lo": [106, 107], "count": [106, 107, 366, 371, 385], "ye": [106, 107, 366, 367], "high": [106, 107, 369, 372, 388], "region": [106, 107, 237], "nchw": 107, "hw": [107, 367], "rest": 107, "hfill": 107, "wfill": 107, "hi": 107, "lo": 107, "expect": [107, 211, 345, 363, 366, 367, 370, 381], "low": 107, "divis": [111, 125, 130, 254, 264, 322, 366, 367, 372], "rounding_mod": [112, 254, 271], "wh_b0": [112, 271], "padded_shap": [114, 240], "simpleshap": 114, "pad_valu": [114, 119, 241, 276, 334, 366], "target_layout": [114, 115, 366, 367], "target_mem_config": [114, 115], "padded_tensor": 114, "output_mem_config": [114, 115, 385], "unpadded_tensor": 115, "cq_id": [118, 119, 324, 335, 338, 366, 367], "complet": [118, 324, 367], "device_tensor": [118, 335], "host_tensor": 118, "itself": [119, 366], "twice": [119, 371], "purpos": [119, 363, 370, 372], "mapper": 119, "uint16": [120, 148, 235, 339, 360, 372], "filled_tensor": [120, 121], "templat": [121, 236, 361, 371], "greatest": 122, "divisor": [122, 255], "uint8": [127, 148, 283, 302], "adapt": [129, 367], "signal": [129, 367, 385], "compos": [129, 338, 367], "sever": [129, 367], "plane": [129, 367, 386], "input_mask": 131, "inplac": [131, 193, 195, 197, 199, 386], "output_layout": [131, 367], "num_group": [131, 367], "lambd": [135, 136, 306, 307], "lambda": [136, 307, 362, 384, 386], "16666667": [137, 139], "shift": [137, 139, 367], "min_val": 141, "max_val": 141, "sfpu": 148, "shouldn": 148, "instead": [148, 270, 367, 381, 383, 387], "lower": [148, 369], "float16": [148, 381], "imaginari": 150, "batch_id": 151, "replac": [151, 331], "denot": [151, 367], "boolean": [152, 153, 339, 367], "rtol": 154, "05f": 154, "atol": 154, "08f": 154, "equal_nan": 154, "leq": 154, "otherwis": [154, 324, 339, 366, 383, 388], "rel": 154, "toler": 154, "absolut": [154, 162, 367], "nan": [154, 385], "treat": [154, 208], "comparison": [154, 370], "batch_index": 160, "popul": [160, 218, 371], "update_index": 161, "batch_offset": 161, "updat": [161, 363, 370, 388], "input_refer": [162, 221], "input_predict": [162, 221], "residual_input_tensor": [163, 277], "program_config": [163, 176, 208, 277, 340, 341, 343, 344], "programconfig": [163, 277], "least": [164, 208, 371], "recommend": [166, 362, 369, 381, 388], "80": [166, 369], "outsid": 166, "negative_slop": [169, 170], "slope": 169, "leaki": 169, "01": 170, "point": [171, 304, 364, 367, 371, 372], "transpose_a": [176, 208], "transpose_b": [176, 208], "matmulprogramconfig": [176, 208], "output_til": [176, 208], "behaviour": [176, 208], "grid": [176, 208, 343, 344, 351, 362, 372], "128": [176, 208, 388], "load": [177, 384, 385, 387], "whb0": [179, 183, 272], "logarithm": [185, 224], "AND": [192, 193, 367], "OR": [196, 197, 276, 367], "land": [198, 199], "lnot": [198, 199], "lor": [198, 199], "xor": [199, 367], "logitep": 202, "context": [207, 262, 263], "manag": [207, 262, 263, 363, 369], "exit": 207, "occur": 207, "product": [208, 343, 344], "therefor": [208, 381, 383], "dimension": [208, 224, 367, 372, 381], "addit": [208, 362, 367, 369], "front": [208, 371, 387], "These": [208, 363, 364, 367, 369, 373, 388], "allow": [208, 363, 366, 367, 370], "possibl": [208, 338, 362, 367, 384], "although": 208, "combin": 208, "most": [208, 381], "variou": [208, 369], "align": [208, 366, 367, 371], "appropri": [208, 363, 369], "abov": [208, 369], "criteria": 208, "messag": [208, 371], "unexpect": [208, 367], "obviou": [208, 381], "except": [208, 367, 381, 383, 385], "scenario": [208, 372], "relat": [208, 367], "swap": 208, "j": 208, "implicitli": 208, "extend": 208, "patch": 208, "leverag": [208, 367], "accord": [208, 241, 273], "1d": [208, 232, 249, 385], "look": [208, 339, 363, 368, 372, 385, 387], "determin": [208, 218, 219, 367, 372, 381, 382, 383, 384, 385, 386], "n_size": 208, "m_size": 208, "k_size": 208, "p": [208, 372], "though": [208, 364], "differ": [208, 314, 366, 372, 381, 388], "constraint": [208, 372, 381], "chosen": [208, 371, 387], "carefulli": 208, "fix": 208, "problem": 208, "input_h": 211, "input_w": 211, "kernel_s": [211, 367, 386], "dilat": [211, 367, 386], "applied_shard_schem": 211, "tensormemorylayout": [211, 366, 367, 386], "ceil_mod": [211, 367], "window": [211, 367], "nhw": [211, 352], "scheme": 211, "convolv": [211, 367], "createdevic": [211, 364, 366, 386], "l1_small_siz": [211, 237, 383, 384, 386], "8192": [211, 383, 384], "kernel_h": 211, "kernel_w": 211, "stride_h": 211, "stride_w": 211, "pad_h": [211, 240], "pad_w": [211, 240], "dilation_h": 211, "dilation_w": 211, "nchw_shape": 211, "40": [211, 385], "in_n": 211, "in_c": 211, "in_h": 211, "in_w": 211, "input_perm": 211, "input_reshap": 211, "tt_input": 211, "tt_input_dev": 211, "tt_output": [211, 364, 366], "block_shard": [211, 386], "20": [217, 304, 305, 369, 371, 385, 387], "initialize_model": [218, 219, 362, 384, 386], "model_nam": [218, 219, 362, 384, 385, 386], "convert_to_ttnn": [218, 219, 362], "custom_preprocessor": [218, 219, 362, 384, 386], "parameterdict": [218, 219], "prefix": [218, 219], "run_model": [218, 386], "reader_patterns_cach": 218, "disabl": [218, 219, 367, 381, 382, 383, 384, 385, 386, 388], "doesn": [218, 219, 381], "invalid": [218, 219], "alreadi": [218, 219, 237, 364, 373, 385, 387], "been": [218, 219, 324, 363, 387], "preprocessor": [218, 219], "put": [218, 219, 362, 381, 383, 386], "submodul": [218, 219, 369], "appear": [218, 219], "ttnn_module_arg": [218, 386], "tmp": [218, 381, 382, 383, 384, 386, 387], "model_graph": 218, "svg": [218, 386, 387, 388], "reader": 218, "avoid": [218, 304, 371, 372], "recomput": [218, 367], "multivari": 224, "mvlgamma": 224, "5f": 224, "_float": 230, "neq": 230, "well": [232, 366, 370], "trace_region_s": 237, "dispatch_core_config": 237, "dispatchcoreconfig": 237, "0x7fce87ce2330": 237, "small": [237, 385], "default_l1_small_s": 237, "default_trace_region_s": 237, "dispatch_core_typ": [237, 383, 384], "dispatchcoretyp": [237, 383, 384], "0x7fbac5bfc1b0": 237, "otim": 238, "output_tensor_shap": [239, 334, 366], "input_tensor_start": [239, 366], "locat": [239, 367, 368, 371, 385, 388], "mutual": 239, "along": [239, 250, 251, 302, 303, 339, 342, 366, 367, 369, 372], "describ": [239, 363, 367], "unpadded_shap": 240, "annot": [240, 363, 366], "fixeds": [240, 366], "pad_c": 240, "pad_n": 240, "legacyshap": 240, "tthe": 241, "broken": 241, "garbag": 241, "cartesian": 242, "theta": 242, "k": [244, 339, 343, 344, 367, 382], "decim": [244, 278], "coeff": 246, "coeffici": [246, 363], "sum_": [246, 367], "polynomi": 246, "expon": [247, 248, 280, 281, 364, 372], "power": [248, 350, 364], "length": [249, 343, 344], "arrai": 249, "all_dimens": [250, 251], "keepdim": [250, 367], "particular": [251, 362, 369, 381, 388], "actual": [254, 364, 372, 381], "numer": [254, 304, 367, 372], "new_tensor": 258, "my_memory_config": 258, "inaccur": [259, 372], "due": [259, 371, 372, 381], "characterist": 259, "fp": 259, "inform": [259, 367, 373], "reduce0scatt": 261, "being": [262, 263, 371, 372], "upper_limit": 269, "cap": 269, "lower_limit": 270, "carri": 270, "modulu": 271, "repeat_dim": 273, "repetit": [273, 275, 367], "he": 275, "fit": 275, "expand": [275, 372], "torch_input_tensor": [275, 386, 388], "torch_result": 275, "cost": [276, 367], "view": [276, 388], "condit": [276, 363], "met": 276, "new_shap": 276, "kwtype": 276, "upto": 280, "28": [280, 372, 385, 387], "posit": [280, 344, 364, 367], "subract": 285, "revers": 285, "0507": 287, "67326": 287, "modifi": [289, 304, 364, 381], "short": [289, 385, 388], "slice_start": 302, "slice_end": 302, "slice_step": 302, "input_tensor_shap": [302, 366], "0310059": 303, "By": [304, 370, 382], "steep": 304, "higher": [304, 369, 371, 372], "steeper": 304, "approach": [304, 362, 370, 388], "hard": [304, 381], "larg": [304, 362, 372, 384], "improv": [304, 363], "stabil": [304, 367, 370], "sub_device_id": 324, "subdeviceid": 324, "synchron": [324, 388], "wait": [324, 367, 371], "associ": 324, "ran": [324, 371, 383], "chip": 324, "set_sub_device_stall_group": 324, "queu": 324, "use_multicor": [333, 334, 351, 353], "multi_devic": [335, 366], "organ": [336, 363, 372], "becom": 336, "thread": [336, 366, 385, 388], "42188": 336, "398438": 336, "torch_rank": [338, 388], "mesh_compos": 338, "meshtotensor": 338, "Will": 338, "squeez": [338, 381, 382, 383, 384, 386], "reach": 338, "torch_tensor": [338, 381], "3008": 338, "8438": 338, "3242": 338, "9023": 338, "5820": 338, "5312": 338, "largest": [339, 367, 372], "sort": 339, "smallest": [339, 367], "sure": [339, 373, 388], "bfloat8": 339, "head_siz": [340, 341, 342, 345, 383], "attention_mask": [340, 341, 383], "softmaxprogramconfig": [340, 341], "softmaxdefaultprogramconfig": [340, 341], "causal_mask": [340, 341], "mask": [340, 341, 344], "causal": [340, 341, 343], "num_head": [342, 345, 383], "sequence_s": [342, 345, 362, 383, 384, 385], "input_tensor_q": [343, 344], "input_tensor_k": [343, 344], "input_tensor_v": [343, 344], "attn_mask": [343, 344], "is_casu": 343, "sdpaprogramconfig": [343, 344], "dot": [343, 344], "mimick": 343, "flashattent": 343, "accept": [343, 344, 363, 370], "q": [343, 344], "parallel": [343, 344, 367, 371, 385], "nqh": 343, "dh": [343, 344], "nkv": [343, 344], "impli": 343, "is_caus": 344, "cur_po": 344, "cur_pos_tensor": 344, "decod": [344, 387], "flash": [344, 369], "mqa": 344, "sdpamulticoreprogramconfig": 344, "nh": 344, "pnh": 344, "skip": [344, 381, 382, 383, 384, 385, 386, 387], "kv_input_tensor": 345, "num_kv_head": 345, "transpose_kei": 345, "hidden_s": [345, 362, 383, 384], "Then": [345, 362], "score": [345, 385], "q1": 345, "k1": 345, "v1": [345, 369], "qn": 345, "kn": 345, "vn": 345, "cat": [345, 383, 387], "contigu": [345, 367, 381], "num": 345, "diagon": [346, 347], "ops_chain": 350, "unarywithparam": 350, "chain": 350, "unaryoptyp": [350, 367], "use_pack_until": [351, 353], "sub_core_grid": 351, "corerangeset": 351, "padding_config": 352, "local_config": 352, "remote_config": 352, "pad_val": 352, "ncores_nhw": 352, "max_out_nsticks_per_cor": 352, "remote_read": 352, "transpose_mcast": 352, "construct": [352, 366, 388], "halo": 352, "local": [352, 362, 363, 372], "remot": 352, "nstick": 352, "mcast": 352, "output_tensor_end": [353, 366], "scale_factor": [354, 367], "array2d": 354, "algorithm": [354, 367], "nearest": [354, 367], "cdot": 358, "basi": 362, "re": [362, 367, 368, 382], "rewritten": 362, "bert": [362, 368, 384, 385], "modeling_bert": [362, 384], "bertintermedi": 362, "class": [362, 363, 366, 367, 371, 372, 385, 386, 387], "super": [362, 386], "dens": 362, "intermediate_s": 362, "forward": [362, 367, 386], "hidden_st": [362, 383, 384], "tdd": 362, "torch_bert": 362, "utility_funct": 362, "torch_random": 362, "utils_for_test": 362, "assert_with_pcc": 362, "mark": [362, 363], "parametr": 362, "phiyodr": [362, 384], "finetun": [362, 384], "squad2": [362, 384], "384": [362, 383, 384], "test_bert_intermedi": 362, "manual_se": [362, 381, 382, 383, 386, 387, 388], "bertconfig": [362, 384], "from_pretrain": [362, 384, 387], "eval": [362, 384, 385, 386, 387], "torch_hidden_st": [362, 383], "torch_output": [362, 383], "_": [362, 371, 383, 387], "bert_intermedi": 362, "9999": [362, 381, 382, 383, 384, 386, 388], "dictionari": 362, "turn": 362, "ttnn_bert": [362, 384], "999": 362, "bias": [362, 367, 383], "someth": 362, "ttnn_optimized_bert": [362, 384], "isinst": 362, "preprocess_linear_weight": [362, 383], "preprocess_linear_bia": [362, 383], "ff1_weight": 362, "ff1_bia": 362, "best": [362, 381], "integr": [362, 363, 364, 367], "incredibli": 363, "excit": 363, "exploratori": 363, "freedom": 363, "try": [363, 369, 381, 385], "showcas": 363, "few": [363, 372, 381], "question": 363, "answer": 363, "see": [363, 367, 370, 381, 385, 387], "highlight": [363, 372], "successfulli": [363, 373, 385, 387], "migrat": [363, 381, 382, 383, 384, 386, 388], "good": 363, "documen": 363, "credit": 363, "author": 363, "might": [363, 367, 382], "encount": 363, "demonstr": [363, 371], "adequ": 363, "achiev": [363, 370], "pearson": 363, "correl": [363, 367], "ci": 363, "pipelin": [363, 371], "unit": [363, 367], "metric": 363, "meet": 363, "accuraci": 363, "continu": [363, 370], "against": [363, 388], "upon": 363, "everi": [363, 366, 369, 371, 383, 388], "commit": [363, 385], "ongo": 363, "complianc": 363, "catch": 363, "regress": 363, "earli": 363, "collect": [363, 371, 373, 385], "usag": [363, 369], "varieti": [363, 367], "measur": 363, "special": [363, 367, 372], "run_device_perf_model": 363, "models_device_performance_bare_met": 363, "schedul": 363, "clear": [363, 370, 381, 382, 383, 384, 385, 386], "incorpor": 363, "autom": 363, "extern": [363, 370, 372], "servic": 363, "impact": 363, "run_perf_models_oth": 363, "run_perf_models_llm_javelin": 363, "run_perf_models_cnn_javelin": 363, "models_performance_bare_met": 363, "run_demos_single_card_n150_test": 363, "run_demos_single_card_n300_test": 363, "run_t3000_demo_test": 363, "test_ttnn_functional_resnet50": 363, "resnet50testinfra": 363, "setup": [363, 368, 369, 385, 387], "handl": [364, 381], "machin": [364, 366, 367, 371, 373, 387], "send": [364, 366, 367], "__name__": 364, "__main__": [364, 385], "pci": [364, 381, 382, 383, 384, 385, 386], "slot": 364, "tt_devic": [364, 366, 367], "py_tensor": [364, 366], "tt_tensor": [364, 366, 367], "tolist": [364, 366], "tt_relu_out": 364, "closedevic": 364, "power_fp": 364, "suppli": [364, 366, 367], "lastli": 364, "fallback_op": [364, 367], "py_tensor_exp": 364, "py_relu_out": 364, "py_pow_out": 364, "tt_pow_out": 364, "behav": [364, 367], "regular": 364, "hood": 364, "tt_silu_out": 364, "tt_exp_out": 364, "leav": 364, "anyth": 364, "manipul": 366, "sent": 366, "receiv": [366, 371], "platform": [366, 368, 385], "ttdnn": 366, "util": [366, 372, 381, 382, 387], "z": [366, 367, 371, 387], "nor": 366, "subsect": 366, "insid": [366, 369, 388], "63": [366, 385], "65": [366, 385, 387], "66": 366, "127": [366, 385], "3968": 366, "3969": 366, "3970": 366, "4031": 366, "4032": 366, "4033": 366, "4034": 366, "4095": 366, "4097": 366, "4098": 366, "4159": 366, "4160": 366, "4161": 366, "6462": 366, "4223": 366, "8064": 366, "8065": 366, "8066": 366, "8127": 366, "8128": 366, "8129": 366, "8130": 366, "8191": 366, "95": 366, "1984": 366, "1985": 366, "2015": [366, 385], "33": [366, 382, 385], "96": [366, 385, 388], "97": [366, 385], "2016": 366, "2017": [366, 385, 387], "2047": 366, "2080": 366, "2081": 366, "2111": 366, "2144": 366, "2145": 366, "2175": 366, "4064": 366, "4065": 366, "fourth": [366, 367], "6111": 366, "6176": 366, "ownedstorag": [366, 367], "borrowedstorag": 366, "devicestorag": [366, 367], "pointer": 366, "That": [366, 372, 382], "underli": 366, "numpi": [366, 372, 385, 387], "reason": 366, "data_typ": [366, 383], "No": [366, 367], "bank": 366, "arg1": 366, "arg2": 366, "arg3": 366, "divisbl": [366, 367], "arg4": 366, "arg5": 366, "single_bank": 366, "memory_layout": [366, 367], "shard_spec": 366, "nullopt": [366, 386], "ptr": 366, "np": 366, "owned_buffer_for_uint8_t": 366, "owned_buffer_for_uint16_t": 366, "owned_buffer_for_int32_t": 366, "owned_buffer_for_uint32_t": 366, "owned_buffer_for_float32_t": 366, "owned_buffer_for_bfloat16_t": 366, "borrowed_buffer_for_uint8_t": 366, "borrowed_buffer_for_uint16_t": 366, "borrowed_buffer_for_int32_t": 366, "borrowed_buffer_for_uint32_t": 366, "borrowed_buffer_for_float32_t": 366, "borrowed_buffer_for_bfloat16_t": 366, "everywher": 366, "inp": 366, "tt_tensor_pad": 366, "npad": 366, "bottom": [366, 373], "storagetyp": 366, "cq": 366, "uint8_t": 366, "ti": 366, "output_tensor_start": 366, "tt_tensor_unpad": 366, "nunpad": 366, "apart": 366, "restrict": 366, "eight": 366, "shardspec": 366, "dram_channel": 366, "rememb": 366, "py_output": 366, "unifi": 367, "tt_eager": [367, 385], "better": 367, "caller": 367, "launch": [367, 373], "plug": 367, "declar": 367, "newoper": 367, "programwithcallback": 367, "create_program": 367, "some_memb": 367, "optional_input_tensor": 367, "validate_with_output_tensor": 367, "programwithoptionaloutputtensor": 367, "box": [367, 369], "preferred_nam": 367, "parallelization_strategi": 367, "get_parallelization_strategi": 367, "parallelizationstrategyenum": 367, "enqueu": 367, "finish": [367, 371, 385], "asynchron": 367, "reload": 367, "program_cach": 367, "disable_and_clear": 367, "entri": 367, "num_entri": 367, "cachabl": 367, "override_runtime_args_callback": 367, "input_buff": 367, "output_buff": 367, "src_dram_buff": 367, "dst_dram_buff": 367, "tt_metal_logger_typ": [367, 388], "tt_metal_logger_level": [367, 388], "1280": 367, "layoutconversiononhost": 367, "miss": [367, 388], "eltwiseunari": 367, "op_typ": 367, "_tt": 367, "mul": [367, 383], "ellipsi": 367, "output_on_devic": 367, "third": 367, "fewer": 367, "four": 367, "side": [367, 371, 381, 382, 383, 384, 385, 386], "connect": 367, "paper": 367, "separ": 367, "normalized_shap": 367, "layer": [367, 371, 386], "much": [367, 371, 382], "m": [367, 369, 382], "reflect": [367, 370], "replic": 367, "circular": 367, "align_corn": 367, "recompute_scale_factor": 367, "antialia": 367, "down": 367, "bilinear": 367, "bicub": 367, "trilinear": 367, "area": 367, "exact": [367, 372, 383], "center": 367, "corner": 367, "pixel": 367, "anti": 367, "alias": 367, "output_s": 367, "total": [367, 371], "known": 367, "sigma": 367, "logist": 367, "x_": 367, "x_i": 367, "sum_j": 367, "x_j": 367, "lie": 367, "in_channel": [367, 386], "out_channel": [367, 386], "padding_mod": 367, "simplest": 367, "c_": 367, "h_": 367, "w_": 367, "precis": [367, 372], "n_i": 367, "_j": 367, "star": 367, "cross": 367, "learnabl": 367, "num_batches_track": 367, "num_featur": 367, "momentum": 367, "affin": 367, "track_running_stat": 367, "4d": 367, "deep": 367, "network": 367, "intern": [367, 368], "covari": 367, "track": 367, "varianc": [367, 372], "num_channel": 367, "lernabl": 367, "elementwise_affin": 367, "return_indic": 367, "channels_last": [367, 371], "reshape_2d": 367, "kh": 367, "kw": 367, "c_j": 367, "max_": 367, "ldot": 367, "implicit": 367, "infin": [367, 372], "mod": 367, "dividend": 367, "bitwis": 367, "NOT": [367, 381, 382, 383, 384, 386], "immedi": [367, 369], "arithmet": 367, "operand": 367, "promot": 367, "behavior": [367, 372], "undefin": 367, "retain": 367, "argmin": 367, "fusion": 367, "togeth": 367, "fused_op": 367, "in_featur": 367, "out_featur": 367, "num_dim": 367, "moment": 367, "add_and_norm": 367, "flexibl": 367, "earlier": 367, "while": [367, 370], "ml": 368, "workload": 368, "falcon": 368, "7b": 368, "navig": 368, "mistral": 368, "llama2": 368, "70b": 368, "soon": 368, "t3000": [368, 369], "learn": [368, 372, 382, 385], "dive": 368, "deeper": 368, "jupyt": [368, 373, 385], "notebook": [368, 373, 385, 387], "tool": [369, 371, 385], "packag": [369, 384, 385, 387], "asset": 369, "tag": 369, "purchas": 369, "card": 369, "o": [369, 371, 381, 382, 383, 384, 385, 387], "kmd": 369, "smi": 369, "ubuntu": [369, 381, 382, 383, 384, 385, 386, 387], "04": [369, 387], "fw_pack": 369, "v80": 369, "v2": 369, "sudo": [369, 371], "install_depend": 369, "choos": 369, "matter": 369, "still": [369, 372], "repo": 369, "recurs": 369, "highli": 369, "cmake": 369, "flow": [369, 371], "arch_nam": [369, 383, 384], "tt_metal_hom": [369, 371, 385], "build_met": [369, 371, 385], "blackhol": 369, "pip": [369, 385, 387], "highest": 369, "edit": [369, 385], "latest": [369, 371], "architectur": [369, 374, 377, 378, 388], "ie": 369, "choic": [369, 381], "wheel_fil": 369, "whl": [369, 385, 387], "governor": 369, "dev": [369, 385], "txt": [369, 385], "apt": 369, "cpufrequtil": 369, "cpupow": 369, "frequenc": 369, "registri": 369, "pull": [369, 370], "ghcr": 369, "io": [369, 371], "amd64": 369, "rc": 369, "rm": 369, "hugepag": [369, 381, 382, 383, 384, 385, 386], "1g": 369, "bash": [369, 385], "python3": [369, 384, 385, 387], "verifi": [369, 370], "run_op_on_devic": 369, "visit": 369, "pandoc": [369, 385], "libtbb": 369, "libcapston": 369, "pkg": 369, "doxygen": 369, "intend": 370, "reliabl": 370, "simultan": 370, "fine": 370, "tune": 370, "themselv": [370, 372], "goal": 370, "ask": 370, "driven": 370, "popular": 370, "kent": 370, "beck": 370, "long": 370, "term": 370, "benefit": 370, "submit": 370, "label": [370, 372], "fulli": [370, 371], "branch": 370, "brief": 370, "4730": 370, "rst": 370, "referenc": [370, 385], "sweep": 370, "codeown": 370, "pr": 370, "comment": 370, "cd": [371, 385], "test_perf_resnet": 371, "test_perf_bare_met": 371, "0185": 371, "consol": 371, "similar": [371, 381, 383], "shorter": 371, "cli": 371, "explain": 371, "reset": 371, "tt_smi": 371, "tensix_reset": 371, "tensix": 371, "skew": 371, "timer": 371, "reboot": 371, "wh": 371, "analyz": 371, "1000": [371, 386, 387], "fixtur": 371, "ttl": 371, "dumpdeviceprofil": 371, "drop": 371, "around": 371, "120": [371, 385], "eighth": 371, "warn": [371, 381, 382, 383, 384, 385, 386], "mention": 371, "risc": 371, "faster": [371, 383], "those": 371, "analysi": 371, "affect": 371, "column": [371, 372, 385], "python_fallback": [371, 385], "tt_dnn_cpu": 371, "tt_dnn_devic": [371, 385], "global": [371, 385], "fidel": [371, 385], "field": 371, "lofi": [371, 386], "hifi2": 371, "hifi3": 371, "clock": 371, "stamp": 371, "durat": [371, 383, 385, 388], "nanosecond": 371, "end_t": 371, "start_t": 371, "fw": [371, 381, 382, 383, 384, 386], "cycl": 371, "earliest": 371, "core_frequ": 371, "marker": 371, "brisc": 371, "ncrisc": 371, "trisc0": 371, "trisc1": 371, "trisc2": 371, "cb": 371, "spent": 371, "cb_wait_front": 371, "reserv": 371, "cb_reserve_back": 371, "datamov": 371, "input_0_memori": 371, "dev_0_dram": 371, "dec_0_l1": 371, "tgz": 371, "filenam": [371, 387], "item": [371, 385], "aggreg": 371, "timestamp": 371, "32x32": 372, "bracket": 372, "obtain": [372, 385], "4x4": 372, "transit": 372, "2x2": 372, "illustr": 372, "byte": 372, "sizeof": 372, "introduc": 372, "observ": 372, "magnitud": [372, 383], "smaller": 372, "flush": 372, "instabl": 372, "extrem": 372, "domin": 372, "caus": 372, "lose": 372, "7014118346046923e": 372, "dataset": [372, 385], "frequent": 372, "occurr": 372, "uniform": 372, "deal": 372, "critic": 372, "homogen": 372, "unsuit": 372, "inher": 372, "owned_host_storag": 372, "borrowed_host_storag": 372, "device_storag": 372, "ideal": 372, "abstract": 372, "awai": 372, "compress": 372, "upper": 372, "remain": 372, "128x128": 372, "who": 372, "subset": 372, "know": 372, "understand": 372, "unshard": 372, "coordin": 372, "physic": 372, "pybind11_object": 372, "properti": 372, "certain": 373, "ramp": 373, "skillset": 373, "tree": 373, "lab": 373, "port": 373, "8888": 373, "hint": 373, "Be": 373, "alwai": [373, 381, 384, 385], "cell": 373, "central": 381, "sens": 381, "sram": 381, "concept": 381, "2024": [381, 382, 383, 384, 385, 386, 387, 388], "07": [381, 382, 383, 384, 386], "18": [381, 382, 383, 384, 385, 387], "48": [381, 384, 385], "818": 381, "136": [381, 382, 383, 384], "cache_path": [381, 382, 383, 384, 386], "posixpath": [381, 382, 383, 384], "home": [381, 382, 383, 384, 385, 386, 387], "comparison_mode_pcc": [381, 382, 383, 384, 386, 388], "enable_comparison_mod": [381, 382, 383, 384, 386, 388], "enable_detailed_buffer_report": [381, 382, 383, 384, 386, 388], "enable_detailed_tensor_report": [381, 382, 383, 384, 386, 388], "enable_fast_runtime_mod": [381, 382, 383, 384, 386, 388], "enable_graph_report": [381, 382, 383, 384, 386, 388], "enable_log": [381, 382, 383, 384, 386, 388], "enable_model_cach": [381, 382, 383, 384, 386], "model_cache_path": [381, 382, 383, 384, 386], "report_nam": [381, 382, 383, 384, 386, 388], "root_report_path": [381, 382, 383, 384, 386], "throw_exception_on_fallback": [381, 382, 383, 384, 386], "tmp_dir": [381, 382, 383, 384, 386, 387], "905": 381, "operation_decor": [381, 382, 383, 384, 386], "758": [381, 382, 383, 384], "906": 381, "907": [381, 383], "908": [381, 383], "909": [381, 383], "910": [381, 383], "911": [381, 383], "914": [381, 383], "915": [381, 383], "pearson_correlation_coeffici": [381, 382, 383, 384, 386], "919": [381, 383], "920": 381, "921": [381, 383], "unsqueeze_to_4d": [381, 382, 383, 384, 386], "922": [381, 383], "923": [381, 383], "924": [381, 383], "925": [381, 383], "926": [381, 383], "allocate_tensor_on_devic": [381, 382, 383, 384, 386], "copy_host_to_device_tensor": [381, 382, 383, 384, 386], "927": [381, 383], "928": [381, 383], "929": [381, 383], "930": [381, 383], "931": [381, 383], "934": [381, 383], "935": 381, "936": [381, 383, 384], "937": 381, "938": [381, 383], "941": [381, 383], "942": [381, 383], "943": [381, 383], "948": [381, 383], "949": [381, 383, 384], "950": [381, 383], "951": [381, 383, 384], "952": [381, 383], "953": [381, 383], "954": [381, 383], "955": [381, 383], "958": [381, 383], "959": 381, "960": [381, 383, 384], "f": [381, 382, 383, 385, 387, 388], "As": [381, 382], "1234": 381, "again": 381, "action": 381, "98300": 381, "11301": 381, "37592": 381, "64318": 381, "53437": 381, "59434": 381, "69190": 381, "04268": 381, "33346": 381, "20231": 381, "15127": 381, "58303": 381, "pick": 381, "80078": 381, "69531": 381, "71484": 381, "33398": 381, "60156": 381, "36523": 381, "73047": 381, "90625": 381, "59766": 381, "83203": 381, "61719": 381, "53516": 381, "effici": [381, 382], "transfer": 381, "nshape": 381, "nlayout": 381, "21680": 381, "24316": 381, "19336": 381, "40625": 381, "81641": 381, "50781": 381, "09961": 381, "54688": 381, "70703": 381, "93359": 381, "06787": 381, "75781": 381, "insert": 381, "cale": 381, "info": [381, 382, 383, 384, 385, 386, 387], "49": [381, 385, 387], "027": [381, 382], "silicondriv": [381, 382, 383, 384, 385, 386], "detect": [381, 382, 383, 384, 385, 386], "040": 381, "init_detect_tt_device_numanod": [381, 382, 383, 384, 385, 386], "numanodeset": [381, 382, 383, 384, 385, 386], "pci_bus_id": [381, 382, 383, 384, 385, 386], "0000": [381, 382, 383, 384, 385, 386], "00": [381, 382, 383, 384, 385, 386, 387], "041": 381, "bind_area_memory_nodeset": [381, 382, 383, 384, 385, 386], "unabl": [381, 382, 383, 384, 385, 386], "numanod": [381, 382, 383, 384, 385, 386], "membind": [381, 382, 383, 384, 385, 386], "ttsilicondevic": [381, 382, 383, 384, 385, 386], "init_hugepag": [381, 382, 383, 384, 385, 386], "bind_area_to_memory_nodeset": [381, 382, 383, 384, 385, 386], "fail": [381, 382, 383, 384, 385, 386], "ch": [381, 382, 383, 384, 385, 386], "effect": [381, 382, 383, 384, 385, 386], "decreas": [381, 382, 383, 384, 385, 386], "893": [381, 382, 383, 384, 385, 386], "082": 381, "ethernet": [381, 382, 383, 384, 386], "ai": [381, 382, 383, 384, 385, 386], "clk": [381, 382, 383, 384, 385, 386], "800": [381, 382, 383, 384], "mhz": [381, 382, 383, 384, 385, 386], "torch_input_tensor_a": [381, 388], "torch_input_tensor_b": [381, 388], "stai": 381, "unless": [381, 388], "explicit": 381, "figur": 381, "hang": 381, "properli": 381, "41": [382, 385], "903": 382, "989": [382, 383], "990": [382, 383], "991": 382, "992": 382, "993": 382, "994": 382, "995": 382, "996": 382, "001": 382, "002": 382, "003": 382, "004": 382, "005": 382, "006": 382, "007": 382, "008": 382, "009": 382, "010": 382, "011": 382, "012": 382, "013": 382, "015": 382, "016": 382, "017": 382, "018": 382, "020": 382, "021": 382, "022": 382, "028": 382, "029": 382, "030": 382, "031": 382, "032": 382, "033": 382, "035": 382, "036": 382, "037": 382, "053": 382, "066": 382, "067": 382, "094": 382, "repeatedli": 382, "enable_program_cach": [382, 383, 388], "torch_a": 382, "torch_b": 382, "longer": 382, "signific": 382, "aslo": 382, "why": 382, "conver": 382, "todo": 382, "75000": 382, "25000": 382, "50000": 382, "62500": 382, "effeci": 382, "further": 382, "enjoi": 382, "massiv": 382, "eth": [383, 384], "54": [383, 385], "821": 383, "912": 383, "939": 383, "976": 383, "55": [383, 385], "014": 383, "fashion": 383, "multi_head_attent": 383, "query_weight": 383, "query_bia": 383, "key_weight": 383, "key_bia": 383, "value_weight": 383, "value_bia": 383, "output_weight": 383, "output_bia": 383, "fallback_reshap": 383, "get_fallback_funct": [383, 388], "attention_scor": 383, "attention_prob": 383, "context_lay": 383, "self_output": 383, "torch_attention_mask": [383, 384], "torch_query_weight": 383, "torch_query_bia": 383, "torch_key_weight": 383, "torch_key_bia": 383, "torch_value_weight": 383, "torch_value_bia": 383, "torch_output_weight": 383, "torch_output_bia": 383, "00607705116272": 383, "250946044921875": 383, "ahead": 383, "optimized_multi_head_attent": 383, "fused_qkv_weight": 383, "fused_qkv_bia": 383, "self_output_weight": 383, "self_output_bia": 383, "fused_qkv_output": 383, "context_layer_after_concatenate_head": 383, "qkv": 383, "torch_qkv_weight": 383, "torch_qkv_bia": 383, "qkv_weight": 383, "qkv_bia": 383, "optimized_output": 383, "474989175796509": 383, "17": [383, 384, 385, 386, 387], "020017147064208984": 383, "torch_optimized_output": 383, "assert": [383, 388], "allclos": 383, "19": [383, 385, 387], "ttnn_config_overrid": [384, 386, 388], "47": [384, 385], "183": 384, "133": [384, 385], "overrid": [384, 385, 388], "184": 384, "354": 384, "355": 384, "356": 384, "357": 384, "358": 384, "359": 384, "360": [384, 387], "362": 384, "366": 384, "367": 384, "368": 384, "369": 384, "370": 384, "371": 384, "372": 384, "373": [384, 385], "374": 384, "378": 384, "379": 384, "380": [384, 385], "381": 384, "383": 384, "385": 384, "390": 384, "391": 384, "392": 384, "393": 384, "394": 384, "395": 384, "396": 384, "397": 384, "398": 384, "399": 384, "set_verbosity_error": 384, "100": [384, 385], "412": 384, "442": 384, "447": 384, "googl": [384, 387], "bert_uncased_l": 384, "4_h": 384, "256_a": 384, "bertselfoutput": 384, "site": [384, 385, 387], "huggingface_hub": [384, 385], "file_download": 384, "1132": 384, "futurewarn": 384, "resume_download": 384, "resum": 384, "force_download": 384, "874": 384, "num_hidden_lay": 384, "bertforquestionansw": 384, "input_id": 384, "vocab_s": 384, "torch_token_type_id": 384, "torch_position_id": 384, "ttnn_bert_input": 384, "preprocess_input": 384, "bert_for_question_answ": 384, "50": 384, "339": 384, "manage_config": [384, 386, 388], "144": 384, "340": 384, "341": 384, "555": 384, "_paramet": [384, 386], "env": [384, 385, 386, 387], "34": [384, 385, 386], "343": 384, "634": 384, "636": 384, "147": [384, 385], "restor": [384, 386], "02": [384, 385], "947": 384, "unset": 385, "silent": 385, "nuke": 385, "jobserv": 385, "unavail": 385, "j1": 385, "parent": 385, "rule": 385, "artifact": 385, "conf": 385, "backend": 385, "pypi": [385, 387], "org": [385, 387], "satisfi": [385, 387], "setuptool": 385, "44": 385, "py3": 385, "kb": 385, "statu": 385, "metadata": [385, 387], "click": 385, "loguru": 385, "58": 385, "ipywidget": 385, "139": 385, "90": [385, 386], "db": 385, "290ab3a34f2ef0b5a0f89235dc2d40fea83e77de84ed2dc05c": 385, "pyyaml": [385, 387], "cp38": 385, "linux_x86_64": 385, "jupyterlab": 385, "mb": 385, "pyelftool": 385, "py2": 385, "174": 385, "4f": 385, "ed": 385, "863cf4386fe6db3c09333712009ec1c5146a36f3904b469d13": 385, "curtsi": 385, "91": 385, "b7": 385, "0c117d73912c6c2beb1eb0d7d6884f4e79e6e5b5e91eeb34f5": 385, "torchtrail": 385, "manylinux_2_12_x86_64": 385, "manylinux2010_x86_64": 385, "matplotlib": 385, "toolz": 385, "pillow": [385, 387], "manylinux_2_17_x86_64": 385, "manylinux2014_x86_64": 385, "panda": 385, "2bcpu": 385, "199": 385, "dash": 385, "rich": 385, "238": 385, "seaborn": 385, "293": 385, "plotli": 385, "traitlet": 385, "85": 385, "widgetsnbextens": 385, "ipython": [385, 386, 387], "798": 385, "widget": 385, "jupyterlab_widget": 385, "215": 385, "comm": 385, "async": 385, "lru": 385, "async_lru": 385, "tomli": 385, "python_vers": 385, "server": 385, "jupyter_serv": 385, "jinja2": [385, 387], "ipykernel": 385, "116": 385, "shim": 385, "notebook_shim": 385, "jupyterlab_serv": 385, "lsp": 385, "jupyter_lsp": 385, "68": 385, "23": 385, "53": 385, "importlib": [385, 387], "importlib_resourc": 385, "importlib_metadata": 385, "jupyter_cor": 385, "tornado": 385, "abi3": 385, "manylinux_2_5_x86_64": 385, "manylinux1_x86_64": 385, "435": 385, "bless": 385, "cwcwidth": 385, "92": 385, "pyrsist": 385, "121": 385, "graphviz": 385, "pypars": 385, "103": 385, "kiwisolv": 385, "contourpi": 385, "301": 385, "fonttool": 385, "dateutil": 385, "python_dateutil": 385, "247": [385, 386], "cycler": 385, "pytz": 385, "2020": 385, "505": 385, "extens": [385, 387], "typing_extens": 385, "html": 385, "compon": 385, "dash_html_compon": 385, "dash_tabl": 385, "flask": 385, "101": 385, "dash_core_compon": 385, "pygment": 385, "markdown": 385, "markdown_it_pi": 385, "84": 385, "tenac": 385, "24": [385, 387], "pickleshar": 385, "prompt": 385, "toolkit": 385, "37": 385, "prompt_toolkit": 385, "43": 385, "386": 385, "stack": 385, "stack_data": 385, "backcal": 385, "jedi": 385, "pexpect": 385, "sys_platform": 385, "win32": 385, "inlin": 385, "matplotlib_inlin": 385, "send2trash": 385, "anyio": 385, "termin": 385, "jupyter_server_termin": 385, "client": 385, "jupyter_cli": 385, "105": 385, "nbformat": 385, "77": 385, "nbconvert": 385, "257": [385, 386], "event": 385, "jupyter_ev": 385, "websocket": 385, "websocket_cli": 385, "pyzmq": 385, "prometheu": 385, "prometheus_cli": 385, "argon2": 385, "cffi": 385, "argon2_cffi": 385, "terminado": 385, "markupsaf": [385, 387], "26": 385, "nest": 385, "asyncio": 385, "nest_asyncio": 385, "psutil": 385, "cp36": 385, "288": 385, "debugpi": 385, "babel": 385, "62": 385, "jsonschema": 385, "json5": 385, "zipp": [385, 387], "platformdir": 385, "six": 385, "wcwidth": 385, "itsdanger": 385, "blinker": 385, "werkzeug": 385, "226": 385, "mdurl": 385, "pure": 385, "pure_ev": 385, "asttoken": 385, "27": [385, 387], "parso": 385, "ptyprocess": 385, "exceptiongroup": 385, "idna": [385, 387], "61": 385, "sniffio": 385, "fastjsonschema": 385, "defusedxml": 385, "beautifulsoup4": 385, "jupyterlab_pyg": 385, "pandocfilt": 385, "mistun": 385, "tinycss2": 385, "bleach": 385, "162": 385, "nbclient": 385, "rfc3986": 385, "rfc3986_valid": 385, "json": [385, 388], "logger": 385, "python_json_logg": 385, "rfc3339": 385, "rfc3339_valid": 385, "argon2_cffi_bind": 385, "86": 385, "urllib3": [385, 387], "charset": [385, 387], "charset_norm": 385, "141": 385, "certifi": [385, 387], "163": 385, "03": [385, 386], "jsonschema_specif": 385, "pkgutil": 385, "resolv": 385, "pkgutil_resolve_nam": 385, "attr": 385, "rpd": 385, "rpds_py": 385, "soupsiev": 385, "36": 385, "webencod": 385, "444": 385, "pycpars": 385, "118": 385, "pre_commit": 385, "202": 385, "black": 385, "twine": 385, "yamllint": 385, "docutil": 385, "570": 385, "sphinx": 385, "rtd": 385, "theme": 385, "sphinx_rtd_them": 385, "sphinxcontrib": 385, "email": 385, "sphinxcontrib_email": 385, "lxml": 385, "manylinux_2_24_x86_64": 385, "breath": 385, "35": 385, "nbsphinx": 385, "jqueri": 385, "sphinxcontrib_jqueri": 385, "3a": 385, "a8": 385, "3237a93e3a6261bd24edabf3277ca59f64c1710b3d8c7c72a0": 385, "317": 385, "timeout": 385, "pytest_timeout": 385, "6c": 385, "5706d21e6b4dff52e7af12bff9ca126a3f15beb4dff386aa29": 385, "jsbeautifi": 385, "462": 385, "xlsxwriter": 385, "152": 385, "tiktoken": 385, "tqdm": [385, 387], "sentencepiec": 385, "numba": 385, "56": [385, 386], "librosa": 385, "252": [385, 386], "timm": [385, 387], "549": 385, "opencv": 385, "headless": 385, "74": 385, "opencv_python_headless": 385, "cp37": 385, "diffus": [385, 387], "604": 385, "219": 385, "ftfy": 385, "gitpython": 385, "188": 385, "einop": 385, "multiprocess": 385, "70": 385, "py38": 385, "132": 385, "81": 385, "bert_scor": 385, "fsspec": [385, 387], "173": 385, "nodeenv": 385, "cfgv": 385, "98": 385, "virtualenv": 385, "pathspec": 385, "mypi": 385, "mypy_extens": 385, "pyproject_hook": 385, "render": 385, "readme_render": 385, "pkginfo": 385, "toolbelt": 385, "requests_toolbelt": 385, "keyr": 385, "images": 385, "serializinghtml": 385, "sphinxcontrib_serializinghtml": 385, "94": 385, "jsmath": 385, "sphinxcontrib_jsmath": 385, "snowballstemm": 385, "93": [385, 386], "htmlhelp": 385, "sphinxcontrib_htmlhelp": 385, "99": 385, "alabast": 385, "applehelp": 385, "sphinxcontrib_applehelp": 385, "devhelp": 385, "sphinxcontrib_devhelp": 385, "qthelp": 385, "sphinxcontrib_qthelp": 385, "ply": 385, "plumbum": 385, "iniconfig": 385, "pluggi": 385, "0rc8": 385, "editorconfig": 385, "respons": 385, "pyarrow": 385, "xxhash": 385, "194": 385, "huggingfac": [385, 387], "hub": [385, 387], "330": 385, "aiohttp": 385, "dill": 385, "110": 385, "regex": [385, 387], "2019": [385, 387], "777": 385, "filelock": [385, 387], "llvmlite": 385, "0dev0": 385, "soxr": 385, "soundfil": 385, "pooch": 385, "lazi": 385, "loader": 385, "lazy_load": 385, "scipi": 385, "joblib": 385, "302": 385, "audioread": 385, "scikit": 385, "scikit_learn": 385, "msgpack": 385, "534": 385, "gitdb": 385, "distlib": 385, "468": 385, "nh3": 385, "secretstorag": 385, "linux": 385, "jeepnei": 385, "jaraco": 385, "frozenlist": 385, "240": [385, 386], "async_timeout": 385, "aiosign": 385, "yarl": 385, "308": 385, "multidict": 385, "129": 385, "threadpoolctl": 385, "smmap": 385, "cryptographi": 385, "itertool": 385, "more_itertool": 385, "57": 385, "pyproject": 385, "uninstal": 385, "msg": 385, "t5": 385, "integration_test": 385, "test_perform": 385, "test_t5_for_conditional_gener": 385, "functional_t5": 385, "ttnn_functional_t5": 385, "09": [385, 386], "ops_devic": 385, "session": 385, "cachedir": 385, "pytest_cach": 385, "rootdir": 385, "configfil": 385, "ini": 385, "plugin": 385, "600": 385, "func_onli": 385, "670": 385, "681": 385, "08": 385, "684": [385, 386], "1202": 385, "llruntim": 385, "watcher": 385, "watch": 385, "109": 385, "465": 385, "ttnn_t5": 385, "6ba823894": 385, "149": 385, "484": 385, "487": 385, "216": 385, "489": 385, "721": 385, "359902381896973": 385, "07123565673828": 385, "722": 385, "102": 385, "44269247283137575": 385, "detach": 385, "summari": 385, "627": 385, "638": 385, "639": 385, "458": 385, "224": 385, "460": 385, "292": 385, "164": 385, "22393798828125": 385, "165": 385, "322504758834839": 385, "407821983919596": 385, "pd": 385, "glob": 385, "getenv": 385, "get_latest_report": 385, "base_path": 385, "latest_dir": 385, "listdir": 385, "isdir": 385, "getmtim": 385, "valueerror": [385, 386], "latest_profile_report": 385, "df": 385, "read_csv": 385, "2024_02_09_01_38_37": 385, "ops_perf_results_resnet_2024_02_09_01_38_37": 385, "output_0_w": 385, "output_0_z": 385, "output_0_i": 385, "output_0_x": 385, "output_0_layout": 385, "output_0_data": 385, "output_0_memori": 385, "depth": 385, "compileprogram": 385, "load_tensor_ttnn": 385, "137428381893955": 385, "137428382188762": 385, "294807": 385, "137428382500949": 385, "137428399402163": 385, "16901214": 385, "137428399802068": 385, "137428399873758": 385, "71690": 385, "137428400102635": 385, "137428400351033": 385, "248398": 385, "137428400548071": 385, "137428400792528": 385, "244457": 385, "4391": 385, "reshape_ttnn": 385, "4392": 385, "137450414555424": 385, "137450414599894": 385, "44470": 385, "4393": 385, "137450414740752": 385, "137450414782422": 385, "41670": 385, "4394": 385, "bcast_batch": 385, "tt_me": 385, "108": 385, "matmulparallelizationstrategi": 385, "multi_cor": 385, "137450414881851": 385, "137450414983440": 385, "101589": 385, "32128": 385, "dev_0_dram_interleav": 385, "4395": 385, "137450415113099": 385, "137450415158748": 385, "45649": 385, "from_device_ttnn": 385, "4396": 385, "137450415235897": 385, "137450453493048": 385, "38257151": 385, "fold_batch_norm2d_into_conv2d": 386, "168": 386, "82": 386, "768": 386, "242": 386, "conv1d": 386, "246": 386, "248": 386, "249": 386, "250": [386, 387], "251": 386, "253": 386, "254": 386, "255": 386, "258": 386, "262": 386, "avg_pool2d": 386, "266": 386, "268": 386, "269": 386, "device_param": 386, "24576": 386, "310": 386, "324": 386, "325": 386, "363": 386, "conv3x3": 386, "in_plan": 386, "out_plan": 386, "3x3": 386, "torchbasicblock": 386, "expans": 386, "inplan": 386, "base_width": 386, "norm_lay": 386, "basicblock": 386, "notimplementederror": 386, "conv1": 386, "bn1": 386, "conv2": 386, "bn2": 386, "torch_model": 386, "state_dict": [386, 387], "create_custom_preprocessor": 386, "conv_weight_1": 386, "conv_bias_1": 386, "conv_weight_2": 386, "conv_bias_2": 386, "682": 386, "683": 386, "499": 386, "_initialize_model_and_preprocess_paramet": 386, "449": 386, "717": 386, "718": 386, "model_resnet_block_graph": 386, "conv_param": 386, "act_block_h": 386, "reshard": 386, "height_shard": 386, "shard_layout": 386, "__call__": 386, "conv_config": 386, "conv2dconfig": 386, "weights_dtyp": 386, "fp32_dest_acc_en": 386, "packer_l1_accum_en": 386, "input_channels_align": 386, "deallocate_activ": 386, "act_block_h_overrid": 386, "_out_height": 386, "_out_width": 386, "weight_tensor": 386, "bias_tensor": 386, "input_height": 386, "input_width": 386, "return_output_s": 386, "return_prepared_device_weight": 386, "ttnnbasicblock": 386, "get_memory_config": 386, "ttnn_model": 386, "12638": 386, "walk": 387, "mirror": 387, "colab": 387, "research": 387, "run_dit": 387, "ipynb": 387, "tab": 387, "ov": 387, "assumpt": 387, "chdir": 387, "content": 387, "upgrad": 387, "save_imag": 387, "create_diffus": 387, "autoencoderkl": 387, "find_model": 387, "collis": 387, "pil": 387, "set_grad_en": 387, "cuda": 387, "is_avail": 387, "gpu": 387, "322": 387, "fatal": 387, "destin": 387, "date": 387, "safetensor": 387, "sympi": 387, "mpmath": 387, "image_s": 387, "512": 387, "vae_model": 387, "stabilityai": 387, "sd": 387, "vae": 387, "ft": 387, "ema": 387, "mse": 387, "latent_s": 387, "input_s": 387, "pt": 387, "load_state_dict": 387, "num_sampling_step": 387, "slider": 387, "cfg_scale": 387, "class_label": 387, "207": 387, "387": 387, "974": 387, "88": 387, "979": 387, "417": 387, "279": 387, "raw": 387, "samples_per_row": 387, "nois": 387, "len": 387, "classifi": 387, "free": 387, "guidanc": 387, "y_null": 387, "model_kwarg": 387, "p_sample_loop": 387, "forward_with_cfg": 387, "clip_denois": 387, "null": 387, "18215": 387, "dit_model_graph": 387, "png": 387, "nrow": 387, "value_rang": 387, "06": 387, "987": 387, "210": 387, "show_svg": 387, "snippet": 388, "matmul_output_tensor": 388, "torch_matmul_output_tensor": 388, "unlik": 388, "start_tim": 388, "end_tim": 388, "stdout": 388, "6391518115997314": 388, "0007393360137939453": 388, "9998": 388, "too": 388, "exp_trac": 388, "substitut": 388, "disk": 388, "implementaiton": 388, "addition": 388, "ttnn_config_path": 388, "2048": 388, "app": 388, "pre_hook_to_print_args_and_kwarg": 388, "post_hook_to_print_output": 388, "query_registered_oper": 388, "begin_graph_captur": 388, "runmod": 388, "no_dispatch": 388, "captured_graph": 388, "end_graph_captur": 388, "pretty_print": 388}, "objects": {"tt_lib.fallback_ops": [[367, 0, 1, "", "AdaptiveAvgPool2d"], [367, 0, 1, "", "BatchNorm2d"], [367, 0, 1, "", "Conv2d"], [367, 0, 1, "", "GroupNorm"], [367, 0, 1, "", "LayerNorm"], [367, 0, 1, "", "MaxPool2d"], [367, 0, 1, "", "binary_bitwise_and"], [367, 0, 1, "", "binary_bitwise_left_shift"], [367, 0, 1, "", "binary_bitwise_or"], [367, 0, 1, "", "binary_bitwise_right_shift"], [367, 0, 1, "", "binary_bitwise_xor"], [367, 0, 1, "", "binary_fmod"], [367, 0, 1, "", "bitwise_not"], [367, 0, 1, "", "ceil"], [367, 1, 1, "", "chunk"], [367, 1, 1, "", "concat"], [367, 1, 1, "", "conv2d"], [367, 0, 1, "", "floor"], [367, 1, 1, "", "full"], [367, 1, 1, "", "group_norm"], [367, 1, 1, "", "interpolate"], [367, 1, 1, "", "layer_norm"], [367, 1, 1, "", "pad"], [367, 1, 1, "", "repeat"], [367, 1, 1, "", "repeat_interleave"], [367, 1, 1, "", "reshape"], [367, 1, 1, "", "silu"], [367, 1, 1, "", "softmax"], [367, 1, 1, "", "tensor_slice"], [367, 0, 1, "", "torch_argmax"], [367, 0, 1, "", "torch_argmin"], [367, 0, 1, "", "trunc"], [367, 0, 1, "", "unary_bitwise_and"], [367, 0, 1, "", "unary_bitwise_left_shift"], [367, 0, 1, "", "unary_bitwise_or"], [367, 0, 1, "", "unary_bitwise_right_shift"], [367, 0, 1, "", "unary_bitwise_xor"], [367, 0, 1, "", "unary_fmod"]], "tt_lib.fused_ops.add_and_norm": [[367, 1, 1, "", "AddAndNorm"]], "tt_lib.fused_ops.layernorm": [[367, 1, 1, "", "Layernorm"]], "tt_lib.fused_ops.linear": [[367, 1, 1, "", "Linear"]], "ttnn": [[367, 0, 1, "", "BcastOpDim"], [367, 0, 1, "", "BcastOpMath"], [8, 1, 1, "", "GetDefaultDevice"], [366, 0, 1, "", "MemoryConfig"], [9, 1, 1, "", "SetDefaultDevice"], [372, 0, 1, "", "Shape"], [366, 0, 1, "", "Tensor"], [10, 1, 1, "", "abs"], [11, 1, 1, "", "abs_bw"], [12, 1, 1, "", "acos"], [13, 1, 1, "", "acos_bw"], [14, 1, 1, "", "acosh"], [15, 1, 1, "", "acosh_bw"], [16, 1, 1, "", "add"], [17, 1, 1, "", "add_bw"], [18, 1, 1, "", "addalpha"], [19, 1, 1, "", "addalpha_bw"], [20, 1, 1, "", "addcdiv"], [21, 1, 1, "", "addcdiv_bw"], [22, 1, 1, "", "addcmul"], [23, 1, 1, "", "addcmul_bw"], [24, 1, 1, "", "all_gather"], [25, 1, 1, "", "angle"], [26, 1, 1, "", "angle_bw"], [27, 1, 1, "", "arange"], [28, 1, 1, "", "argmax"], [29, 1, 1, "", "as_tensor"], [30, 1, 1, "", "asin"], [31, 1, 1, "", "asin_bw"], [32, 1, 1, "", "asinh"], [33, 1, 1, "", "asinh_bw"], [34, 1, 1, "", "assign_bw"], [35, 1, 1, "", "atan"], [36, 1, 1, "", "atan2"], [37, 1, 1, "", "atan2_bw"], [38, 1, 1, "", "atan_bw"], [39, 1, 1, "", "atanh"], [40, 1, 1, "", "atanh_bw"], [41, 1, 1, "", "batch_norm"], [42, 1, 1, "", "bias_gelu_bw"], [43, 1, 1, "", "bitwise_and"], [44, 1, 1, "", "bitwise_left_shift"], [45, 1, 1, "", "bitwise_not"], [46, 1, 1, "", "bitwise_or"], [47, 1, 1, "", "bitwise_right_shift"], [48, 1, 1, "", "bitwise_xor"], [49, 1, 1, "", "cbrt"], [50, 1, 1, "", "ceil"], [51, 1, 1, "", "ceil_bw"], [52, 1, 1, "", "celu"], [53, 1, 1, "", "celu_bw"], [54, 1, 1, "", "clamp"], [55, 1, 1, "", "clamp_bw"], [56, 1, 1, "", "clip"], [57, 1, 1, "", "clip_bw"], [58, 1, 1, "", "clone"], [59, 1, 1, "", "close_device"], [60, 1, 1, "", "concat"], [61, 1, 1, "", "concat_bw"], [62, 1, 1, "", "conj"], [63, 1, 1, "", "conj_bw"], [64, 1, 1, "", "cos"], [65, 1, 1, "", "cos_bw"], [66, 1, 1, "", "cosh"], [67, 1, 1, "", "cosh_bw"], [68, 1, 1, "", "create_sharded_memory_config"], [69, 1, 1, "", "deallocate"], [70, 1, 1, "", "deg2rad"], [71, 1, 1, "", "deg2rad_bw"], [72, 1, 1, "", "digamma"], [73, 1, 1, "", "digamma_bw"], [74, 1, 1, "", "div"], [75, 1, 1, "", "div_bw"], [76, 1, 1, "", "div_no_nan"], [77, 1, 1, "", "div_no_nan_bw"], [78, 1, 1, "", "downsample"], [79, 1, 1, "", "dump_tensor"], [80, 1, 1, "", "elu"], [81, 1, 1, "", "elu_bw"], [82, 1, 1, "", "embedding"], [83, 1, 1, "", "embedding_bw"], [84, 1, 1, "", "empty"], [85, 1, 1, "", "empty_like"], [86, 1, 1, "", "eq"], [87, 1, 1, "", "eq_"], [88, 1, 1, "", "eqz"], [89, 1, 1, "", "erf"], [90, 1, 1, "", "erf_bw"], [91, 1, 1, "", "erfc"], [92, 1, 1, "", "erfc_bw"], [93, 1, 1, "", "erfinv"], [94, 1, 1, "", "erfinv_bw"], [95, 1, 1, "", "exp"], [96, 1, 1, "", "exp2"], [97, 1, 1, "", "exp2_bw"], [98, 1, 1, "", "exp_bw"], [102, 1, 1, "", "expm1"], [103, 1, 1, "", "expm1_bw"], [104, 1, 1, "", "fill"], [105, 1, 1, "", "fill_bw"], [106, 1, 1, "", "fill_ones_rm"], [107, 1, 1, "", "fill_rm"], [108, 1, 1, "", "fill_zero_bw"], [109, 1, 1, "", "floor"], [110, 1, 1, "", "floor_bw"], [111, 1, 1, "", "floor_div"], [112, 1, 1, "", "fmod"], [113, 1, 1, "", "fmod_bw"], [114, 1, 1, "", "format_input_tensor"], [115, 1, 1, "", "format_output_tensor"], [116, 1, 1, "", "frac"], [117, 1, 1, "", "frac_bw"], [118, 1, 1, "", "from_device"], [119, 1, 1, "", "from_torch"], [120, 1, 1, "", "full"], [121, 1, 1, "", "full_like"], [122, 1, 1, "", "gcd"], [123, 1, 1, "", "ge"], [124, 1, 1, "", "ge_"], [125, 1, 1, "", "geglu"], [126, 1, 1, "", "gelu"], [127, 1, 1, "", "gelu_bw"], [128, 1, 1, "", "gez"], [129, 1, 1, "", "global_avg_pool2d"], [130, 1, 1, "", "glu"], [131, 1, 1, "", "group_norm"], [132, 1, 1, "", "gt"], [133, 1, 1, "", "gt_"], [134, 1, 1, "", "gtz"], [135, 1, 1, "", "hardshrink"], [136, 1, 1, "", "hardshrink_bw"], [137, 1, 1, "", "hardsigmoid"], [138, 1, 1, "", "hardsigmoid_bw"], [139, 1, 1, "", "hardswish"], [140, 1, 1, "", "hardswish_bw"], [141, 1, 1, "", "hardtanh"], [142, 1, 1, "", "hardtanh_bw"], [143, 1, 1, "", "heaviside"], [144, 1, 1, "", "hypot"], [145, 1, 1, "", "hypot_bw"], [146, 1, 1, "", "i0"], [147, 1, 1, "", "i0_bw"], [148, 1, 1, "", "identity"], [149, 1, 1, "", "imag"], [150, 1, 1, "", "imag_bw"], [151, 1, 1, "", "indexed_fill"], [152, 1, 1, "", "is_imag"], [153, 1, 1, "", "is_real"], [154, 1, 1, "", "isclose"], [155, 1, 1, "", "isfinite"], [156, 1, 1, "", "isinf"], [157, 1, 1, "", "isnan"], [158, 1, 1, "", "isneginf"], [159, 1, 1, "", "isposinf"], [162, 1, 1, "", "l1_loss"], [163, 1, 1, "", "layer_norm"], [164, 1, 1, "", "lcm"], [165, 1, 1, "", "ldexp"], [166, 1, 1, "", "ldexp_bw"], [167, 1, 1, "", "le"], [168, 1, 1, "", "le_"], [169, 1, 1, "", "leaky_relu"], [170, 1, 1, "", "leaky_relu_bw"], [171, 1, 1, "", "lerp"], [172, 1, 1, "", "lerp_bw"], [173, 1, 1, "", "lez"], [174, 1, 1, "", "lgamma"], [175, 1, 1, "", "lgamma_bw"], [176, 1, 1, "", "linear"], [177, 1, 1, "", "load_tensor"], [178, 1, 1, "", "log"], [179, 1, 1, "", "log10"], [180, 1, 1, "", "log10_bw"], [181, 1, 1, "", "log1p"], [182, 1, 1, "", "log1p_bw"], [183, 1, 1, "", "log2"], [184, 1, 1, "", "log2_bw"], [185, 1, 1, "", "log_bw"], [186, 1, 1, "", "log_sigmoid"], [187, 1, 1, "", "log_sigmoid_bw"], [188, 1, 1, "", "logaddexp"], [189, 1, 1, "", "logaddexp2"], [190, 1, 1, "", "logaddexp2_bw"], [191, 1, 1, "", "logaddexp_bw"], [192, 1, 1, "", "logical_and"], [193, 1, 1, "", "logical_and_"], [194, 1, 1, "", "logical_not"], [195, 1, 1, "", "logical_not_"], [196, 1, 1, "", "logical_or"], [197, 1, 1, "", "logical_or_"], [198, 1, 1, "", "logical_xor"], [199, 1, 1, "", "logical_xor_"], [200, 1, 1, "", "logit"], [201, 1, 1, "", "logit_bw"], [202, 1, 1, "", "logiteps_bw"], [203, 1, 1, "", "lt"], [204, 1, 1, "", "lt_"], [205, 1, 1, "", "ltz"], [206, 1, 1, "", "mac"], [207, 1, 1, "", "manage_device"], [208, 1, 1, "", "matmul"], [209, 1, 1, "", "max"], [210, 1, 1, "", "max_bw"], [211, 1, 1, "", "max_pool2d"], [212, 1, 1, "", "maximum"], [213, 1, 1, "", "mean"], [214, 1, 1, "", "min"], [215, 1, 1, "", "min_bw"], [216, 1, 1, "", "minimum"], [217, 1, 1, "", "mish"], [220, 1, 1, "", "moreh_sum"], [221, 1, 1, "", "mse_loss"], [222, 1, 1, "", "mul_bw"], [223, 1, 1, "", "multigammaln"], [224, 1, 1, "", "multigammaln_bw"], [225, 1, 1, "", "multiply"], [226, 1, 1, "", "ne"], [227, 1, 1, "", "ne_"], [228, 1, 1, "", "neg"], [229, 1, 1, "", "neg_bw"], [230, 1, 1, "", "nextafter"], [231, 1, 1, "", "nez"], [232, 1, 1, "", "nonzero"], [233, 1, 1, "", "normalize_global"], [234, 1, 1, "", "normalize_hw"], [235, 1, 1, "", "ones"], [236, 1, 1, "", "ones_like"], [237, 1, 1, "", "open_device"], [238, 1, 1, "", "outer"], [239, 1, 1, "", "pad"], [240, 1, 1, "", "pad_to_tile_shape"], [241, 1, 1, "", "permute"], [242, 1, 1, "", "polar"], [243, 1, 1, "", "polar_bw"], [244, 1, 1, "", "polygamma"], [245, 1, 1, "", "polygamma_bw"], [246, 1, 1, "", "polyval"], [247, 1, 1, "", "pow"], [248, 1, 1, "", "pow_bw"], [249, 1, 1, "", "prelu"], [250, 1, 1, "", "prod"], [251, 1, 1, "", "prod_bw"], [252, 1, 1, "", "rad2deg"], [253, 1, 1, "", "rad2deg_bw"], [254, 1, 1, "", "rdiv"], [255, 1, 1, "", "rdiv_bw"], [256, 1, 1, "", "real"], [257, 1, 1, "", "real_bw"], [258, 1, 1, "", "reallocate"], [259, 1, 1, "", "reciprocal"], [260, 1, 1, "", "reciprocal_bw"], [261, 1, 1, "", "reduce_scatter"], [262, 1, 1, "", "register_post_operation_hook"], [263, 1, 1, "", "register_pre_operation_hook"], [264, 1, 1, "", "reglu"], [265, 1, 1, "", "relu"], [266, 1, 1, "", "relu6"], [267, 1, 1, "", "relu6_bw"], [268, 1, 1, "", "relu_bw"], [269, 1, 1, "", "relu_max"], [270, 1, 1, "", "relu_min"], [271, 1, 1, "", "remainder"], [272, 1, 1, "", "remainder_bw"], [273, 1, 1, "", "repeat"], [274, 1, 1, "", "repeat_bw"], [275, 1, 1, "", "repeat_interleave"], [276, 1, 1, "", "reshape"], [277, 1, 1, "", "rms_norm"], [278, 1, 1, "", "round"], [279, 1, 1, "", "round_bw"], [280, 1, 1, "", "rpow"], [281, 1, 1, "", "rpow_bw"], [282, 1, 1, "", "rsqrt"], [283, 1, 1, "", "rsqrt_bw"], [284, 1, 1, "", "rsub"], [285, 1, 1, "", "rsub_bw"], [286, 1, 1, "", "scatter"], [287, 1, 1, "", "selu"], [288, 1, 1, "", "selu_bw"], [289, 1, 1, "", "set_printoptions"], [290, 1, 1, "", "sigmoid"], [291, 1, 1, "", "sigmoid_accurate"], [292, 1, 1, "", "sigmoid_bw"], [293, 1, 1, "", "sign"], [294, 1, 1, "", "sign_bw"], [295, 1, 1, "", "signbit"], [296, 1, 1, "", "silu"], [297, 1, 1, "", "silu_bw"], [298, 1, 1, "", "sin"], [299, 1, 1, "", "sin_bw"], [300, 1, 1, "", "sinh"], [301, 1, 1, "", "sinh_bw"], [302, 1, 1, "", "slice"], [303, 1, 1, "", "softmax"], [304, 1, 1, "", "softplus"], [305, 1, 1, "", "softplus_bw"], [306, 1, 1, "", "softshrink"], [307, 1, 1, "", "softshrink_bw"], [308, 1, 1, "", "softsign"], [309, 1, 1, "", "softsign_bw"], [310, 1, 1, "", "sqrt"], [311, 1, 1, "", "sqrt_bw"], [312, 1, 1, "", "square"], [313, 1, 1, "", "square_bw"], [314, 1, 1, "", "squared_difference"], [315, 1, 1, "", "squared_difference_bw"], [316, 1, 1, "", "std"], [317, 1, 1, "", "sub_bw"], [318, 1, 1, "", "subalpha"], [319, 1, 1, "", "subalpha_bw"], [320, 1, 1, "", "subtract"], [321, 1, 1, "", "sum"], [322, 1, 1, "", "swiglu"], [323, 1, 1, "", "swish"], [324, 1, 1, "", "synchronize_device"], [325, 1, 1, "", "tan"], [326, 1, 1, "", "tan_bw"], [327, 1, 1, "", "tanh"], [328, 1, 1, "", "tanh_bw"], [329, 1, 1, "", "tanhshrink"], [330, 1, 1, "", "tanhshrink_bw"], [331, 1, 1, "", "threshold"], [332, 1, 1, "", "threshold_bw"], [333, 1, 1, "", "tilize"], [334, 1, 1, "", "tilize_with_val_padding"], [335, 1, 1, "", "to_device"], [336, 1, 1, "", "to_layout"], [337, 1, 1, "", "to_memory_config"], [338, 1, 1, "", "to_torch"], [339, 1, 1, "", "topk"], [346, 1, 1, "", "tril"], [347, 1, 1, "", "triu"], [348, 1, 1, "", "trunc"], [349, 1, 1, "", "trunc_bw"], [350, 1, 1, "", "unary_chain"], [351, 1, 1, "", "untilize"], [352, 1, 1, "", "untilize_with_halo_v2"], [353, 1, 1, "", "untilize_with_unpadding"], [354, 1, 1, "", "upsample"], [355, 1, 1, "", "var"], [356, 1, 1, "", "where"], [357, 1, 1, "", "where_bw"], [358, 1, 1, "", "xlogy"], [359, 1, 1, "", "xlogy_bw"], [360, 1, 1, "", "zeros"], [361, 1, 1, "", "zeros_like"]], "ttnn.MemoryConfig": [[366, 2, 1, "", "__init__"]], "ttnn.Shape": [[372, 3, 1, "", "rank"], [372, 2, 1, "", "to_rank"], [372, 2, 1, "", "with_tile_padding"]], "ttnn.Tensor": [[366, 2, 1, "", "__init__"], [366, 2, 1, "", "buffer"], [367, 1, 1, "", "cpu"], [366, 2, 1, "", "device"], [366, 2, 1, "", "get_dtype"], [366, 2, 1, "", "get_layout"], [366, 2, 1, "", "pad"], [366, 2, 1, "", "pad_to_tile"], [366, 2, 1, "", "storage_type"], [366, 2, 1, "", "to"], [366, 2, 1, "", "unpad"], [366, 2, 1, "", "unpad_from_tile"]], "ttnn.experimental": [[99, 1, 1, "", "all_reduce"], [100, 1, 1, "", "dropout"], [101, 1, 1, "", "rotary_embedding"]], "ttnn.kv_cache": [[160, 1, 1, "", "fill_cache_for_user_"], [161, 1, 1, "", "update_cache_for_token_"]], "ttnn.model_preprocessing": [[218, 1, 1, "", "preprocess_model"], [219, 1, 1, "", "preprocess_model_parameters"]], "ttnn.operations.moreh": [[367, 1, 1, "", "group_norm"], [367, 1, 1, "", "group_norm_backward"], [367, 1, 1, "", "logsoftmax"], [367, 1, 1, "", "logsoftmax_backward"], [367, 1, 1, "", "mean"], [367, 1, 1, "", "mean_backward"], [367, 1, 1, "", "norm"], [367, 1, 1, "", "norm_backward"], [367, 1, 1, "", "softmax"], [367, 1, 1, "", "softmax_backward"], [367, 1, 1, "", "softmin"], [367, 1, 1, "", "softmin_backward"]], "ttnn.transformer": [[340, 1, 1, "", "attention_softmax"], [341, 1, 1, "", "attention_softmax_"], [342, 1, 1, "", "concatenate_heads"], [343, 1, 1, "", "scaled_dot_product_attention"], [344, 1, 1, "", "scaled_dot_product_attention_decode"], [345, 1, 1, "", "split_query_key_value_and_split_heads"]]}, "objtypes": {"0": "py:class", "1": "py:function", "2": "py:method", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "function", "Python function"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "tt": [0, 364, 366, 367, 368, 369], "nn": [0, 368, 369], "document": 0, "ttnn": [0, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 371, 374, 377, 380, 381, 383, 384, 385, 386, 388], "model": [0, 4, 7, 362, 368, 383, 384, 387], "resourc": 0, "indic": 0, "tabl": 0, "contribut": [1, 369], "develop": 1, "support": [2, 388], "report": [2, 7, 371], "bug": 2, "featur": [2, 5], "propos": 2, "request": 2, "troubleshoot": 2, "debug": [2, 388], "tip": 2, "commun": 2, "perform": [3, 382], "prerequisit": [3, 4], "run": [3, 4, 364, 383, 386, 388], "perf": [3, 371], "file": 3, "all": [3, 388], "get": [4, 368, 386], "start": [4, 368, 369], "an": [4, 388], "exampl": [4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 336, 337, 338, 346, 347, 348, 349, 350, 355, 356, 357, 358, 359, 360, 361, 362, 364, 366, 388], "next": 4, "step": [4, 6, 362, 369], "what": [5, 6], "i": [5, 6], "kei": 5, "ad": 6, "new": [6, 367, 370], "oper": [6, 7, 362, 367, 371, 375, 379, 381, 384, 385, 388], "faq": 6, "ar": 6, "need": 6, "add": [6, 16, 379, 381], "c": [6, 388], "python": [6, 388], "devic": [6, 7, 364, 367, 381, 382, 383, 388], "implement": [6, 383, 386], "1": [6, 362, 368, 369, 388], "2": [6, 362, 367, 368, 369, 387, 388], "bind": 6, "option": [6, 367, 369], "golden": 6, "function": [6, 370, 384, 388], "api": [7, 366, 367, 372], "memori": [7, 372], "config": [7, 372, 382], "core": 7, "tensor": [7, 364, 366, 367, 372, 379, 381, 382, 388], "creation": 7, "matrix": [7, 382], "multipl": [7, 372, 382], "pointwis": 7, "unari": 7, "binari": 7, "ternari": 7, "loss": 7, "reduct": 7, "data": [7, 372, 381], "movement": 7, "normal": 7, "moreh": 7, "transform": [7, 340, 341, 342, 343, 344, 345], "ccl": 7, "embed": [7, 82], "pool": 7, "vision": 7, "kv": 7, "cach": [7, 367, 382, 383, 388], "convers": 7, "hook": [7, 388], "getdefaultdevic": 8, "setdefaultdevic": 9, "ab": 10, "abs_bw": 11, "aco": 12, "acos_bw": 13, "acosh": 14, "acosh_bw": 15, "add_bw": 17, "addalpha": 18, "addalpha_bw": 19, "addcdiv": 20, "addcdiv_bw": 21, "addcmul": 22, "addcmul_bw": 23, "all_gath": 24, "angl": 25, "angle_bw": 26, "arang": 27, "argmax": 28, "as_tensor": 29, "asin": 30, "asin_bw": 31, "asinh": 32, "asinh_bw": 33, "assign_bw": 34, "atan": 35, "atan2": 36, "atan2_bw": 37, "atan_bw": 38, "atanh": 39, "atanh_bw": 40, "batch_norm": 41, "bias_gelu_bw": 42, "bitwise_and": 43, "bitwise_left_shift": 44, "bitwise_not": 45, "bitwise_or": 46, "bitwise_right_shift": 47, "bitwise_xor": 48, "cbrt": 49, "ceil": 50, "ceil_bw": 51, "celu": 52, "celu_bw": 53, "clamp": 54, "clamp_bw": 55, "clip": 56, "clip_bw": 57, "clone": [58, 387], "close_devic": 59, "concat": 60, "concat_bw": 61, "conj": 62, "conj_bw": 63, "co": 64, "cos_bw": 65, "cosh": 66, "cosh_bw": 67, "create_sharded_memory_config": 68, "dealloc": 69, "deg2rad": 70, "deg2rad_bw": 71, "digamma": 72, "digamma_bw": 73, "div": 74, "div_bw": 75, "div_no_nan": 76, "div_no_nan_bw": 77, "downsampl": 78, "dump_tensor": 79, "elu": 80, "elu_bw": 81, "embedding_bw": 83, "empti": 84, "empty_lik": 85, "eq": 86, "eq_": 87, "eqz": 88, "erf": 89, "erf_bw": 90, "erfc": 91, "erfc_bw": 92, "erfinv": 93, "erfinv_bw": 94, "exp": 95, "exp2": 96, "exp2_bw": 97, "exp_bw": 98, "experiment": [99, 100, 101, 367], "all_reduc": 99, "dropout": 100, "rotary_embed": 101, "expm1": 102, "expm1_bw": 103, "fill": 104, "fill_bw": 105, "fill_ones_rm": 106, "fill_rm": 107, "fill_zero_bw": 108, "floor": 109, "floor_bw": 110, "floor_div": 111, "fmod": 112, "fmod_bw": 113, "format_input_tensor": 114, "format_output_tensor": 115, "frac": 116, "frac_bw": 117, "from_devic": 118, "from_torch": 119, "full": 120, "full_lik": 121, "gcd": 122, "ge": 123, "ge_": 124, "geglu": 125, "gelu": 126, "gelu_bw": 127, "gez": 128, "global_avg_pool2d": 129, "glu": 130, "group_norm": 131, "gt": 132, "gt_": 133, "gtz": 134, "hardshrink": 135, "hardshrink_bw": 136, "hardsigmoid": 137, "hardsigmoid_bw": 138, "hardswish": 139, "hardswish_bw": 140, "hardtanh": 141, "hardtanh_bw": 142, "heavisid": 143, "hypot": 144, "hypot_bw": 145, "i0": 146, "i0_bw": 147, "ident": 148, "imag": [149, 369], "imag_bw": 150, "indexed_fil": 151, "is_imag": 152, "is_real": 153, "isclos": 154, "isfinit": 155, "isinf": 156, "isnan": 157, "isneginf": 158, "isposinf": 159, "kv_cach": [160, 161], "fill_cache_for_user_": 160, "update_cache_for_token_": 161, "l1_loss": 162, "layer_norm": 163, "lcm": 164, "ldexp": 165, "ldexp_bw": 166, "le": 167, "le_": 168, "leaky_relu": 169, "leaky_relu_bw": 170, "lerp": 171, "lerp_bw": 172, "lez": 173, "lgamma": 174, "lgamma_bw": 175, "linear": 176, "load_tensor": 177, "log": [178, 367, 388], "log10": 179, "log10_bw": 180, "log1p": 181, "log1p_bw": 182, "log2": 183, "log2_bw": 184, "log_bw": 185, "log_sigmoid": 186, "log_sigmoid_bw": 187, "logaddexp": 188, "logaddexp2": 189, "logaddexp2_bw": 190, "logaddexp_bw": 191, "logical_and": 192, "logical_and_": 193, "logical_not": 194, "logical_not_": 195, "logical_or": 196, "logical_or_": 197, "logical_xor": 198, "logical_xor_": 199, "logit": 200, "logit_bw": 201, "logiteps_bw": 202, "lt": 203, "lt_": 204, "ltz": 205, "mac": 206, "manage_devic": 207, "matmul": [208, 375], "max": 209, "max_bw": 210, "max_pool2d": 211, "maximum": 212, "mean": 213, "min": 214, "min_bw": 215, "minimum": 216, "mish": 217, "model_preprocess": [218, 219], "preprocess_model": 218, "preprocess_model_paramet": 219, "moreh_sum": 220, "mse_loss": 221, "mul_bw": 222, "multigammaln": 223, "multigammaln_bw": 224, "multipli": [225, 382], "ne": 226, "ne_": 227, "neg": 228, "neg_bw": 229, "nextaft": 230, "nez": 231, "nonzero": 232, "normalize_glob": 233, "normalize_hw": 234, "ones": 235, "ones_lik": 236, "open_devic": 237, "outer": 238, "pad": 239, "pad_to_tile_shap": 240, "permut": 241, "polar": 242, "polar_bw": 243, "polygamma": 244, "polygamma_bw": 245, "polyv": 246, "pow": 247, "pow_bw": 248, "prelu": 249, "prod": 250, "prod_bw": 251, "rad2deg": 252, "rad2deg_bw": 253, "rdiv": 254, "rdiv_bw": 255, "real": 256, "real_bw": 257, "realloc": 258, "reciproc": 259, "reciprocal_bw": 260, "reduce_scatt": 261, "register_post_operation_hook": 262, "register_pre_operation_hook": 263, "reglu": 264, "relu": 265, "relu6": 266, "relu6_bw": 267, "relu_bw": 268, "relu_max": 269, "relu_min": 270, "remaind": 271, "remainder_bw": 272, "repeat": 273, "repeat_bw": 274, "repeat_interleav": 275, "reshap": 276, "rms_norm": 277, "round": 278, "round_bw": 279, "rpow": 280, "rpow_bw": 281, "rsqrt": 282, "rsqrt_bw": 283, "rsub": 284, "rsub_bw": 285, "scatter": 286, "selu": 287, "selu_bw": 288, "set_printopt": 289, "sigmoid": 290, "sigmoid_accur": 291, "sigmoid_bw": 292, "sign": 293, "sign_bw": 294, "signbit": 295, "silu": 296, "silu_bw": 297, "sin": 298, "sin_bw": 299, "sinh": 300, "sinh_bw": 301, "slice": [302, 388], "softmax": 303, "softplu": 304, "softplus_bw": 305, "softshrink": 306, "softshrink_bw": 307, "softsign": 308, "softsign_bw": 309, "sqrt": 310, "sqrt_bw": 311, "squar": 312, "square_bw": 313, "squared_differ": 314, "squared_difference_bw": 315, "std": 316, "sub_bw": 317, "subalpha": 318, "subalpha_bw": 319, "subtract": 320, "sum": 321, "swiglu": 322, "swish": 323, "synchronize_devic": 324, "tan": 325, "tan_bw": 326, "tanh": 327, "tanh_bw": 328, "tanhshrink": 329, "tanhshrink_bw": 330, "threshold": 331, "threshold_bw": 332, "tiliz": 333, "tilize_with_val_pad": 334, "to_devic": 335, "to_layout": 336, "to_memory_config": 337, "to_torch": 338, "topk": 339, "attention_softmax": 340, "attention_softmax_": 341, "concatenate_head": 342, "scaled_dot_product_attent": 343, "scaled_dot_product_attention_decod": 344, "split_query_key_value_and_split_head": 345, "tril": 346, "triu": 347, "trunc": 348, "trunc_bw": 349, "unary_chain": 350, "until": 351, "untilize_with_halo_v2": 352, "untilize_with_unpad": 353, "upsampl": 354, "var": 355, "where": [356, 368], "where_bw": 357, "xlogi": 358, "xlogy_bw": 359, "zero": 360, "zeros_lik": 361, "convert": [362, 366, 381, 383, 388], "torch": [362, 374, 381, 382, 383, 384, 386, 388], "rewrit": 362, "switch": 362, "3": [362, 368, 369, 388], "optim": [362, 368, 383], "more": [362, 382], "build": [363, 368, 387], "uplift": 363, "demo": [363, 368], "lib": [364, 367], "us": [364, 369, 381, 382, 383, 384, 388], "one": 364, "op": 364, "from": [364, 367, 368, 369, 386, 387, 388], "acceler": 364, "pytorch": [364, 366, 387], "odd": 364, "size": 364, "last": 364, "dim": 364, "depend": [365, 369], "overview": [366, 367], "storag": [366, 372, 381], "memoryconfig": 366, "between": 366, "infrastructur": 367, "member": 367, "input": 367, "output": [367, 381, 382, 383], "profil": [367, 371, 377, 385], "fast": 367, "dispatch": 367, "program": [367, 382, 383, 388], "through": 367, "tt_lib": [367, 388], "primari": 367, "enum": 367, "fallback": 367, "fuse": 367, "mini": 367, "graph": [367, 374, 386, 387, 388], "librari": [367, 387], "complex": 367, "type": [367, 372, 381], "instal": [368, 369], "explor": 368, "our": 368, "tutori": [368, 373], "multi": [368, 376, 383], "head": [368, 376, 383], "attent": [368, 376, 383], "simpl": 368, "4": [368, 388], "go": 368, "here": 368, "driver": 369, "firmwar": 369, "system": 369, "level": 369, "metalium": 369, "sourc": 369, "wheel": 369, "docker": 369, "releas": 369, "5": [369, 388], "softwar": 369, "codebas": 369, "onboard": 370, "header": 371, "profile_thi": 371, "descript": 371, "shape": 372, "layout": [372, 381, 382], "requir": 372, "width": 372, "limit": 372, "bfloat8_b": 372, "shard": 372, "dit_xl_2": 374, "With": 374, "resnet": [378, 386], "basic": [378, 388], "block": [378, 386], "tracer": 380, "creat": [381, 386], "host": 381, "borrow": 381, "v": 381, "own": 381, "open": 381, "initi": [381, 382, 383], "b": [381, 382], "random": [381, 382], "valu": [381, 382], "inspect": [381, 382], "attribut": 381, "close": [381, 382, 383], "enabl": [382, 383, 388], "configur": [382, 383], "result": 382, "write": 383, "activ": 383, "weight": 383, "first": 383, "iter": 383, "subsequ": 383, "version": [383, 386], "pre": [383, 387, 388], "process": 383, "paramet": [383, 386], "check": 383, "match": 383, "origin": 383, "trace": [384, 386, 388], "modul": [384, 386], "written": 384, "torchvis": 386, "preprocess": 386, "displai": [386, 387], "pass": 386, "constructor": 386, "base": 387, "http": 387, "github": 387, "com": 387, "facebookresearch": 387, "dit": 387, "git": 387, "download": 387, "xl": 387, "sampl": 387, "train": 387, "__getitem__": 388, "intermedi": 388, "6": 388, "7": 388, "8": 388, "9": 388, "10": 388, "chang": 388, "string": 388, "represent": 388, "11": 388, "visual": 388, "web": 388, "browser": 388, "12": 388, "regist": 388, "post": 388, "13": 388, "queri": 388, "14": 388, "fall": 388, "back": 388, "15": 388, "captur": 388, "buffer": 388, "alloc": 388, "etc": 388}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"Welcome to TT-NN documentation!": [[0, "welcome-to-tt-nn-documentation"]], "TTNN": [[0, null]], "Models": [[0, null]], "Resources": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "Contributing as a developer": [[1, "contributing-as-a-developer"]], "Support": [[2, "support"]], "Reporting bugs, feature proposals, or support requests": [[2, "reporting-bugs-feature-proposals-or-support-requests"]], "Troubleshooting and debugging tips": [[2, "troubleshooting-and-debugging-tips"]], "Community": [[2, "community"]], "Performance": [[3, "performance"]], "Prerequisites": [[3, "prerequisites"], [4, "prerequisites"]], "Running a perf file": [[3, "running-a-perf-file"]], "Running all the perf files": [[3, "running-all-the-perf-files"]], "Getting Started": [[4, "getting-started"], [368, "getting-started"]], "Running an example model": [[4, "running-an-example-model"]], "Next steps": [[4, "next-steps"]], "What is ttnn?": [[5, "what-is-ttnn"]], "Key features of ttnn": [[5, "key-features-of-ttnn"]], "Adding New ttnn Operation": [[6, "adding-new-ttnn-operation"]], "FAQ": [[6, "faq"]], "What is a ttnn operation?": [[6, "what-is-a-ttnn-operation"]], "What steps are needed to add ttnn operation in C++?": [[6, "what-steps-are-needed-to-add-ttnn-operation-in-c"]], "What steps are needed to add ttnn operation in Python?": [[6, "what-steps-are-needed-to-add-ttnn-operation-in-python"]], "Example of Adding a new Device Operation": [[6, "example-of-adding-a-new-device-operation"]], "C++ Implementation": [[6, "c-implementation"]], "Step 1: Implement device operation": [[6, "step-1-implement-device-operation"]], "Step 2: Implement the operation in C++": [[6, "step-2-implement-the-operation-in-c"]], "Python Implementation": [[6, "python-implementation"]], "Step 1: Add Python binding": [[6, "step-1-add-python-binding"]], "Step 2: (Optional) Add golden function for the operation in Python": [[6, "step-2-optional-add-golden-function-for-the-operation-in-python"]], "APIs": [[7, "apis"], [372, "apis"]], "Device": [[7, "device"]], "Memory Config": [[7, "memory-config"], [372, "memory-config"]], "Operations": [[7, "operations"]], "Core": [[7, "core"]], "Tensor Creation": [[7, "tensor-creation"]], "Matrix Multiplication": [[7, "matrix-multiplication"], [382, "Matrix-Multiplication"]], "Pointwise Unary": [[7, "pointwise-unary"]], "Pointwise Binary": [[7, "pointwise-binary"]], "Pointwise Ternary": [[7, "pointwise-ternary"]], "Losses": [[7, "losses"]], "Reduction": [[7, "reduction"]], "Data Movement": [[7, "data-movement"]], "Normalization": [[7, "normalization"]], "Moreh Operations": [[7, "moreh-operations"]], "Transformer": [[7, "transformer"]], "CCL": [[7, "ccl"]], "Embedding": [[7, "embedding"]], "Pooling": [[7, "pooling"]], "Vision": [[7, "vision"]], "KV Cache": [[7, "kv-cache"]], "Model Conversion": [[7, "model-conversion"]], "Reports": [[7, "reports"]], "Operation Hooks": [[7, "operation-hooks"]], "ttnn.GetDefaultDevice": [[8, "ttnn-getdefaultdevice"]], "Example": [[8, null], [9, null], [10, null], [11, null], [12, null], [13, null], [14, null], [15, null], [16, null], [17, null], [18, null], [19, null], [20, null], [21, null], [22, null], [23, null], [24, null], [25, null], [26, null], [27, null], [30, null], [31, null], [32, null], [33, null], [34, null], [35, null], [36, null], [37, null], [38, null], [39, null], [40, null], [42, null], [43, null], [44, null], [45, null], [46, null], [47, null], [48, null], [49, null], [50, null], [51, null], [52, null], [53, null], [54, null], [55, null], [56, null], [57, null], [59, null], [60, null], [61, null], [62, null], [63, null], [64, null], [65, null], [66, null], [67, null], [68, null], [69, null], [70, null], [71, null], [72, null], [73, null], [74, null], [75, null], [76, null], [77, null], [79, null], [80, null], [81, null], [82, null], [83, null], [84, null], [85, null], [86, null], [87, null], [88, null], [89, null], [90, null], [91, null], [92, null], [93, null], [94, null], [95, null], [96, null], [97, null], [98, null], [99, null], [100, null], [102, null], [103, null], [104, null], [105, null], [108, null], [109, null], [110, null], [111, null], [112, null], [113, null], [114, null], [115, null], [116, null], [117, null], [118, null], [119, null], [120, null], [121, null], [122, null], [123, null], [124, null], [125, null], [126, null], [127, null], [128, null], [129, null], [130, null], [132, null], [133, null], [134, null], [135, null], [136, null], [137, null], [138, null], [139, null], [140, null], [141, null], [142, null], [143, null], [144, null], [145, null], [146, null], [147, null], [148, null], [149, null], [150, null], [151, null], [152, null], [153, null], [154, null], [155, null], [156, null], [157, null], [158, null], [159, null], [162, null], [164, null], [165, null], [166, null], [167, null], [168, null], [169, null], [170, null], [171, null], [172, null], [173, null], [174, null], [175, null], [176, null], [177, null], [178, null], [179, null], [180, null], [181, null], [182, null], [183, null], [184, null], [185, null], [186, null], [187, null], [188, null], [189, null], [190, null], [191, null], [192, null], [193, null], [194, null], [195, null], [196, null], [197, null], [198, null], [199, null], [200, null], [201, null], [202, null], [203, null], [204, null], [205, null], [206, null], [207, null], [208, null], [209, null], [210, null], [211, null], [212, null], [213, null], [214, null], [215, null], [216, null], [217, null], [221, null], [222, null], [223, null], [224, null], [225, null], [226, null], [227, null], [228, null], [229, null], [230, null], [231, null], [232, null], [233, null], [234, null], [235, null], [236, null], [237, null], [238, null], [240, null], [242, null], [243, null], [244, null], [245, null], [246, null], [247, null], [248, null], [249, null], [251, null], [252, null], [253, null], [254, null], [255, null], [256, null], [257, null], [258, null], [259, null], [260, null], [261, null], [264, null], [265, null], [266, null], [267, null], [268, null], [269, null], [270, null], [271, null], [272, null], [273, null], [274, null], [276, null], [278, null], [279, null], [280, null], [281, null], [282, null], [283, null], [284, null], [285, null], [286, null], [287, null], [288, null], [290, null], [291, null], [292, null], [293, null], [294, null], [295, null], [296, null], [297, null], [298, null], [299, null], [300, null], [301, null], [302, null], [303, null], [304, null], [305, null], [306, null], [307, null], [308, null], [309, null], [310, null], [311, null], [312, null], [313, null], [314, null], [315, null], [316, null], [317, null], [318, null], [319, null], [320, null], [321, null], [322, null], [323, null], [324, null], [325, null], [326, null], [327, null], [328, null], [329, null], [330, null], [331, null], [332, null], [336, null], [337, null], [338, null], [346, null], [347, null], [348, null], [349, null], [350, null], [355, null], [356, null], [357, null], [358, null], [359, null], [360, null], [361, null]], "ttnn.SetDefaultDevice": [[9, "ttnn-setdefaultdevice"]], "ttnn.abs": [[10, "ttnn-abs"]], "ttnn.abs_bw": [[11, "ttnn-abs-bw"]], "ttnn.acos": [[12, "ttnn-acos"]], "ttnn.acos_bw": [[13, "ttnn-acos-bw"]], "ttnn.acosh": [[14, "ttnn-acosh"]], "ttnn.acosh_bw": [[15, "ttnn-acosh-bw"]], "ttnn.add": [[16, "ttnn-add"]], "ttnn.add_bw": [[17, "ttnn-add-bw"]], "ttnn.addalpha": [[18, "ttnn-addalpha"]], "ttnn.addalpha_bw": [[19, "ttnn-addalpha-bw"]], "ttnn.addcdiv": [[20, "ttnn-addcdiv"]], "ttnn.addcdiv_bw": [[21, "ttnn-addcdiv-bw"]], "ttnn.addcmul": [[22, "ttnn-addcmul"]], "ttnn.addcmul_bw": [[23, "ttnn-addcmul-bw"]], "ttnn.all_gather": [[24, "ttnn-all-gather"]], "ttnn.angle": [[25, "ttnn-angle"]], "ttnn.angle_bw": [[26, "ttnn-angle-bw"]], "ttnn.arange": [[27, "ttnn-arange"]], "ttnn.argmax": [[28, "ttnn-argmax"]], "ttnn.as_tensor": [[29, "ttnn-as-tensor"]], "Examples": [[29, null], [289, null]], "ttnn.asin": [[30, "ttnn-asin"]], "ttnn.asin_bw": [[31, "ttnn-asin-bw"]], "ttnn.asinh": [[32, "ttnn-asinh"]], "ttnn.asinh_bw": [[33, "ttnn-asinh-bw"]], "ttnn.assign_bw": [[34, "ttnn-assign-bw"]], "ttnn.atan": [[35, "ttnn-atan"]], "ttnn.atan2": [[36, "ttnn-atan2"]], "ttnn.atan2_bw": [[37, "ttnn-atan2-bw"]], "ttnn.atan_bw": [[38, "ttnn-atan-bw"]], "ttnn.atanh": [[39, "ttnn-atanh"]], "ttnn.atanh_bw": [[40, "ttnn-atanh-bw"]], "ttnn.batch_norm": [[41, "ttnn-batch-norm"]], "ttnn.bias_gelu_bw": [[42, "ttnn-bias-gelu-bw"]], "ttnn.bitwise_and": [[43, "ttnn-bitwise-and"]], "ttnn.bitwise_left_shift": [[44, "ttnn-bitwise-left-shift"]], "ttnn.bitwise_not": [[45, "ttnn-bitwise-not"]], "ttnn.bitwise_or": [[46, "ttnn-bitwise-or"]], "ttnn.bitwise_right_shift": [[47, "ttnn-bitwise-right-shift"]], "ttnn.bitwise_xor": [[48, "ttnn-bitwise-xor"]], "ttnn.cbrt": [[49, "ttnn-cbrt"]], "ttnn.ceil": [[50, "ttnn-ceil"]], "ttnn.ceil_bw": [[51, "ttnn-ceil-bw"]], "ttnn.celu": [[52, "ttnn-celu"]], "ttnn.celu_bw": [[53, "ttnn-celu-bw"]], "ttnn.clamp": [[54, "ttnn-clamp"]], "ttnn.clamp_bw": [[55, "ttnn-clamp-bw"]], "ttnn.clip": [[56, "ttnn-clip"]], "ttnn.clip_bw": [[57, "ttnn-clip-bw"]], "ttnn.clone": [[58, "ttnn-clone"]], "ttnn.close_device": [[59, "ttnn-close-device"]], "ttnn.concat": [[60, "ttnn-concat"]], "ttnn.concat_bw": [[61, "ttnn-concat-bw"]], "ttnn.conj": [[62, "ttnn-conj"]], "ttnn.conj_bw": [[63, "ttnn-conj-bw"]], "ttnn.cos": [[64, "ttnn-cos"]], "ttnn.cos_bw": [[65, "ttnn-cos-bw"]], "ttnn.cosh": [[66, "ttnn-cosh"]], "ttnn.cosh_bw": [[67, "ttnn-cosh-bw"]], "ttnn.create_sharded_memory_config": [[68, "ttnn-create-sharded-memory-config"]], "ttnn.deallocate": [[69, "ttnn-deallocate"]], "ttnn.deg2rad": [[70, "ttnn-deg2rad"]], "ttnn.deg2rad_bw": [[71, "ttnn-deg2rad-bw"]], "ttnn.digamma": [[72, "ttnn-digamma"]], "ttnn.digamma_bw": [[73, "ttnn-digamma-bw"]], "ttnn.div": [[74, "ttnn-div"]], "ttnn.div_bw": [[75, "ttnn-div-bw"]], "ttnn.div_no_nan": [[76, "ttnn-div-no-nan"]], "ttnn.div_no_nan_bw": [[77, "ttnn-div-no-nan-bw"]], "ttnn.downsample": [[78, "ttnn-downsample"]], "ttnn.dump_tensor": [[79, "ttnn-dump-tensor"]], "ttnn.elu": [[80, "ttnn-elu"]], "ttnn.elu_bw": [[81, "ttnn-elu-bw"]], "ttnn.embedding": [[82, "ttnn-embedding"]], "ttnn.embedding_bw": [[83, "ttnn-embedding-bw"]], "ttnn.empty": [[84, "ttnn-empty"]], "ttnn.empty_like": [[85, "ttnn-empty-like"]], "ttnn.eq": [[86, "ttnn-eq"]], "ttnn.eq_": [[87, "ttnn-eq"]], "ttnn.eqz": [[88, "ttnn-eqz"]], "ttnn.erf": [[89, "ttnn-erf"]], "ttnn.erf_bw": [[90, "ttnn-erf-bw"]], "ttnn.erfc": [[91, "ttnn-erfc"]], "ttnn.erfc_bw": [[92, "ttnn-erfc-bw"]], "ttnn.erfinv": [[93, "ttnn-erfinv"]], "ttnn.erfinv_bw": [[94, "ttnn-erfinv-bw"]], "ttnn.exp": [[95, "ttnn-exp"]], "ttnn.exp2": [[96, "ttnn-exp2"]], "ttnn.exp2_bw": [[97, "ttnn-exp2-bw"]], "ttnn.exp_bw": [[98, "ttnn-exp-bw"]], "ttnn.experimental.all_reduce": [[99, "ttnn-experimental-all-reduce"]], "ttnn.experimental.dropout": [[100, "ttnn-experimental-dropout"]], "ttnn.experimental.rotary_embedding": [[101, "ttnn-experimental-rotary-embedding"]], "ttnn.expm1": [[102, "ttnn-expm1"]], "ttnn.expm1_bw": [[103, "ttnn-expm1-bw"]], "ttnn.fill": [[104, "ttnn-fill"]], "ttnn.fill_bw": [[105, "ttnn-fill-bw"]], "ttnn.fill_ones_rm": [[106, "ttnn-fill-ones-rm"]], "ttnn.fill_rm": [[107, "ttnn-fill-rm"]], "ttnn.fill_zero_bw": [[108, "ttnn-fill-zero-bw"]], "ttnn.floor": [[109, "ttnn-floor"]], "ttnn.floor_bw": [[110, "ttnn-floor-bw"]], "ttnn.floor_div": [[111, "ttnn-floor-div"]], "ttnn.fmod": [[112, "ttnn-fmod"]], "ttnn.fmod_bw": [[113, "ttnn-fmod-bw"]], "ttnn.format_input_tensor": [[114, "ttnn-format-input-tensor"]], "ttnn.format_output_tensor": [[115, "ttnn-format-output-tensor"]], "ttnn.frac": [[116, "ttnn-frac"]], "ttnn.frac_bw": [[117, "ttnn-frac-bw"]], "ttnn.from_device": [[118, "ttnn-from-device"]], "ttnn.from_torch": [[119, "ttnn-from-torch"]], "ttnn.full": [[120, "ttnn-full"]], "ttnn.full_like": [[121, "ttnn-full-like"]], "ttnn.gcd": [[122, "ttnn-gcd"]], "ttnn.ge": [[123, "ttnn-ge"]], "ttnn.ge_": [[124, "ttnn-ge"]], "ttnn.geglu": [[125, "ttnn-geglu"]], "ttnn.gelu": [[126, "ttnn-gelu"]], "ttnn.gelu_bw": [[127, "ttnn-gelu-bw"]], "ttnn.gez": [[128, "ttnn-gez"]], "ttnn.global_avg_pool2d": [[129, "ttnn-global-avg-pool2d"]], "ttnn.glu": [[130, "ttnn-glu"]], "ttnn.group_norm": [[131, "ttnn-group-norm"]], "ttnn.gt": [[132, "ttnn-gt"]], "ttnn.gt_": [[133, "ttnn-gt"]], "ttnn.gtz": [[134, "ttnn-gtz"]], "ttnn.hardshrink": [[135, "ttnn-hardshrink"]], "ttnn.hardshrink_bw": [[136, "ttnn-hardshrink-bw"]], "ttnn.hardsigmoid": [[137, "ttnn-hardsigmoid"]], "ttnn.hardsigmoid_bw": [[138, "ttnn-hardsigmoid-bw"]], "ttnn.hardswish": [[139, "ttnn-hardswish"]], "ttnn.hardswish_bw": [[140, "ttnn-hardswish-bw"]], "ttnn.hardtanh": [[141, "ttnn-hardtanh"]], "ttnn.hardtanh_bw": [[142, "ttnn-hardtanh-bw"]], "ttnn.heaviside": [[143, "ttnn-heaviside"]], "ttnn.hypot": [[144, "ttnn-hypot"]], "ttnn.hypot_bw": [[145, "ttnn-hypot-bw"]], "ttnn.i0": [[146, "ttnn-i0"]], "ttnn.i0_bw": [[147, "ttnn-i0-bw"]], "ttnn.identity": [[148, "ttnn-identity"]], "ttnn.imag": [[149, "ttnn-imag"]], "ttnn.imag_bw": [[150, "ttnn-imag-bw"]], "ttnn.indexed_fill": [[151, "ttnn-indexed-fill"]], "ttnn.is_imag": [[152, "ttnn-is-imag"]], "ttnn.is_real": [[153, "ttnn-is-real"]], "ttnn.isclose": [[154, "ttnn-isclose"]], "ttnn.isfinite": [[155, "ttnn-isfinite"]], "ttnn.isinf": [[156, "ttnn-isinf"]], "ttnn.isnan": [[157, "ttnn-isnan"]], "ttnn.isneginf": [[158, "ttnn-isneginf"]], "ttnn.isposinf": [[159, "ttnn-isposinf"]], "ttnn.kv_cache.fill_cache_for_user_": [[160, "ttnn-kv-cache-fill-cache-for-user"]], "ttnn.kv_cache.update_cache_for_token_": [[161, "ttnn-kv-cache-update-cache-for-token"]], "ttnn.l1_loss": [[162, "ttnn-l1-loss"]], "ttnn.layer_norm": [[163, "ttnn-layer-norm"]], "ttnn.lcm": [[164, "ttnn-lcm"]], "ttnn.ldexp": [[165, "ttnn-ldexp"]], "ttnn.ldexp_bw": [[166, "ttnn-ldexp-bw"]], "ttnn.le": [[167, "ttnn-le"]], "ttnn.le_": [[168, "ttnn-le"]], "ttnn.leaky_relu": [[169, "ttnn-leaky-relu"]], "ttnn.leaky_relu_bw": [[170, "ttnn-leaky-relu-bw"]], "ttnn.lerp": [[171, "ttnn-lerp"]], "ttnn.lerp_bw": [[172, "ttnn-lerp-bw"]], "ttnn.lez": [[173, "ttnn-lez"]], "ttnn.lgamma": [[174, "ttnn-lgamma"]], "ttnn.lgamma_bw": [[175, "ttnn-lgamma-bw"]], "ttnn.linear": [[176, "ttnn-linear"]], "ttnn.load_tensor": [[177, "ttnn-load-tensor"]], "ttnn.log": [[178, "ttnn-log"]], "ttnn.log10": [[179, "ttnn-log10"]], "ttnn.log10_bw": [[180, "ttnn-log10-bw"]], "ttnn.log1p": [[181, "ttnn-log1p"]], "ttnn.log1p_bw": [[182, "ttnn-log1p-bw"]], "ttnn.log2": [[183, "ttnn-log2"]], "ttnn.log2_bw": [[184, "ttnn-log2-bw"]], "ttnn.log_bw": [[185, "ttnn-log-bw"]], "ttnn.log_sigmoid": [[186, "ttnn-log-sigmoid"]], "ttnn.log_sigmoid_bw": [[187, "ttnn-log-sigmoid-bw"]], "ttnn.logaddexp": [[188, "ttnn-logaddexp"]], "ttnn.logaddexp2": [[189, "ttnn-logaddexp2"]], "ttnn.logaddexp2_bw": [[190, "ttnn-logaddexp2-bw"]], "ttnn.logaddexp_bw": [[191, "ttnn-logaddexp-bw"]], "ttnn.logical_and": [[192, "ttnn-logical-and"]], "ttnn.logical_and_": [[193, "ttnn-logical-and"]], "ttnn.logical_not": [[194, "ttnn-logical-not"]], "ttnn.logical_not_": [[195, "ttnn-logical-not"]], "ttnn.logical_or": [[196, "ttnn-logical-or"]], "ttnn.logical_or_": [[197, "ttnn-logical-or"]], "ttnn.logical_xor": [[198, "ttnn-logical-xor"]], "ttnn.logical_xor_": [[199, "ttnn-logical-xor"]], "ttnn.logit": [[200, "ttnn-logit"]], "ttnn.logit_bw": [[201, "ttnn-logit-bw"]], "ttnn.logiteps_bw": [[202, "ttnn-logiteps-bw"]], "ttnn.lt": [[203, "ttnn-lt"]], "ttnn.lt_": [[204, "ttnn-lt"]], "ttnn.ltz": [[205, "ttnn-ltz"]], "ttnn.mac": [[206, "ttnn-mac"]], "ttnn.manage_device": [[207, "ttnn-manage-device"]], "ttnn.matmul": [[208, "ttnn-matmul"]], "ttnn.max": [[209, "ttnn-max"]], "ttnn.max_bw": [[210, "ttnn-max-bw"]], "ttnn.max_pool2d": [[211, "ttnn-max-pool2d"]], "ttnn.maximum": [[212, "ttnn-maximum"]], "ttnn.mean": [[213, "ttnn-mean"]], "ttnn.min": [[214, "ttnn-min"]], "ttnn.min_bw": [[215, "ttnn-min-bw"]], "ttnn.minimum": [[216, "ttnn-minimum"]], "ttnn.mish": [[217, "ttnn-mish"]], "ttnn.model_preprocessing.preprocess_model": [[218, "ttnn-model-preprocessing-preprocess-model"]], "ttnn.model_preprocessing.preprocess_model_parameters": [[219, "ttnn-model-preprocessing-preprocess-model-parameters"]], "ttnn.moreh_sum": [[220, "ttnn-moreh-sum"]], "ttnn.mse_loss": [[221, "ttnn-mse-loss"]], "ttnn.mul_bw": [[222, "ttnn-mul-bw"]], "ttnn.multigammaln": [[223, "ttnn-multigammaln"]], "ttnn.multigammaln_bw": [[224, "ttnn-multigammaln-bw"]], "ttnn.multiply": [[225, "ttnn-multiply"]], "ttnn.ne": [[226, "ttnn-ne"]], "ttnn.ne_": [[227, "ttnn-ne"]], "ttnn.neg": [[228, "ttnn-neg"]], "ttnn.neg_bw": [[229, "ttnn-neg-bw"]], "ttnn.nextafter": [[230, "ttnn-nextafter"]], "ttnn.nez": [[231, "ttnn-nez"]], "ttnn.nonzero": [[232, "ttnn-nonzero"]], "ttnn.normalize_global": [[233, "ttnn-normalize-global"]], "ttnn.normalize_hw": [[234, "ttnn-normalize-hw"]], "ttnn.ones": [[235, "ttnn-ones"]], "ttnn.ones_like": [[236, "ttnn-ones-like"]], "ttnn.open_device": [[237, "ttnn-open-device"]], "ttnn.outer": [[238, "ttnn-outer"]], "ttnn.pad": [[239, "ttnn-pad"]], "ttnn.pad_to_tile_shape": [[240, "ttnn-pad-to-tile-shape"]], "ttnn.permute": [[241, "ttnn-permute"]], "ttnn.polar": [[242, "ttnn-polar"]], "ttnn.polar_bw": [[243, "ttnn-polar-bw"]], "ttnn.polygamma": [[244, "ttnn-polygamma"]], "ttnn.polygamma_bw": [[245, "ttnn-polygamma-bw"]], "ttnn.polyval": [[246, "ttnn-polyval"]], "ttnn.pow": [[247, "ttnn-pow"]], "ttnn.pow_bw": [[248, "ttnn-pow-bw"]], "ttnn.prelu": [[249, "ttnn-prelu"]], "ttnn.prod": [[250, "ttnn-prod"]], "ttnn.prod_bw": [[251, "ttnn-prod-bw"]], "ttnn.rad2deg": [[252, "ttnn-rad2deg"]], "ttnn.rad2deg_bw": [[253, "ttnn-rad2deg-bw"]], "ttnn.rdiv": [[254, "ttnn-rdiv"]], "ttnn.rdiv_bw": [[255, "ttnn-rdiv-bw"]], "ttnn.real": [[256, "ttnn-real"]], "ttnn.real_bw": [[257, "ttnn-real-bw"]], "ttnn.reallocate": [[258, "ttnn-reallocate"]], "ttnn.reciprocal": [[259, "ttnn-reciprocal"]], "ttnn.reciprocal_bw": [[260, "ttnn-reciprocal-bw"]], "ttnn.reduce_scatter": [[261, "ttnn-reduce-scatter"]], "ttnn.register_post_operation_hook": [[262, "ttnn-register-post-operation-hook"]], "ttnn.register_pre_operation_hook": [[263, "ttnn-register-pre-operation-hook"]], "ttnn.reglu": [[264, "ttnn-reglu"]], "ttnn.relu": [[265, "ttnn-relu"]], "ttnn.relu6": [[266, "ttnn-relu6"]], "ttnn.relu6_bw": [[267, "ttnn-relu6-bw"]], "ttnn.relu_bw": [[268, "ttnn-relu-bw"]], "ttnn.relu_max": [[269, "ttnn-relu-max"]], "ttnn.relu_min": [[270, "ttnn-relu-min"]], "ttnn.remainder": [[271, "ttnn-remainder"]], "ttnn.remainder_bw": [[272, "ttnn-remainder-bw"]], "ttnn.repeat": [[273, "ttnn-repeat"]], "ttnn.repeat_bw": [[274, "ttnn-repeat-bw"]], "ttnn.repeat_interleave": [[275, "ttnn-repeat-interleave"]], "ttnn.reshape": [[276, "ttnn-reshape"]], "ttnn.rms_norm": [[277, "ttnn-rms-norm"]], "ttnn.round": [[278, "ttnn-round"]], "ttnn.round_bw": [[279, "ttnn-round-bw"]], "ttnn.rpow": [[280, "ttnn-rpow"]], "ttnn.rpow_bw": [[281, "ttnn-rpow-bw"]], "ttnn.rsqrt": [[282, "ttnn-rsqrt"]], "ttnn.rsqrt_bw": [[283, "ttnn-rsqrt-bw"]], "ttnn.rsub": [[284, "ttnn-rsub"]], "ttnn.rsub_bw": [[285, "ttnn-rsub-bw"]], "ttnn.scatter": [[286, "ttnn-scatter"]], "ttnn.selu": [[287, "ttnn-selu"]], "ttnn.selu_bw": [[288, "ttnn-selu-bw"]], "ttnn.set_printoptions": [[289, "ttnn-set-printoptions"]], "ttnn.sigmoid": [[290, "ttnn-sigmoid"]], "ttnn.sigmoid_accurate": [[291, "ttnn-sigmoid-accurate"]], "ttnn.sigmoid_bw": [[292, "ttnn-sigmoid-bw"]], "ttnn.sign": [[293, "ttnn-sign"]], "ttnn.sign_bw": [[294, "ttnn-sign-bw"]], "ttnn.signbit": [[295, "ttnn-signbit"]], "ttnn.silu": [[296, "ttnn-silu"]], "ttnn.silu_bw": [[297, "ttnn-silu-bw"]], "ttnn.sin": [[298, "ttnn-sin"]], "ttnn.sin_bw": [[299, "ttnn-sin-bw"]], "ttnn.sinh": [[300, "ttnn-sinh"]], "ttnn.sinh_bw": [[301, "ttnn-sinh-bw"]], "ttnn.slice": [[302, "ttnn-slice"]], "ttnn.softmax": [[303, "ttnn-softmax"]], "ttnn.softplus": [[304, "ttnn-softplus"]], "ttnn.softplus_bw": [[305, "ttnn-softplus-bw"]], "ttnn.softshrink": [[306, "ttnn-softshrink"]], "ttnn.softshrink_bw": [[307, "ttnn-softshrink-bw"]], "ttnn.softsign": [[308, "ttnn-softsign"]], "ttnn.softsign_bw": [[309, "ttnn-softsign-bw"]], "ttnn.sqrt": [[310, "ttnn-sqrt"]], "ttnn.sqrt_bw": [[311, "ttnn-sqrt-bw"]], "ttnn.square": [[312, "ttnn-square"]], "ttnn.square_bw": [[313, "ttnn-square-bw"]], "ttnn.squared_difference": [[314, "ttnn-squared-difference"]], "ttnn.squared_difference_bw": [[315, "ttnn-squared-difference-bw"]], "ttnn.std": [[316, "ttnn-std"]], "ttnn.sub_bw": [[317, "ttnn-sub-bw"]], "ttnn.subalpha": [[318, "ttnn-subalpha"]], "ttnn.subalpha_bw": [[319, "ttnn-subalpha-bw"]], "ttnn.subtract": [[320, "ttnn-subtract"]], "ttnn.sum": [[321, "ttnn-sum"]], "ttnn.swiglu": [[322, "ttnn-swiglu"]], "ttnn.swish": [[323, "ttnn-swish"]], "ttnn.synchronize_device": [[324, "ttnn-synchronize-device"]], "ttnn.tan": [[325, "ttnn-tan"]], "ttnn.tan_bw": [[326, "ttnn-tan-bw"]], "ttnn.tanh": [[327, "ttnn-tanh"]], "ttnn.tanh_bw": [[328, "ttnn-tanh-bw"]], "ttnn.tanhshrink": [[329, "ttnn-tanhshrink"]], "ttnn.tanhshrink_bw": [[330, "ttnn-tanhshrink-bw"]], "ttnn.threshold": [[331, "ttnn-threshold"]], "ttnn.threshold_bw": [[332, "ttnn-threshold-bw"]], "ttnn.tilize": [[333, "ttnn-tilize"]], "ttnn.tilize_with_val_padding": [[334, "ttnn-tilize-with-val-padding"]], "ttnn.to_device": [[335, "ttnn-to-device"]], "ttnn.to_layout": [[336, "ttnn-to-layout"]], "ttnn.to_memory_config": [[337, "ttnn-to-memory-config"]], "ttnn.to_torch": [[338, "ttnn-to-torch"]], "ttnn.topk": [[339, "ttnn-topk"]], "ttnn.transformer.attention_softmax": [[340, "ttnn-transformer-attention-softmax"]], "ttnn.transformer.attention_softmax_": [[341, "ttnn-transformer-attention-softmax"]], "ttnn.transformer.concatenate_heads": [[342, "ttnn-transformer-concatenate-heads"]], "ttnn.transformer.scaled_dot_product_attention": [[343, "ttnn-transformer-scaled-dot-product-attention"]], "ttnn.transformer.scaled_dot_product_attention_decode": [[344, "ttnn-transformer-scaled-dot-product-attention-decode"]], "ttnn.transformer.split_query_key_value_and_split_heads": [[345, "ttnn-transformer-split-query-key-value-and-split-heads"]], "ttnn.tril": [[346, "ttnn-tril"]], "ttnn.triu": [[347, "ttnn-triu"]], "ttnn.trunc": [[348, "ttnn-trunc"]], "ttnn.trunc_bw": [[349, "ttnn-trunc-bw"]], "ttnn.unary_chain": [[350, "ttnn-unary-chain"]], "ttnn.untilize": [[351, "ttnn-untilize"]], "ttnn.untilize_with_halo_v2": [[352, "ttnn-untilize-with-halo-v2"]], "ttnn.untilize_with_unpadding": [[353, "ttnn-untilize-with-unpadding"]], "ttnn.upsample": [[354, "ttnn-upsample"]], "ttnn.var": [[355, "ttnn-var"]], "ttnn.where": [[356, "ttnn-where"]], "ttnn.where_bw": [[357, "ttnn-where-bw"]], "ttnn.xlogy": [[358, "ttnn-xlogy"]], "ttnn.xlogy_bw": [[359, "ttnn-xlogy-bw"]], "ttnn.zeros": [[360, "ttnn-zeros"]], "ttnn.zeros_like": [[361, "ttnn-zeros-like"]], "Converting torch Model to ttnn": [[362, "converting-torch-model-to-ttnn"]], "Step 1 - Rewriting the Model": [[362, "step-1-rewriting-the-model"]], "Step 2 - Switching to ttnn Operations": [[362, "step-2-switching-to-ttnn-operations"]], "Step 3 - Optimizing the Model": [[362, "step-3-optimizing-the-model"]], "More examples": [[362, "more-examples"]], "Building and Uplifting Demos": [[363, "building-and-uplifting-demos"]], "Examples of Tensor and TT-LIB Use": [[364, "examples-of-tensor-and-tt-lib-use"]], "Run one OP from TT-LIB on TT Accelerator device": [[364, "run-one-op-from-tt-lib-on-tt-accelerator-device"]], "Run TT-LIB and PyTorch OPs": [[364, "run-tt-lib-and-pytorch-ops"]], "Tensors with odd size of last dim": [[364, "tensors-with-odd-size-of-last-dim"]], "Dependencies": [[365, "dependencies"]], "Tensor": [[366, "tensor"], [372, "tensor"]], "Overview": [[366, "overview"], [367, "overview"]], "Tensor Storage": [[366, "tensor-storage"]], "Tensor API": [[366, "tensor-api"]], "MemoryConfig": [[366, "memoryconfig"]], "Examples of converting between PyTorch Tensor and TT Tensor": [[366, "examples-of-converting-between-pytorch-tensor-and-tt-tensor"]], "Converting a PyTorch Tensor to a TT Tensor": [[366, "converting-a-pytorch-tensor-to-a-tt-tensor"]], "Converting a TT Tensor to a PyTorch Tensor": [[366, "converting-a-tt-tensor-to-a-pytorch-tensor"]], "TT-LIB": [[367, "tt-lib"]], "Operation Infrastructure": [[367, "operation-infrastructure"]], "New Device Operation": [[367, "new-device-operation"]], "New Device Operation with a member": [[367, "new-device-operation-with-a-member"]], "New Device Operation with Optional Input Tensors": [[367, "new-device-operation-with-optional-input-tensors"]], "New Device Operation with Optional Output Tensors": [[367, "new-device-operation-with-optional-output-tensors"]], "Profiler": [[367, "profiler"]], "Fast Dispatch": [[367, "fast-dispatch"]], "Program Caching": [[367, "program-caching"]], "Logs": [[367, "logs"]], "TT-LIB API through tt_lib": [[367, "tt-lib-api-through-tt-lib"]], "Primary Operations": [[367, "primary-operations"]], "Enums": [[367, "enums"]], "Fallback Operations": [[367, "fallback-operations"]], "Experimental Operations": [[367, "experimental-operations"]], "Fused Operations from tt_lib Mini-Graph Library": [[367, "fused-operations-from-tt-lib-mini-graph-library"]], "Complex Operations (Type 2)": [[367, "complex-operations-type-2"]], "1. Install and Build": [[368, "install-and-build"]], "2. Explore our model demos": [[368, "explore-our-model-demos"]], "3. TT-NN Tutorial: Multi-Head Attention (Simple)": [[368, "tt-nn-tutorial-multi-head-attention-simple"]], "4. TT-NN Tutorial: Multi-Head Attention (Optimized)": [[368, "tt-nn-tutorial-multi-head-attention-optimized"]], "Where to go from here": [[368, "where-to-go-from-here"]], "Install": [[369, "install"]], "Installation Steps": [[369, "installation-steps"]], "Step 1. Driver & Firmware": [[369, "step-1-driver-firmware"]], "Step 2. System-level dependencies": [[369, "step-2-system-level-dependencies"]], "Step 3. Install and start using TT-NN and TT-Metalium!": [[369, "step-3-install-and-start-using-tt-nn-and-tt-metalium"]], "Option 1: From source": [[369, "option-1-from-source"]], "Option 2: From wheel": [[369, "option-2-from-wheel"]], "Option 3: From Docker Release Image": [[369, "option-3-from-docker-release-image"]], "Step 5. (Optional) Software dependencies for codebase contributions": [[369, "step-5-optional-software-dependencies-for-codebase-contributions"]], "Onboarding New Functionality": [[370, "onboarding-new-functionality"]], "Profiling ttnn Operations": [[371, "profiling-ttnn-operations"]], "Perf Report Headers": [[371, "perf-report-headers"]], "profile_this description": [[371, "profile-this-description"]], "Shape": [[372, "shape"]], "Layout": [[372, "layout"], [381, "Layout"]], "Data Type": [[372, "data-type"], [381, "Data-Type"]], "Required Width Multiples for Data Types": [[372, "id5"]], "Limitation of BFLOAT8_B": [[372, "limitation-of-bfloat8-b"]], "Storage": [[372, "storage"]], "Tensor Sharding": [[372, "tensor-sharding"]], "Tutorials": [[373, "id1"]], "Graphing Torch DiT_XL_2 With TTNN": [[374, "graphing-torch-dit-xl-2-with-ttnn"]], "Matmul Operation": [[375, "matmul-operation"]], "Multi-Head Attention": [[376, "multi-head-attention"], [383, "Multi-Head-Attention"]], "ttnn Profiling": [[377, "ttnn-profiling"]], "Resnet Basic Block": [[378, "resnet-basic-block"]], "Tensor and Add Operation": [[379, "tensor-and-add-operation"], [381, "Tensor-and-Add-Operation"]], "ttnn Tracer": [[380, "ttnn-tracer"]], "Creating a tensor": [[381, "Creating-a-tensor"]], "Host Storage: Borrowed vs Owned": [[381, "Host-Storage:-Borrowed-vs-Owned"]], "Device storage": [[381, "Device-storage"]], "Open the device": [[381, "Open-the-device"]], "Initialize tensors a and b with random values using torch": [[381, "Initialize-tensors-a-and-b-with-random-values-using-torch"], [382, "Initialize-tensors-a-and-b-with-random-values-using-torch"]], "Add tensor a and b": [[381, "Add-tensor-a-and-b"]], "Inspect the output tensor of the add in ttnn": [[381, "Inspect-the-output-tensor-of-the-add-in-ttnn"]], "Convert to torch and inspect the attributes of the torch tensor": [[381, "Convert-to-torch-and-inspect-the-attributes-of-the-torch-tensor"]], "Close the device": [[381, "Close-the-device"], [382, "Close-the-device"], [383, "Close-the-device"]], "Enable program cache": [[382, "Enable-program-cache"], [383, "Enable-program-cache"]], "Configuration": [[382, "Configuration"], [383, "Configuration"]], "Matrix multiply tensor a and b": [[382, "Matrix-multiply-tensor-a-and-b"]], "Inspect the layout of matrix multiplication output": [[382, "Inspect-the-layout-of-matrix-multiplication-output"]], "Inspect the result of the matrix multiplication": [[382, "Inspect-the-result-of-the-matrix-multiplication"]], "Matrix multiply tensor a and b by using more performant config": [[382, "Matrix-multiply-tensor-a-and-b-by-using-more-performant-config"]], "Write Multi-Head Attention using ttnn": [[383, "Write-Multi-Head-Attention-using-ttnn"]], "Initialize activations and weights using torch": [[383, "Initialize-activations-and-weights-using-torch"]], "Convert activations and weights to ttnn": [[383, "Convert-activations-and-weights-to-ttnn"]], "Run the first iteration of Multi-Head Attention": [[383, "Run-the-first-iteration-of-Multi-Head-Attention"]], "Run a subsequent iteration of Multi-Head Attention": [[383, "Run-a-subsequent-iteration-of-Multi-Head-Attention"]], "Write optimized version of Multi-Head Attention": [[383, "Write-optimized-version-of-Multi-Head-Attention"]], "Pre-process the parameters of the optimized model": [[383, "Pre-process-the-parameters-of-the-optimized-model"]], "Run the first iteration of the optimized Multi-Head Attention": [[383, "Run-the-first-iteration-of-the-optimized-Multi-Head-Attention"]], "Run a subsequent iteration of the optimized Multi-Head Attention": [[383, "Run-a-subsequent-iteration-of-the-optimized-Multi-Head-Attention"]], "Check that the output of the optimized version matches the output of the original implementation": [[383, "Check-that-the-output-of-the-optimized-version-matches-the-output-of-the-original-implementation"]], "Tracing ttnn operations and torch modules/functions": [[384, "Tracing-ttnn-operations-and-torch-modules/functions"]], "Trace torch functions": [[384, "Trace-torch-functions"]], "Trace torch functions and ttnn operations": [[384, "Trace-torch-functions-and-ttnn-operations"]], "Trace torch functions, torch modules and ttnn operations": [[384, "Trace-torch-functions,-torch-modules-and-ttnn-operations"]], "Trace models written using ttnn": [[384, "Trace-models-written-using-ttnn"]], "Profiling ttnn operations": [[385, "Profiling-ttnn-operations"]], "Resnet Block": [[386, "Resnet-Block"]], "Torch Module (from torchvision)": [[386, "Torch-Module-(from-torchvision)"]], "Create torch module and preprocess it to get ttnn parameters": [[386, "Create-torch-module-and-preprocess-it-to-get-ttnn-parameters"]], "Display the parameters of the module": [[386, "Display-the-parameters-of-the-module"]], "Display the traced torch graph": [[386, "Display-the-traced-torch-graph"]], "Implement ttnn version of the module. Pass in the parameters into the constructor.": [[386, "Implement-ttnn-version-of-the-module.-Pass-in-the-parameters-into-the-constructor."]], "Run ttnn module and display the traced graph": [[386, "Run-ttnn-module-and-display-the-traced-graph"]], "Build a graph of a pytorch based model": [[387, "Build-a-graph-of-a-pytorch-based-model"]], "Clone the library from https://github.com/facebookresearch/DiT.git": [[387, "Clone-the-library-from-https://github.com/facebookresearch/DiT.git"]], "Download DiT-XL/2 Models": [[387, "Download-DiT-XL/2-Models"]], "Sample from Pre-trained DiT Models and build the graph": [[387, "Sample-from-Pre-trained-DiT-Models-and-build-the-graph"]], "Display the graph": [[387, "Display-the-graph"]], "Using ttnn": [[388, "using-ttnn"]], "Basic Examples": [[388, "basic-examples"]], "1. Converting from and to torch tensor": [[388, "converting-from-and-to-torch-tensor"]], "2. Running an operation on the device": [[388, "running-an-operation-on-the-device"]], "3. Using __getitem__ to slice the tensor": [[388, "using-getitem-to-slice-the-tensor"]], "4. Enabling program cache": [[388, "enabling-program-cache"]], "5. Debugging intermediate tensors": [[388, "debugging-intermediate-tensors"]], "6. Tracing the graph of operations": [[388, "tracing-the-graph-of-operations"]], "7. Using tt_lib operation in ttnn": [[388, "using-tt-lib-operation-in-ttnn"]], "8. Enabling Logging": [[388, "enabling-logging"]], "9. Supported Python Operators": [[388, "supported-python-operators"]], "10. Changing the string representation of the tensor": [[388, "changing-the-string-representation-of-the-tensor"]], "11. Visualize using Web Browser": [[388, "visualize-using-web-browser"]], "12. Register pre- and/or post-operation hooks": [[388, "register-pre-and-or-post-operation-hooks"]], "13. Query all operations": [[388, "query-all-operations"]], "14. Falling back to torch": [[388, "falling-back-to-torch"]], "15. Capturing graph of C++ functions, buffer allocations, etc": [[388, "capturing-graph-of-c-functions-buffer-allocations-etc"]]}, "indexentries": {"getdefaultdevice() (in module ttnn)": [[8, "ttnn.GetDefaultDevice"]], "setdefaultdevice() (in module ttnn)": [[9, "ttnn.SetDefaultDevice"]], "abs() (in module ttnn)": [[10, "ttnn.abs"]], "abs_bw() (in module ttnn)": [[11, "ttnn.abs_bw"]], "acos() (in module ttnn)": [[12, "ttnn.acos"]], "acos_bw() (in module ttnn)": [[13, "ttnn.acos_bw"]], "acosh() (in module ttnn)": [[14, "ttnn.acosh"]], "acosh_bw() (in module ttnn)": [[15, "ttnn.acosh_bw"]], "add() (in module ttnn)": [[16, "ttnn.add"]], "add_bw() (in module ttnn)": [[17, "ttnn.add_bw"]], "addalpha() (in module ttnn)": [[18, "ttnn.addalpha"]], "addalpha_bw() (in module ttnn)": [[19, "ttnn.addalpha_bw"]], "addcdiv() (in module ttnn)": [[20, "ttnn.addcdiv"]], "addcdiv_bw() (in module ttnn)": [[21, "ttnn.addcdiv_bw"]], "addcmul() (in module ttnn)": [[22, "ttnn.addcmul"]], "addcmul_bw() (in module ttnn)": [[23, "ttnn.addcmul_bw"]], "all_gather() (in module ttnn)": [[24, "ttnn.all_gather"]], "angle() (in module ttnn)": [[25, "ttnn.angle"]], "angle_bw() (in module ttnn)": [[26, "ttnn.angle_bw"]], "arange() (in module ttnn)": [[27, "ttnn.arange"]], "argmax() (in module ttnn)": [[28, "ttnn.argmax"]], "as_tensor() (in module ttnn)": [[29, "ttnn.as_tensor"]], "asin() (in module ttnn)": [[30, "ttnn.asin"]], "asin_bw() (in module ttnn)": [[31, "ttnn.asin_bw"]], "asinh() (in module ttnn)": [[32, "ttnn.asinh"]], "asinh_bw() (in module ttnn)": [[33, "ttnn.asinh_bw"]], "assign_bw() (in module ttnn)": [[34, "ttnn.assign_bw"]], "atan() (in module ttnn)": [[35, "ttnn.atan"]], "atan2() (in module ttnn)": [[36, "ttnn.atan2"]], "atan2_bw() (in module ttnn)": [[37, "ttnn.atan2_bw"]], "atan_bw() (in module ttnn)": [[38, "ttnn.atan_bw"]], "atanh() (in module ttnn)": [[39, "ttnn.atanh"]], "atanh_bw() (in module ttnn)": [[40, "ttnn.atanh_bw"]], "batch_norm() (in module ttnn)": [[41, "ttnn.batch_norm"]], "bias_gelu_bw() (in module ttnn)": [[42, "ttnn.bias_gelu_bw"]], "bitwise_and() (in module ttnn)": [[43, "ttnn.bitwise_and"]], "bitwise_left_shift() (in module ttnn)": [[44, "ttnn.bitwise_left_shift"]], "bitwise_not() (in module ttnn)": [[45, "ttnn.bitwise_not"]], "bitwise_or() (in module ttnn)": [[46, "ttnn.bitwise_or"]], "bitwise_right_shift() (in module ttnn)": [[47, "ttnn.bitwise_right_shift"]], "bitwise_xor() (in module ttnn)": [[48, "ttnn.bitwise_xor"]], "cbrt() (in module ttnn)": [[49, "ttnn.cbrt"]], "ceil() (in module ttnn)": [[50, "ttnn.ceil"]], "ceil_bw() (in module ttnn)": [[51, "ttnn.ceil_bw"]], "celu() (in module ttnn)": [[52, "ttnn.celu"]], "celu_bw() (in module ttnn)": [[53, "ttnn.celu_bw"]], "clamp() (in module ttnn)": [[54, "ttnn.clamp"]], "clamp_bw() (in module ttnn)": [[55, "ttnn.clamp_bw"]], "clip() (in module ttnn)": [[56, "ttnn.clip"]], "clip_bw() (in module ttnn)": [[57, "ttnn.clip_bw"]], "clone() (in module ttnn)": [[58, "ttnn.clone"]], "close_device() (in module ttnn)": [[59, "ttnn.close_device"]], "concat() (in module ttnn)": [[60, "ttnn.concat"]], "concat_bw() (in module ttnn)": [[61, "ttnn.concat_bw"]], "conj() (in module ttnn)": [[62, "ttnn.conj"]], "conj_bw() (in module ttnn)": [[63, "ttnn.conj_bw"]], "cos() (in module ttnn)": [[64, "ttnn.cos"]], "cos_bw() (in module ttnn)": [[65, "ttnn.cos_bw"]], "cosh() (in module ttnn)": [[66, "ttnn.cosh"]], "cosh_bw() (in module ttnn)": [[67, "ttnn.cosh_bw"]], "create_sharded_memory_config() (in module ttnn)": [[68, "ttnn.create_sharded_memory_config"]], "deallocate() (in module ttnn)": [[69, "ttnn.deallocate"]], "deg2rad() (in module ttnn)": [[70, "ttnn.deg2rad"]], "deg2rad_bw() (in module ttnn)": [[71, "ttnn.deg2rad_bw"]], "digamma() (in module ttnn)": [[72, "ttnn.digamma"]], "digamma_bw() (in module ttnn)": [[73, "ttnn.digamma_bw"]], "div() (in module ttnn)": [[74, "ttnn.div"]], "div_bw() (in module ttnn)": [[75, "ttnn.div_bw"]], "div_no_nan() (in module ttnn)": [[76, "ttnn.div_no_nan"]], "div_no_nan_bw() (in module ttnn)": [[77, "ttnn.div_no_nan_bw"]], "downsample() (in module ttnn)": [[78, "ttnn.downsample"]], "dump_tensor() (in module ttnn)": [[79, "ttnn.dump_tensor"]], "elu() (in module ttnn)": [[80, "ttnn.elu"]], "elu_bw() (in module ttnn)": [[81, "ttnn.elu_bw"]], "embedding() (in module ttnn)": [[82, "ttnn.embedding"]], "embedding_bw() (in module ttnn)": [[83, "ttnn.embedding_bw"]], "empty() (in module ttnn)": [[84, "ttnn.empty"]], "empty_like() (in module ttnn)": [[85, "ttnn.empty_like"]], "eq() (in module ttnn)": [[86, "ttnn.eq"]], "eq_() (in module ttnn)": [[87, "ttnn.eq_"]], "eqz() (in module ttnn)": [[88, "ttnn.eqz"]], "erf() (in module ttnn)": [[89, "ttnn.erf"]], "erf_bw() (in module ttnn)": [[90, "ttnn.erf_bw"]], "erfc() (in module ttnn)": [[91, "ttnn.erfc"]], "erfc_bw() (in module ttnn)": [[92, "ttnn.erfc_bw"]], "erfinv() (in module ttnn)": [[93, "ttnn.erfinv"]], "erfinv_bw() (in module ttnn)": [[94, "ttnn.erfinv_bw"]], "exp() (in module ttnn)": [[95, "ttnn.exp"]], "exp2() (in module ttnn)": [[96, "ttnn.exp2"]], "exp2_bw() (in module ttnn)": [[97, "ttnn.exp2_bw"]], "exp_bw() (in module ttnn)": [[98, "ttnn.exp_bw"]], "all_reduce() (in module ttnn.experimental)": [[99, "ttnn.experimental.all_reduce"]], "dropout() (in module ttnn.experimental)": [[100, "ttnn.experimental.dropout"]], "rotary_embedding() (in module ttnn.experimental)": [[101, "ttnn.experimental.rotary_embedding"]], "expm1() (in module ttnn)": [[102, "ttnn.expm1"]], "expm1_bw() (in module ttnn)": [[103, "ttnn.expm1_bw"]], "fill() (in module ttnn)": [[104, "ttnn.fill"]], "fill_bw() (in module ttnn)": [[105, "ttnn.fill_bw"]], "fill_ones_rm() (in module ttnn)": [[106, "ttnn.fill_ones_rm"]], "fill_rm() (in module ttnn)": [[107, "ttnn.fill_rm"]], "fill_zero_bw() (in module ttnn)": [[108, "ttnn.fill_zero_bw"]], "floor() (in module ttnn)": [[109, "ttnn.floor"]], "floor_bw() (in module ttnn)": [[110, "ttnn.floor_bw"]], "floor_div() (in module ttnn)": [[111, "ttnn.floor_div"]], "fmod() (in module ttnn)": [[112, "ttnn.fmod"]], "fmod_bw() (in module ttnn)": [[113, "ttnn.fmod_bw"]], "format_input_tensor() (in module ttnn)": [[114, "ttnn.format_input_tensor"]], "format_output_tensor() (in module ttnn)": [[115, "ttnn.format_output_tensor"]], "frac() (in module ttnn)": [[116, "ttnn.frac"]], "frac_bw() (in module ttnn)": [[117, "ttnn.frac_bw"]], "from_device() (in module ttnn)": [[118, "ttnn.from_device"]], "from_torch() (in module ttnn)": [[119, "ttnn.from_torch"]], "full() (in module ttnn)": [[120, "ttnn.full"]], "full_like() (in module ttnn)": [[121, "ttnn.full_like"]], "gcd() (in module ttnn)": [[122, "ttnn.gcd"]], "ge() (in module ttnn)": [[123, "ttnn.ge"]], "ge_() (in module ttnn)": [[124, "ttnn.ge_"]], "geglu() (in module ttnn)": [[125, "ttnn.geglu"]], "gelu() (in module ttnn)": [[126, "ttnn.gelu"]], "gelu_bw() (in module ttnn)": [[127, "ttnn.gelu_bw"]], "gez() (in module ttnn)": [[128, "ttnn.gez"]], "global_avg_pool2d() (in module ttnn)": [[129, "ttnn.global_avg_pool2d"]], "glu() (in module ttnn)": [[130, "ttnn.glu"]], "group_norm() (in module ttnn)": [[131, "ttnn.group_norm"]], "gt() (in module ttnn)": [[132, "ttnn.gt"]], "gt_() (in module ttnn)": [[133, "ttnn.gt_"]], "gtz() (in module ttnn)": [[134, "ttnn.gtz"]], "hardshrink() (in module ttnn)": [[135, "ttnn.hardshrink"]], "hardshrink_bw() (in module ttnn)": [[136, "ttnn.hardshrink_bw"]], "hardsigmoid() (in module ttnn)": [[137, "ttnn.hardsigmoid"]], "hardsigmoid_bw() (in module ttnn)": [[138, "ttnn.hardsigmoid_bw"]], "hardswish() (in module ttnn)": [[139, "ttnn.hardswish"]], "hardswish_bw() (in module ttnn)": [[140, "ttnn.hardswish_bw"]], "hardtanh() (in module ttnn)": [[141, "ttnn.hardtanh"]], "hardtanh_bw() (in module ttnn)": [[142, "ttnn.hardtanh_bw"]], "heaviside() (in module ttnn)": [[143, "ttnn.heaviside"]], "hypot() (in module ttnn)": [[144, "ttnn.hypot"]], "hypot_bw() (in module ttnn)": [[145, "ttnn.hypot_bw"]], "i0() (in module ttnn)": [[146, "ttnn.i0"]], "i0_bw() (in module ttnn)": [[147, "ttnn.i0_bw"]], "identity() (in module ttnn)": [[148, "ttnn.identity"]], "imag() (in module ttnn)": [[149, "ttnn.imag"]], "imag_bw() (in module ttnn)": [[150, "ttnn.imag_bw"]], "indexed_fill() (in module ttnn)": [[151, "ttnn.indexed_fill"]], "is_imag() (in module ttnn)": [[152, "ttnn.is_imag"]], "is_real() (in module ttnn)": [[153, "ttnn.is_real"]], "isclose() (in module ttnn)": [[154, "ttnn.isclose"]], "isfinite() (in module ttnn)": [[155, "ttnn.isfinite"]], "isinf() (in module ttnn)": [[156, "ttnn.isinf"]], "isnan() (in module ttnn)": [[157, "ttnn.isnan"]], "isneginf() (in module ttnn)": [[158, "ttnn.isneginf"]], "isposinf() (in module ttnn)": [[159, "ttnn.isposinf"]], "fill_cache_for_user_() (in module ttnn.kv_cache)": [[160, "ttnn.kv_cache.fill_cache_for_user_"]], "update_cache_for_token_() (in module ttnn.kv_cache)": [[161, "ttnn.kv_cache.update_cache_for_token_"]], "l1_loss() (in module ttnn)": [[162, "ttnn.l1_loss"]], "layer_norm() (in module ttnn)": [[163, "ttnn.layer_norm"]], "lcm() (in module ttnn)": [[164, "ttnn.lcm"]], "ldexp() (in module ttnn)": [[165, "ttnn.ldexp"]], "ldexp_bw() (in module ttnn)": [[166, "ttnn.ldexp_bw"]], "le() (in module ttnn)": [[167, "ttnn.le"]], "le_() (in module ttnn)": [[168, "ttnn.le_"]], "leaky_relu() (in module ttnn)": [[169, "ttnn.leaky_relu"]], "leaky_relu_bw() (in module ttnn)": [[170, "ttnn.leaky_relu_bw"]], "lerp() (in module ttnn)": [[171, "ttnn.lerp"]], "lerp_bw() (in module ttnn)": [[172, "ttnn.lerp_bw"]], "lez() (in module ttnn)": [[173, "ttnn.lez"]], "lgamma() (in module ttnn)": [[174, "ttnn.lgamma"]], "lgamma_bw() (in module ttnn)": [[175, "ttnn.lgamma_bw"]], "linear() (in module ttnn)": [[176, "ttnn.linear"]], "load_tensor() (in module ttnn)": [[177, "ttnn.load_tensor"]], "log() (in module ttnn)": [[178, "ttnn.log"]], "log10() (in module ttnn)": [[179, "ttnn.log10"]], "log10_bw() (in module ttnn)": [[180, "ttnn.log10_bw"]], "log1p() (in module ttnn)": [[181, "ttnn.log1p"]], "log1p_bw() (in module ttnn)": [[182, "ttnn.log1p_bw"]], "log2() (in module ttnn)": [[183, "ttnn.log2"]], "log2_bw() (in module ttnn)": [[184, "ttnn.log2_bw"]], "log_bw() (in module ttnn)": [[185, "ttnn.log_bw"]], "log_sigmoid() (in module ttnn)": [[186, "ttnn.log_sigmoid"]], "log_sigmoid_bw() (in module ttnn)": [[187, "ttnn.log_sigmoid_bw"]], "logaddexp() (in module ttnn)": [[188, "ttnn.logaddexp"]], "logaddexp2() (in module ttnn)": [[189, "ttnn.logaddexp2"]], "logaddexp2_bw() (in module ttnn)": [[190, "ttnn.logaddexp2_bw"]], "logaddexp_bw() (in module ttnn)": [[191, "ttnn.logaddexp_bw"]], "logical_and() (in module ttnn)": [[192, "ttnn.logical_and"]], "logical_and_() (in module ttnn)": [[193, "ttnn.logical_and_"]], "logical_not() (in module ttnn)": [[194, "ttnn.logical_not"]], "logical_not_() (in module ttnn)": [[195, "ttnn.logical_not_"]], "logical_or() (in module ttnn)": [[196, "ttnn.logical_or"]], "logical_or_() (in module ttnn)": [[197, "ttnn.logical_or_"]], "logical_xor() (in module ttnn)": [[198, "ttnn.logical_xor"]], "logical_xor_() (in module ttnn)": [[199, "ttnn.logical_xor_"]], "logit() (in module ttnn)": [[200, "ttnn.logit"]], "logit_bw() (in module ttnn)": [[201, "ttnn.logit_bw"]], "logiteps_bw() (in module ttnn)": [[202, "ttnn.logiteps_bw"]], "lt() (in module ttnn)": [[203, "ttnn.lt"]], "lt_() (in module ttnn)": [[204, "ttnn.lt_"]], "ltz() (in module ttnn)": [[205, "ttnn.ltz"]], "mac() (in module ttnn)": [[206, "ttnn.mac"]], "manage_device() (in module ttnn)": [[207, "ttnn.manage_device"]], "matmul() (in module ttnn)": [[208, "ttnn.matmul"]], "max() (in module ttnn)": [[209, "ttnn.max"]], "max_bw() (in module ttnn)": [[210, "ttnn.max_bw"]], "max_pool2d() (in module ttnn)": [[211, "ttnn.max_pool2d"]], "maximum() (in module ttnn)": [[212, "ttnn.maximum"]], "mean() (in module ttnn)": [[213, "ttnn.mean"]], "min() (in module ttnn)": [[214, "ttnn.min"]], "min_bw() (in module ttnn)": [[215, "ttnn.min_bw"]], "minimum() (in module ttnn)": [[216, "ttnn.minimum"]], "mish() (in module ttnn)": [[217, "ttnn.mish"]], "preprocess_model() (in module ttnn.model_preprocessing)": [[218, "ttnn.model_preprocessing.preprocess_model"]], "preprocess_model_parameters() (in module ttnn.model_preprocessing)": [[219, "ttnn.model_preprocessing.preprocess_model_parameters"]], "moreh_sum() (in module ttnn)": [[220, "ttnn.moreh_sum"]], "mse_loss() (in module ttnn)": [[221, "ttnn.mse_loss"]], "mul_bw() (in module ttnn)": [[222, "ttnn.mul_bw"]], "multigammaln() (in module ttnn)": [[223, "ttnn.multigammaln"]], "multigammaln_bw() (in module ttnn)": [[224, "ttnn.multigammaln_bw"]], "multiply() (in module ttnn)": [[225, "ttnn.multiply"]], "ne() (in module ttnn)": [[226, "ttnn.ne"]], "ne_() (in module ttnn)": [[227, "ttnn.ne_"]], "neg() (in module ttnn)": [[228, "ttnn.neg"]], "neg_bw() (in module ttnn)": [[229, "ttnn.neg_bw"]], "nextafter() (in module ttnn)": [[230, "ttnn.nextafter"]], "nez() (in module ttnn)": [[231, "ttnn.nez"]], "nonzero() (in module ttnn)": [[232, "ttnn.nonzero"]], "normalize_global() (in module ttnn)": [[233, "ttnn.normalize_global"]], "normalize_hw() (in module ttnn)": [[234, "ttnn.normalize_hw"]], "ones() (in module ttnn)": [[235, "ttnn.ones"]], "ones_like() (in module ttnn)": [[236, "ttnn.ones_like"]], "open_device() (in module ttnn)": [[237, "ttnn.open_device"]], "outer() (in module ttnn)": [[238, "ttnn.outer"]], "pad() (in module ttnn)": [[239, "ttnn.pad"]], "pad_to_tile_shape() (in module ttnn)": [[240, "ttnn.pad_to_tile_shape"]], "permute() (in module ttnn)": [[241, "ttnn.permute"]], "polar() (in module ttnn)": [[242, "ttnn.polar"]], "polar_bw() (in module ttnn)": [[243, "ttnn.polar_bw"]], "polygamma() (in module ttnn)": [[244, "ttnn.polygamma"]], "polygamma_bw() (in module ttnn)": [[245, "ttnn.polygamma_bw"]], "polyval() (in module ttnn)": [[246, "ttnn.polyval"]], "pow() (in module ttnn)": [[247, "ttnn.pow"]], "pow_bw() (in module ttnn)": [[248, "ttnn.pow_bw"]], "prelu() (in module ttnn)": [[249, "ttnn.prelu"]], "prod() (in module ttnn)": [[250, "ttnn.prod"]], "prod_bw() (in module ttnn)": [[251, "ttnn.prod_bw"]], "rad2deg() (in module ttnn)": [[252, "ttnn.rad2deg"]], "rad2deg_bw() (in module ttnn)": [[253, "ttnn.rad2deg_bw"]], "rdiv() (in module ttnn)": [[254, "ttnn.rdiv"]], "rdiv_bw() (in module ttnn)": [[255, "ttnn.rdiv_bw"]], "real() (in module ttnn)": [[256, "ttnn.real"]], "real_bw() (in module ttnn)": [[257, "ttnn.real_bw"]], "reallocate() (in module ttnn)": [[258, "ttnn.reallocate"]], "reciprocal() (in module ttnn)": [[259, "ttnn.reciprocal"]], "reciprocal_bw() (in module ttnn)": [[260, "ttnn.reciprocal_bw"]], "reduce_scatter() (in module ttnn)": [[261, "ttnn.reduce_scatter"]], "register_post_operation_hook() (in module ttnn)": [[262, "ttnn.register_post_operation_hook"]], "register_pre_operation_hook() (in module ttnn)": [[263, "ttnn.register_pre_operation_hook"]], "reglu() (in module ttnn)": [[264, "ttnn.reglu"]], "relu() (in module ttnn)": [[265, "ttnn.relu"]], "relu6() (in module ttnn)": [[266, "ttnn.relu6"]], "relu6_bw() (in module ttnn)": [[267, "ttnn.relu6_bw"]], "relu_bw() (in module ttnn)": [[268, "ttnn.relu_bw"]], "relu_max() (in module ttnn)": [[269, "ttnn.relu_max"]], "relu_min() (in module ttnn)": [[270, "ttnn.relu_min"]], "remainder() (in module ttnn)": [[271, "ttnn.remainder"]], "remainder_bw() (in module ttnn)": [[272, "ttnn.remainder_bw"]], "repeat() (in module ttnn)": [[273, "ttnn.repeat"]], "repeat_bw() (in module ttnn)": [[274, "ttnn.repeat_bw"]], "repeat_interleave() (in module ttnn)": [[275, "ttnn.repeat_interleave"]], "reshape() (in module ttnn)": [[276, "ttnn.reshape"]], "rms_norm() (in module ttnn)": [[277, "ttnn.rms_norm"]], "round() (in module ttnn)": [[278, "ttnn.round"]], "round_bw() (in module ttnn)": [[279, "ttnn.round_bw"]], "rpow() (in module ttnn)": [[280, "ttnn.rpow"]], "rpow_bw() (in module ttnn)": [[281, "ttnn.rpow_bw"]], "rsqrt() (in module ttnn)": [[282, "ttnn.rsqrt"]], "rsqrt_bw() (in module ttnn)": [[283, "ttnn.rsqrt_bw"]], "rsub() (in module ttnn)": [[284, "ttnn.rsub"]], "rsub_bw() (in module ttnn)": [[285, "ttnn.rsub_bw"]], "scatter() (in module ttnn)": [[286, "ttnn.scatter"]], "selu() (in module ttnn)": [[287, "ttnn.selu"]], "selu_bw() (in module ttnn)": [[288, "ttnn.selu_bw"]], "set_printoptions() (in module ttnn)": [[289, "ttnn.set_printoptions"]], "sigmoid() (in module ttnn)": [[290, "ttnn.sigmoid"]], "sigmoid_accurate() (in module ttnn)": [[291, "ttnn.sigmoid_accurate"]], "sigmoid_bw() (in module ttnn)": [[292, "ttnn.sigmoid_bw"]], "sign() (in module ttnn)": [[293, "ttnn.sign"]], "sign_bw() (in module ttnn)": [[294, "ttnn.sign_bw"]], "signbit() (in module ttnn)": [[295, "ttnn.signbit"]], "silu() (in module ttnn)": [[296, "ttnn.silu"]], "silu_bw() (in module ttnn)": [[297, "ttnn.silu_bw"]], "sin() (in module ttnn)": [[298, "ttnn.sin"]], "sin_bw() (in module ttnn)": [[299, "ttnn.sin_bw"]], "sinh() (in module ttnn)": [[300, "ttnn.sinh"]], "sinh_bw() (in module ttnn)": [[301, "ttnn.sinh_bw"]], "slice() (in module ttnn)": [[302, "ttnn.slice"]], "softmax() (in module ttnn)": [[303, "ttnn.softmax"]], "softplus() (in module ttnn)": [[304, "ttnn.softplus"]], "softplus_bw() (in module ttnn)": [[305, "ttnn.softplus_bw"]], "softshrink() (in module ttnn)": [[306, "ttnn.softshrink"]], "softshrink_bw() (in module ttnn)": [[307, "ttnn.softshrink_bw"]], "softsign() (in module ttnn)": [[308, "ttnn.softsign"]], "softsign_bw() (in module ttnn)": [[309, "ttnn.softsign_bw"]], "sqrt() (in module ttnn)": [[310, "ttnn.sqrt"]], "sqrt_bw() (in module ttnn)": [[311, "ttnn.sqrt_bw"]], "square() (in module ttnn)": [[312, "ttnn.square"]], "square_bw() (in module ttnn)": [[313, "ttnn.square_bw"]], "squared_difference() (in module ttnn)": [[314, "ttnn.squared_difference"]], "squared_difference_bw() (in module ttnn)": [[315, "ttnn.squared_difference_bw"]], "std() (in module ttnn)": [[316, "ttnn.std"]], "sub_bw() (in module ttnn)": [[317, "ttnn.sub_bw"]], "subalpha() (in module ttnn)": [[318, "ttnn.subalpha"]], "subalpha_bw() (in module ttnn)": [[319, "ttnn.subalpha_bw"]], "subtract() (in module ttnn)": [[320, "ttnn.subtract"]], "sum() (in module ttnn)": [[321, "ttnn.sum"]], "swiglu() (in module ttnn)": [[322, "ttnn.swiglu"]], "swish() (in module ttnn)": [[323, "ttnn.swish"]], "synchronize_device() (in module ttnn)": [[324, "ttnn.synchronize_device"]], "tan() (in module ttnn)": [[325, "ttnn.tan"]], "tan_bw() (in module ttnn)": [[326, "ttnn.tan_bw"]], "tanh() (in module ttnn)": [[327, "ttnn.tanh"]], "tanh_bw() (in module ttnn)": [[328, "ttnn.tanh_bw"]], "tanhshrink() (in module ttnn)": [[329, "ttnn.tanhshrink"]], "tanhshrink_bw() (in module ttnn)": [[330, "ttnn.tanhshrink_bw"]], "threshold() (in module ttnn)": [[331, "ttnn.threshold"]], "threshold_bw() (in module ttnn)": [[332, "ttnn.threshold_bw"]], "tilize() (in module ttnn)": [[333, "ttnn.tilize"]], "tilize_with_val_padding() (in module ttnn)": [[334, "ttnn.tilize_with_val_padding"]], "to_device() (in module ttnn)": [[335, "ttnn.to_device"]], "to_layout() (in module ttnn)": [[336, "ttnn.to_layout"]], "to_memory_config() (in module ttnn)": [[337, "ttnn.to_memory_config"]], "to_torch() (in module ttnn)": [[338, "ttnn.to_torch"]], "topk() (in module ttnn)": [[339, "ttnn.topk"]], "attention_softmax() (in module ttnn.transformer)": [[340, "ttnn.transformer.attention_softmax"]], "attention_softmax_() (in module ttnn.transformer)": [[341, "ttnn.transformer.attention_softmax_"]], "concatenate_heads() (in module ttnn.transformer)": [[342, "ttnn.transformer.concatenate_heads"]], "scaled_dot_product_attention() (in module ttnn.transformer)": [[343, "ttnn.transformer.scaled_dot_product_attention"]], "scaled_dot_product_attention_decode() (in module ttnn.transformer)": [[344, "ttnn.transformer.scaled_dot_product_attention_decode"]], "split_query_key_value_and_split_heads() (in module ttnn.transformer)": [[345, "ttnn.transformer.split_query_key_value_and_split_heads"]], "tril() (in module ttnn)": [[346, "ttnn.tril"]], "triu() (in module ttnn)": [[347, "ttnn.triu"]], "trunc() (in module ttnn)": [[348, "ttnn.trunc"]], "trunc_bw() (in module ttnn)": [[349, "ttnn.trunc_bw"]], "unary_chain() (in module ttnn)": [[350, "ttnn.unary_chain"]], "untilize() (in module ttnn)": [[351, "ttnn.untilize"]], "untilize_with_halo_v2() (in module ttnn)": [[352, "ttnn.untilize_with_halo_v2"]], "untilize_with_unpadding() (in module ttnn)": [[353, "ttnn.untilize_with_unpadding"]], "upsample() (in module ttnn)": [[354, "ttnn.upsample"]], "var() (in module ttnn)": [[355, "ttnn.var"]], "where() (in module ttnn)": [[356, "ttnn.where"]], "where_bw() (in module ttnn)": [[357, "ttnn.where_bw"]], "xlogy() (in module ttnn)": [[358, "ttnn.xlogy"]], "xlogy_bw() (in module ttnn)": [[359, "ttnn.xlogy_bw"]], "zeros() (in module ttnn)": [[360, "ttnn.zeros"]], "zeros_like() (in module ttnn)": [[361, "ttnn.zeros_like"]], "memoryconfig (class in ttnn)": [[366, "ttnn.MemoryConfig"]], "tensor (class in ttnn)": [[366, "ttnn.Tensor"]], "__init__() (ttnn.memoryconfig method)": [[366, "ttnn.MemoryConfig.__init__"]], "__init__() (ttnn.tensor method)": [[366, "ttnn.Tensor.__init__"]], "buffer() (ttnn.tensor method)": [[366, "ttnn.Tensor.buffer"]], "device() (ttnn.tensor method)": [[366, "ttnn.Tensor.device"]], "get_dtype() (ttnn.tensor method)": [[366, "ttnn.Tensor.get_dtype"]], "get_layout() (ttnn.tensor method)": [[366, "ttnn.Tensor.get_layout"]], "pad() (ttnn.tensor method)": [[366, "ttnn.Tensor.pad"]], "pad_to_tile() (ttnn.tensor method)": [[366, "ttnn.Tensor.pad_to_tile"]], "storage_type() (ttnn.tensor method)": [[366, "ttnn.Tensor.storage_type"]], "to() (ttnn.tensor method)": [[366, "ttnn.Tensor.to"]], "unpad() (ttnn.tensor method)": [[366, "ttnn.Tensor.unpad"]], "unpad_from_tile() (ttnn.tensor method)": [[366, "ttnn.Tensor.unpad_from_tile"]], "adaptiveavgpool2d (class in tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.AdaptiveAvgPool2d"]], "addandnorm() (in module tt_lib.fused_ops.add_and_norm)": [[367, "tt_lib.fused_ops.add_and_norm.AddAndNorm"]], "batchnorm2d (class in tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.BatchNorm2d"]], "bcastopdim (class in ttnn)": [[367, "ttnn.BcastOpDim"]], "bcastopmath (class in ttnn)": [[367, "ttnn.BcastOpMath"]], "conv2d (class in tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.Conv2d"]], "groupnorm (class in tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.GroupNorm"]], "layernorm (class in tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.LayerNorm"]], "layernorm() (in module tt_lib.fused_ops.layernorm)": [[367, "tt_lib.fused_ops.layernorm.Layernorm"]], "linear() (in module tt_lib.fused_ops.linear)": [[367, "tt_lib.fused_ops.linear.Linear"]], "maxpool2d (class in tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.MaxPool2d"]], "binary_bitwise_and (class in tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.binary_bitwise_and"]], "binary_bitwise_left_shift (class in tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.binary_bitwise_left_shift"]], "binary_bitwise_or (class in tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.binary_bitwise_or"]], "binary_bitwise_right_shift (class in tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.binary_bitwise_right_shift"]], "binary_bitwise_xor (class in tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.binary_bitwise_xor"]], "binary_fmod (class in tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.binary_fmod"]], "bitwise_not (class in tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.bitwise_not"]], "ceil (class in tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.ceil"]], "chunk() (in module tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.chunk"]], "concat() (in module tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.concat"]], "conv2d() (in module tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.conv2d"]], "cpu() (in module ttnn.tensor)": [[367, "ttnn.Tensor.cpu"]], "floor (class in tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.floor"]], "full() (in module tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.full"]], "group_norm() (in module tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.group_norm"]], "group_norm() (in module ttnn.operations.moreh)": [[367, "ttnn.operations.moreh.group_norm"]], "group_norm_backward() (in module ttnn.operations.moreh)": [[367, "ttnn.operations.moreh.group_norm_backward"]], "interpolate() (in module tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.interpolate"]], "layer_norm() (in module tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.layer_norm"]], "logsoftmax() (in module ttnn.operations.moreh)": [[367, "ttnn.operations.moreh.logsoftmax"]], "logsoftmax_backward() (in module ttnn.operations.moreh)": [[367, "ttnn.operations.moreh.logsoftmax_backward"]], "mean() (in module ttnn.operations.moreh)": [[367, "ttnn.operations.moreh.mean"]], "mean_backward() (in module ttnn.operations.moreh)": [[367, "ttnn.operations.moreh.mean_backward"]], "norm() (in module ttnn.operations.moreh)": [[367, "ttnn.operations.moreh.norm"]], "norm_backward() (in module ttnn.operations.moreh)": [[367, "ttnn.operations.moreh.norm_backward"]], "pad() (in module tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.pad"]], "repeat() (in module tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.repeat"]], "repeat_interleave() (in module tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.repeat_interleave"]], "reshape() (in module tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.reshape"]], "silu() (in module tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.silu"]], "softmax() (in module tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.softmax"]], "softmax() (in module ttnn.operations.moreh)": [[367, "ttnn.operations.moreh.softmax"]], "softmax_backward() (in module ttnn.operations.moreh)": [[367, "ttnn.operations.moreh.softmax_backward"]], "softmin() (in module ttnn.operations.moreh)": [[367, "ttnn.operations.moreh.softmin"]], "softmin_backward() (in module ttnn.operations.moreh)": [[367, "ttnn.operations.moreh.softmin_backward"]], "tensor_slice() (in module tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.tensor_slice"]], "torch_argmax (class in tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.torch_argmax"]], "torch_argmin (class in tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.torch_argmin"]], "trunc (class in tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.trunc"]], "unary_bitwise_and (class in tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.unary_bitwise_and"]], "unary_bitwise_left_shift (class in tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.unary_bitwise_left_shift"]], "unary_bitwise_or (class in tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.unary_bitwise_or"]], "unary_bitwise_right_shift (class in tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.unary_bitwise_right_shift"]], "unary_bitwise_xor (class in tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.unary_bitwise_xor"]], "unary_fmod (class in tt_lib.fallback_ops)": [[367, "tt_lib.fallback_ops.unary_fmod"]], "shape (class in ttnn)": [[372, "ttnn.Shape"]], "rank (ttnn.shape property)": [[372, "ttnn.Shape.rank"]], "to_rank() (ttnn.shape method)": [[372, "ttnn.Shape.to_rank"]], "with_tile_padding() (ttnn.shape method)": [[372, "ttnn.Shape.with_tile_padding"]]}})