name: "[internal] Docs build and deploy to GitHub pages on main impl"

on:
  workflow_call:

concurrency:
  # Note that people may spam the post-commit pipeline on their branch, and
  # we have this docs pipeline in the post-commit pipeline, then people
  # would have to wait until the previous one fully completes. That may be
  # ok because each post-commit pipeline definitely takes more than 30 min
  group: "pages-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  build-deploy-docs:
    strategy:
      # Do not fail-fast because we need to ensure all tests go to completion
      # so we try not to get hanging machines
      fail-fast: false
      matrix:
        arch: [grayskull]
    env:
      TT_METAL_ENV: ${{ vars.TT_METAL_ENV }}
      DOCS_VERSION: latest
      ARCH_NAME: ${{ matrix.arch }}
      LOGURU_LEVEL: INFO
      LD_LIBRARY_PATH: ${{ github.workspace }}/build/lib
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          lfs: false
      - name: Set up dynamic env vars for build
        run: |
          echo "TT_METAL_HOME=$(pwd)" >> $GITHUB_ENV
      - uses: ./.github/actions/install-metal-deps
        with:
          os: ubuntu-20.04
      - uses: ./.github/actions/install-metal-dev-deps
        with:
          os: ubuntu-20.04
      - uses: actions/download-artifact@v4
        with:
          name: TTMetal_build_any
      - name: Extract files
        run: tar -xvf ttm_any.tar
      - uses: ./.github/actions/install-python-deps
      - name: Build Docs
        timeout-minutes: 15
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          source ${{ github.workspace }}/python_env/bin/activate
          cd $TT_METAL_HOME
          export PYTHONPATH=$TT_METAL_HOME
          ./tests/scripts/run_build_docs.sh
      - name: Prepare artifact - move output
        run: |
          mkdir gh_pages
          mv docs/build/html gh_pages/$DOCS_VERSION
      - name: Prepare artifact - create .nojekyll
        run: |
          touch gh_pages/.nojekyll
      - name: Prepare artifact - create root index
        run: |
          touch gh_pages/index.html
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          path: "gh_pages"
      - name: Deploy to GitHub Pages
        if: ${{ github.ref == 'refs/heads/main' }}
        id: deployment
        uses: actions/deploy-pages@v4.0.4
      - name: Delete artifact if deployment failed
        # When the deployment API call fails, the artifacts are not cleaned up correctly
        # and the next attempt (!) run will cause an error.
        # See more:
        # https://github.com/tenstorrent/tt-metal/issues/17623
        if: ${{ failure() }}
        uses: geekyeggo/delete-artifact@v5
        continue-on-error: true
        with:
            name: github-pages
      - name: Check the docs deployment is up
        if: ${{ github.ref == 'refs/heads/main' }}
        # TODO: Enhance this by looping over all the published versions in docs/published_versions.json
        run: |
          set -eu # basic shell hygiene
          curl --fail -LI https://docs.tenstorrent.com/tt-metal/latest/ttnn/index.html -o /dev/null -s
